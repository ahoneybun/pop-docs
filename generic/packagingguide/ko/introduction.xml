<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE chapter PUBLIC "-//OASIS//DTD DocBook XML V4.3//EN" 
	"http://www.oasis-open.org/docbook/xml/4.3/docbookx.dtd" [
<!ENTITY % globalent SYSTEM "../../../libs/global.ent">
%globalent;
<!ENTITY % cdo-C SYSTEM "../../../libs/cdo-C.ent">
%cdo-C;
<!ENTITY % pg-common SYSTEM "../pg-common.ent">
%pg-common;
<!ENTITY % xinclude SYSTEM "../../../libs/xinclude.mod">
%xinclude;
<!ENTITY language "en">
<!ENTITY ubuntu '<phrase>Ubuntu</phrase>'>
]>
<chapter id="intro-chap" status="review">
	<title id="intro">소개</title>
	
	<para>Welcome to the &ubuntu; Packaging Guide! This guide is
		primarily addressed to those who would like to make and
		maintain &ubuntu; packages. Although many of the concepts in
		this guide could be used to make binary packages for personal
		use, it is designed for those people wanting to distribute
		their packages to and for others. While it is also written
		with the &ubuntu; Linux distribution in mind, it should also
		be useful for any Debian-based distribution.</para>

	<para>There are several reasons you might want to learn how to
		package for Ubuntu.  First, building and fixing &ubuntu;
		packages is a great way to contribute to the &ubuntu;
		community. It is also a good way to learn how &ubuntu; and the
		applications you have installed work. Maybe you want to
		install a package that is not in the &ubuntu;
		repositories. Hopefully after you have completed this guide
		you will have the tools and knowledge you need to do all of
		these things.</para>

	<para> HTML and PDF versions of the manual are available online
			at <ulink url="&ubuntu-documentation;">the Ubuntu
			Documentation website</ulink>.  </para>
	
	<para> You can buy this guide in book form from <ulink url="&lulu-store;">our Lulu store</ulink>. You will only pay for
		the price of printing and postage.  </para>

	<sect1 id="intro-wtb" status="writing">
	  <title>Where to Begin</title>
	  <para>If you are completely new to Debian-based packaging then
	  you will want to read this guide completely through, paying
	  special attention to <xref linkend="intro-prereq"/>,
	  <xref linkend="gs-chap"/>, and
	  <xref linkend="basic-chap"/>. People who are experienced with
	  Debian-based packaging will find <xref linkend="ubuntu-chap"/>
	  and <xref linkend="bugs-chap"/> most helpful. </para>
	</sect1>

	<sect1 id="intro-prereq" status="review">
		<title>미리 필요한 것</title>
			
		<para>This guide assumes that the reader has a reasonable
			knowledge of building and installing software from source
			on Linux distributions. The guide also uses the Command
			Line Interface (CLI) throughout, so you should be
			comfortable using a terminal. You should be able to at
			least use the following:</para>

		<itemizedlist>
		  <listitem><para><emphasis role="bold">make:</emphasis> GNU
				Make is a very important software building tool. It is
				used to transform a complex compilation task into a
				trivial one. It is important that you know how to use
				it, because we will store most of the information
				about the packaging process in a
				Makefile. Documentation is available at
				the <ulink url="http://www.gnu.org/software/make/manual/make.html">GNU
			</ulink> website.</para></listitem>

		  <listitem><para><emphasis role="bold">./configure:</emphasis>This script is
				included in almost all Linux source, especially for
				software written in compiled languages such as C and
				C++. It is used to generate a Makefile (file used
				by <application>make</application>) that is properly
				configured for your system. Standard Debian packaging
				tools use it, so it is important that you know what
				the <filename>configure</filename> script
				does. Information on <filename>./configure</filename>
				can be found in the <application>make</application>
				documentation.</para></listitem>
							
		  <listitem><para><emphasis role="bold">Apt/Dpkg:</emphasis>
				Beyond the basic use of installing
				programs, <application>apt</application>
				and <application>dpkg</application> have many features
				that are useful for packaging.</para>
			<itemizedlist>
				
			  <listitem><para><emphasis role="bold">apt-cache dump</emphasis> - 캐쉬 내의 모든 패키지를 나열 합니다. 이 명령은 특히 이름 또는 의존 패키지가 <quote>foo</quote> 를 포함하는 패키지를 찾기 위해 <application>apt-cache dump | grep foo</application> 처럼 <application>grep</application> 파이프와 결합할 때 도움이 됩니다.</para></listitem>

				<listitem><para><emphasis role="bold">apt-cache policy</emphasis> - 패키지가 존재하는 저장소 (main/restricted/universe/multiverse) 를 나열 합니다.</para></listitem>

				<listitem><para><emphasis role="bold">apt-cache show </emphasis> - 바이너리 패키지에 대한 정보를 보여 줍니다.</para></listitem>

				<listitem><para><emphasis role="bold">apt-cache showsrc </emphasis> - 소스 패키지에 대한 정보를 보여 줍니다.</para></listitem>

				<listitem><para><emphasis role="bold">apt-cache rdepends </emphasis> - 무슨 패키지가 쿼리한 패키지를 필요로 하는지, 패키지의 역 의존성을 보여 줍니다.</para></listitem>

				<listitem><para><emphasis role="bold">dpkg -S </emphasis> - 특정 파일이 속하는 바이너리 패키지를 나열 합니다.</para></listitem>

				<listitem><para><emphasis role="bold">dpkg -l </emphasis> - 현재 설치된 패키지를 나열 합니다. 이것은 <application>apt-cache dump</application> 와 비슷하지만 설치된 패키지들만을 위해서 입니다.</para></listitem>
	
				<listitem><para><emphasis role="bold">dpkg -c </emphasis> - 바이너리 패키지의 내용물을 나열 합니다. 이것은 올바른 곳에 파일들이 설치 되었는지 확인하는데 유용 합니다.</para></listitem>

				<listitem><para><emphasis role="bold">dpkg -f </emphasis> - 바이너리 패키지의 control 파일을 보여 줍니다. 이것은 의존성이 올바른 지를 확인하는데 유용 합니다.</para></listitem>

				<listitem><para><emphasis role="bold">grep-dctrl</emphasis> - 패키지 내에 특정한 정보를 검색 합니다. 이것은 <application>grep</application> 패키지의 특정한 사용 입니다. (기본으로 설치되지 않습니다.)</para></listitem>

			</itemizedlist>
				
		  </listitem>

		  <listitem><para><emphasis role="bold">diff and
				patch:</emphasis> The <application>diff</application>
				program can be used to compare two files and to make
				patches. A typical example might be <application>diff
				-ruN file.old file.new &gt;
				file.diff</application>. This command will create a
				diff (recursively if directories are used) that shows
				the changes, or
				<quote>delta</quote>, between the two files.</para>

			<para><application>patch</application> 프로그램은 패치 (보통 <application>diff</application> 또는 다른 비슷한 프로그램으로 만든) 를 파일 또는 디렉토리에 적용하기 위해 사용 됩니다. 위에서 만든 패치를 적용하려면, <application>patch -p0 &lt; file.diff</application> 를 실행 합니다. <emphasis>-p</emphasis> 는 패치 내의 파일 이름을 위한 경로를 얼마나 벗어야 하는지를 <application>patch</application> 에게 알려 줍니다. -p0 는 아무 것도 벗어야 할 것이 없거나 경로를 그대로 나두는 것을 의미 합니다.</para>
			
		  </listitem>

		</itemizedlist>
		
	</sect1>

</chapter>

