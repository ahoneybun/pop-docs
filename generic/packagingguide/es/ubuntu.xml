<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE chapter PUBLIC "-//OASIS//DTD DocBook XML V4.3//EN"
	"http://www.oasis-open.org/docbook/xml/4.3/docbookx.dtd" [
<!ENTITY % globalent SYSTEM "../../../libs/global.ent">
%globalent;
<!ENTITY % cdo-C SYSTEM "../../../libs/cdo-C.ent">
%cdo-C;
<!ENTITY % pg-common SYSTEM "../pg-common.ent">
%pg-common;
<!ENTITY % xinclude SYSTEM "../../../libs/xinclude.mod">
%xinclude;
<!ENTITY language "en">
]>
<chapter id="ubuntu-chap" status="complete">
	<title>El empaquetado en Ubuntu</title>

	<sect1 id="ubuntu-upload" status="complete">
		<title>Subir y revisar</title>

		<para>Once you have created a source package (either a completely new package or
			just an update/bugfix), you will want to distribute your
			package so that other people can enjoy your hard work. The most effective way
			to do that for <phrase>Ubuntu</phrase> is to contribute your package to the Universe repository.
			The community developers who are responsible for the Universe repository are
			known as Masters of the Universe (<ulink url="https://wiki.ubuntu.com/MOTU">MOTU</ulink>). <ulink url="http://revu.tauware.de">REVU</ulink> is a web-based tool that gives
			people a place to upload their source packages for other people to look at and
			for MOTUs to review in a structured manner.</para>

		<sect2 id="contribute-as-uploader">
			<title>Contribuir como empaquetador</title>
		
			<para>Para empezar, deberá tener su <ulink url="https://wiki.ubuntu.com/GPGKey">clave GPG</ulink> añadida al anillo de claves REVU. Este paso asegura que sus paquetes realmente provienen de usted y ayuda a seguir la pista de las subidas.</para>
	
			<para>REVU uses your <ulink url="https://launchpad.net">Launchpad</ulink> account to look up your <application>gpg</application> key so make sure you have a Launchpad account and you have put your <application>gpg</application> key in your user profile there. Once this is one you can join the <ulink url="https://launchpad.net/people/ubuntu-universe-contributors">Universe Contributors</ulink> team and then email <ulink url="mailto:admin@tiber.tauware.de">admin@tiber.tauware.de</ulink> asking for your <application>gpg</application> key to be updated on REVU. When this is done you will be able to upload your packages. You don't	need a password to upload packages, only to log in to the website and to reply to comments.</para>

			<note><para>No necesita tener su clave firmada por otros para subir a REVU, pero es una buena idea hacerlo en algún momento.</para></note>
			
			
			<sect3 id="upload-your-packages">
				<title>Subir sus paquetes</title>

				<para>Uploading to REVU uses <application>dput</application>. The <phrase>Ubuntu</phrase>
					version of <application>dput</application> already knows about REVU so
					you do not need to change any configuration files. Only upload signed
					packages, and unlike other repositories, you should always include the
					original tarball, otherwise reviewers will not be able to look at your
					extracted source package. In order to do so, use the options "-S -sa"
					with <application>debuild</application> or
					<application>dpkg-buildpackage</application> to build only the source
					package and to include the original source in the upload.</para>
				
				<para>Después de construir el paquete fuente, puede usar <application>dput</application> con los cambios anteriores del archivo de configuración para subirlo especificando sólo el archivo <filename>_source.changes</filename> que fué creado:</para>

				<screen>dput revu *_source.changes</screen>

				<note><para>Si está volviendo a subir un paquete modificado (después de recibir las revisiones), podría obtener un error como éste:</para>
					
				<screen>
Subir el paquete al servidor revu
Ya se ha subido a tauware.de
No hacer nada para myapp_source.changes</screen>
			
				<para>Para corregir, añada la opción -f a dput para forzar la subida o elimine el fichero <filename>.upload</filename> que fué creado por la aplicación <application>dput</application>.</para></note>
			
				<para>Processing of uploads is done every five minutes, so if your upload does not show up,
				please contact the REVU administrators by email, or join the Freenode IRC channel #ubuntu-motu.</para>
		
			</sect3>
		
			<sect3 id="howto-login">
				<title>Como identificarse en REVU</title>
			
				<para>Después de su primera subida, se le registrará automáticamente en la base de datos y se le asignará una contraseña aleatoria. En la página web <ulink url="http://revu.tauware.de">REVU</ulink>, use la dirección de correo electrónico que usó en el fichero changelog de su subida como identificativo y pulse en el enlace 'recuperar contraseña'. Se le dirigirá a una página que contiene su contraseña encriptada con instrucciones para desencriptarla.</para>
				
			</sect3>

			<sect3 id="view-and-comment-uploads">
				<title>Ver y comentar subidas</title>
			
				<para>Los paquetes subidos a REVU son públicos. Puede navegar por ellos sin necesidad de identificarse. De todas formas, los comentarios y las subidas sólo están disponibles para los usuarios registrados. Como subidor, sólo puede comentar sus propias subidas. Esto puede ser útil para dar a los revisores alguna información sobre los cambios realizados entre dos subidas de sus paquetes.</para>

			</sect3>

			<sect3 id="additional-rules">
				<title>Reglas adicionales</title>
		
				<itemizedlist>

					<listitem><para>Debe haber revisado las vulnerabilidades de seguridad conocidas del paquete y debe proveer parches para ellas.</para></listitem>
					
					<listitem><para>El paquete puede se rechazado en base a problemas de seguridad conocidos.</para></listitem>
					
					<listitem><para>Debe haber incluido un fichero con el copyright y la licencia, y éstos deben permitir la inclusión del paquete en el componente Universe y la redistribuición vía los mirrors de Ubuntu.</para></listitem>
					
					<listitem><para>The package must be known to build on top of the main component
							of the current <phrase>Ubuntu</phrase> stable release. It is permissible to require other
							packages already in Universe.</para></listitem>
				</itemizedlist>
			</sect3>

			<sect3 id="getting-help">
				<title>Obteniendo ayuda</title>
				<para>If you need assistance on these steps, or if you have questions about REVU, you can
					ask in #ubuntu-motu on the Freenode IRC network.</para>
			</sect3>

		</sect2>

	</sect1>

	<sect1 id="ubuntu-sync" status="complete">
		<title>Mezclas y sincronizaciones</title>



		<important><para><emphasis role="bold">Requerimientos:</emphasis> build-essential, automake, gnupg, lintian, fakeroot, patchutils, debhelper and <xref linkend="gs-pbuilder"/>.</para></important>
		
		<para><phrase>Ubuntu</phrase> is based on the Debian Linux distribution and uses the same package
			management system (APT). At the beginning of each <phrase>Ubuntu</phrase> development cycle, the
			packages in <phrase>Ubuntu</phrase> are updated to those in the Debian unstable branch. However,
			because <phrase>Ubuntu</phrase> is not the same as Debian, some of the packages need to
			be modified to work in <phrase>Ubuntu</phrase>. There might also be bug fixes that <phrase>Ubuntu</phrase>
			developers have introduced into the packages. You can determine whether this has
			taken place by noting the package version. If the package version includes
			ubuntu in it (an example would be gimp-2.2.9-3ubuntu2), then the <phrase>Ubuntu</phrase>
			developers have made changes, and it is no longer the same as the Debian package.
			There are more than 1000 such modified packages in the Universe repository.</para>
		
		<para>At the start of each Ubuntu development cycle, a decision is made regarding
			these Ubuntu versioned packages. Of course if the Debian version hasn't
			changed since the last <phrase>Ubuntu</phrase> release, then nothing needs to be changed.
			However, if there is a newer version of the package in Debian, then one
			of two things should happen. If all of the reasons for Ubuntu modifications
			(bug fixes, dependencies, etc.) are fixed in the new Debian package,
			then we can just take the Debian package directly. This decision is called a
			<emphasis>sync</emphasis>. However, if the new Debian version has the same
			issues that caused the Ubuntu version to be made, then those changes need
			to be applied to the new Debian version, too. This decision is called <emphasis>merging</emphasis>.
		</para>
		<sect2 id="merge-tutorial">
			<title>Tutorial de «merging»</title>
			<para>El proceso de «merging» implica buscar los cambios tanto para los paquetes fuente de Debian como de Ubuntu y determinar qué ha cambiado y qué cambios son específicos de Ubuntu. Veamos un ejemplo: un programa bastante frecuente de creación de CDs llamado <application>xcdroast</application>.</para>
			<para>Para empezar, cree un directorio para nuestro proyecto, y cambiese a él.</para>
			<screen>
mkdir ~/xcdroast
cd ~/xcdroast</screen>
			<para>Ahora descargue todos los paquetes fuente involucrados en este directorio:</para>
			<itemizedlist>
				<listitem><para>El tarball fuente <application>xcdroast</application> que es usado por todas las versiones:</para>
					<itemizedlist>
						<listitem>
<para><ulink url="http://snapshot.debian.net/archive/2006/01/16/debian/pool/main/x/xcdroast/xcdroast_0.98+0alpha15.orig.tar.gz">xcdroast_0.98+0alpha15.orig.tar.gz</ulink></para>
						</listitem>
					</itemizedlist>
				</listitem>
				<listitem>
					<para>The <phrase>Ubuntu</phrase> Breezy source package files:</para>
					<itemizedlist>
						<listitem><para>
<ulink url="http://doc.ubuntu.com/files/packagingguide/xcdroast_0.98+0alpha15-1.1ubuntu1.dsc">xcdroast_0.98+0alpha15-1.1ubuntu1.dsc</ulink></para>
						</listitem>
						<listitem><para>
<ulink url="http://doc.ubuntu.com/files/packagingguide/xcdroast_0.98+0alpha15-1.1ubuntu1.diff.gz">xcdroast_0.98+0alpha15-1.1ubuntu1.diff.gz</ulink></para>
						</listitem>
					</itemizedlist>
				</listitem>
				<listitem>
					<para>Los paquetes fuente de Debian de los que derivan los paquetes de Breezy:</para>
						<itemizedlist>
							<listitem>
<para><ulink url="http://doc.ubuntu.com/files/packagingguide/xcdroast_0.98+0alpha15-1.1.diff.gz">xcdroast_0.98+0alpha15-1.1.diff.gz</ulink></para>
							</listitem>
							<listitem>
<para><ulink url="http://doc.ubuntu.com/files/packagingguide/xcdroast_0.98+0alpha15-1.1.dsc">xcdroast_0.98+0alpha15-1.1.dsc</ulink></para>
							</listitem>
						</itemizedlist>
				</listitem>
				<listitem>
					<para>Los nuevos paquetes fuente de Debian de los que derivarán los paquetes de Dapper:</para>
					<itemizedlist>
						<listitem>
<para><ulink url="http://doc.ubuntu.com/files/packagingguide/xcdroast_0.98+0alpha15-3.dsc">xcdroast_0.98+0alpha15-3.dsc</ulink></para>
						</listitem>
						<listitem>
<para><ulink url="http://doc.ubuntu.com/files/packagingguide/xcdroast_0.98+0alpha15-3.diff.gz">xcdroast_0.98+0alpha15-3.diff.gz</ulink></para>
						</listitem>
					</itemizedlist>
				</listitem>
			</itemizedlist>
			<note><para>Estos pasos también pueden ser realizados buscando los paquetes de Debian en <ulink url="packages.debian.org">packages.debian.org</ulink> y los paquetes de Ubuntu en <ulink url="packages.ubuntu.com">packages.ubuntu.com</ulink>.</para></note>
		<tip><para>Un paquete verdaderamente útil para realizar «merges» (o cualquier empaquetado para Ubuntu) es <application>devscripts</application>. Si no lo tiene, instálelo antes de continuar.</para></tip>
			
			<para>By looking at the <phrase>Ubuntu</phrase> changelog you should be able to see which differences
				to expect between the Ubuntu package and the Debian package from which it was derived.
				For xcdroast, the <phrase>Ubuntu</phrase> changelog can be found at
	<ulink url="http://changelogs.ubuntu.com/changelogs/pool/universe/x/xcdroast/xcdroast_0.98+0alpha15-1.1ubuntu1/changelog">
					changelogs.ubuntu.com</ulink>. It says that a .desktop file was fixed and properly
				installed to close a bug reported in
				<ulink url="https://launchpad.net/malone/bugs/2698">Malone</ulink>.
			</para>
			
			<para>Ahora inspeccione los verdaderos cambios en los paquetes fuente:</para>
			<screen>
debdiff xcdroast_0.98+0alpha15-1.1.dsc xcdroast_0.98+0alpha15-1.1ubuntu1.dsc | \
	ubuntu.debdiff | less ubuntu.debdiff</screen>
			
			<para>The lines that start with - have been removed from the Debian package, and those that start
				with + have been added to the <phrase>Ubuntu</phrase> package.</para>
			<para>Vemos lo siguiente:</para>
			<itemizedlist>
				<listitem>
					<para>En debian/rules se usa install en lugar de cp para instalar el icono de xcdroast. Además, hay una nueva línea instalando el archivo .desktop.</para>
				</listitem>
				<listitem>
					<para>En debian/changelog los cambios realizados son añadidos a la entrada changelog.</para>
				</listitem>
				<listitem>
					<para>En debian/dirs se ha añadido usr/share/applications para que las líneas install de arriba funcionen correctamente.</para>
				</listitem>
				<listitem>
					<para>añadido xcdroast.desktop</para>
				</listitem>
			</itemizedlist>
			
			<para>Ahora se sabe como han cambiado las fuentes de Ubuntu. Ahora necesita ver qué ha cambiado en las fuentes de Debian.</para>
			<screen>
debdiff xcdroast_0.98+0alpha15-1.1.dsc xcdroast_0.98+0alpha15-3.dsc &gt; debian.debdiff
less debian.debdiff</screen>
			<para>Hay mucho más en este debdiff que en el anterior. Una manera de formarse una idea mejor de lo que ha cambiado es ver qué ficheros fueron modificados en el debdiff.</para>
			
			<screen>grep diff debian.debdiff</screen>
			
			<para>Esto indica que debian/postinst, debian/rules, debian/changelog, debian/doc-base.manual, debian/control, y debian/menu fueron modificados en la nueva versión de Debian.</para>
			<para>Thus we can see that we need to check debian/rules to see if the <phrase>Ubuntu</phrase> changes were made.
				We can also see that debian/dirs was not changed from the old Debian version. Let us
				now look at the files. We can unpack the source package by using
				<application>dpkg-source</application>:</para>
			
			<screen>dpkg-source -x xcdroast_0.98+0alpha15-3.dsc</screen>
			
			<para>Esto descomprimirá el fichero xcdroast_0.98+0alpha15.orig.tar.gz, creará un directorio xcdroast-0.98+0alpha15, y aplicará los cambios encontrados en xcdroast_0.98+0alpha15-3.diff.gz.</para>
			<para>Ahora cambie al directorio debian:</para>
			
			<screen>cd xcdroast-0.98+0alpha15/debian</screen>
			
			<para>One can see in <filename>rules</filename> that changes made by <phrase>Ubuntu</phrase> were not applied to the new Debian version.
				This means that:</para>
			
			<screen>cp debian/xcdroast.xpm `pwd`/debian/$(PACKAGE)/usr/share/pixmaps</screen>
			
			<para>...debería ser cambiado a:</para>
			
			<screen>
#cp debian/xcdroast.xpm `pwd`/debian/$(PACKAGE)/usr/share/pixmaps

#install desktop and icon
install -D -m 644 $(CURDIR)/debian/xcdroast.desktop \
	$(CURDIR)/debian/xcdroast/usr/share/applications/xcdroast.desktop
install -D -m 644 $(CURDIR)/debian/xcdroast.xpm \
	$(CURDIR)/debian/xcdroast/usr/share/pixmaps/xcdroast.xpm</screen>

			<para>Ahora en <filename>dirs</filename>, se necesita añadir la siguiente línea para que el fichero .desktop sea instalado:</para>
			<screen>usr/share/applications</screen>
			
			<para>Ahora necesita el fichero .desktop actual (guardado como <emphasis>debian/xcdroast.desktop</emphasis>). Desde el ubuntu.debdiff (o desde el paquete fuente de Ubuntu), puede ver que es:</para>
			<screen>
[Desktop Entry]
Encoding=UTF-8
Name=X-CD-Roast
Comment=Create a CD
Exec=xcdroast
Icon=xcdroast.xpm
Type=Application
Categories=Application;AudioVideo;</screen>
			
			<para>The last change that needs to be made is in <filename>changelog</filename>. 
				Not only do we need to add what we have just done (merge with Debian), but we 
				should also add in the previous <phrase>Ubuntu</phrase> changelog entries. To do this, run 
				<application>dch -i -D dapper</application> and put something to the effect of:</para>
			<screen>
xcdroast (0.98+0alpha15-3<emphasis>ubuntu1</emphasis>) dapper; urgency=low

  * Resincronizar con Debian.</screen>

			<para>Make sure to change the version number to the correct <phrase>Ubuntu</phrase> version.
				Also add:</para>
			<screen>
xcdroast (0.98+0alpha15-1.1ubuntu1) breezy; urgency=low

  * Fix and install existing .desktop file. (Closes Malone #2698)
				
  -- Captain Packager &lt;packager@coolness.com&gt;  Sat,  1 Oct 2005 19:39:04 -0400</screen>
			<para>entre las entradas de registro de 0.98+0alpha15-1.1 y 0.98+0alpha15-2.</para>
			
			<para>Ahora puede construir y probar el nuevo paquete fuente. Hay diferentes maneras de hacer ésto, pero un ejemplo es:</para>
			<screen>
cd..
debuild -S
cd..
sudo pbuilder build xcdroast_0.98+0alpha15-3ubuntu1.dsc</screen>
			
			<para>This will recreate the source package, sign it with your default GPG key, and build the package in a pbuilder
				environment to make sure it builds correctly. Make sure to always test your packages
				before submitting patches. The last step is to make a debdiff that can be
				attached to an existing bug report or given to the MOTUs in the #ubuntu-motu IRC channel. To do this,
				we get the difference between the Debian unstable source package and the new <phrase>Ubuntu</phrase> version:
			</para>
			<screen>debdiff xcdroast_0.98+0alpha15-3.dsc xcdroast_0.98+0alpha15-3ubuntu1.dsc &gt; \
	xcdroast_0.98+0alpha15-3ubuntu1.debdiff</screen>
		</sect2>
	</sect1>

	<sect1 id="ubuntu-kubuntu" status="complete">
		<title>Empaquetado para Kubuntu</title>
		
		<para>Como uno se puede imaginar, los principales problemas de empaquetamiento en Kubuntu son con KDE y Qt.</para>
		
		<sect2 id="build-dependencies">
			<title>Construyendo Dependencias</title>
	
			<para>Kubuntu programs are mostly KDE ones. Therefore, they need to
				Build-Depend on <filename>kdelibs4-dev</filename>. Since KDE's
				focus is to have programs interacting, some programs might also need to
				Build-Depend on other parts of KDE, such as
				<filename>kdepim-dev</filename>. Be sure to get the list of
				necessary dependencies for your program.</para>
	
		</sect2>

		<sect2 id="desktop-files">
			<title>Archivos del Escritorio</title>
		
			<para>KDE has some specific paths. Most settings for KDE are installed in either
				<filename>/etc/kde3/</filename> or <filename>/usr/share/apps/</filename>.
				It is important to note that the general desktop files for KDE should go
				to <filename>/usr/share/applications/kde/</filename>. The install path
				for the desktop files should be fixed if they do not use this (except for
				desktop files like service menus).  </para>
			
			<para>Los archivos del escritorio KDE también necesitan una entrada específica para aparecer en Kmenu. Un archivo mínimo para un programa de KDE puede ser como esto:</para>
				
			<screen>[Desktop Entry]
Encoding=UTF-8
Name=Kfoo
Name[xx]=Kfoo
GenericName=Bar description
Exec=kfoo
Icon=kfoo
Terminal=false
Categories=Qt;KDE;Utility;</screen>

			<para>Note that the Categories field must begin with Qt;KDE;. There are
				specific desktop file entries for KDE programs and modules that allow su to
				declare the given programs as KCModules or autostart them when logging in.
			</para>
	
		</sect2>
		
		<sect2 id="generating-pot-files">
			<title>Generando Ficheros .pot</title>

			<para>The Ubuntu translation website, <ulink url="https://launchpad.net/rosetta/">Rosetta</ulink>, now supports KDE,
				which means KDE packages need to support Rosetta by generating .pot
				template files for translators. If you use <application>cdbs</application>
				in edgy, your package should now automatically build and check
				for a .pot file in po/ directory.</para>

			<para>Necesita el <ulink url="../files/kubuntu_01_kdepot.diff">parche de kdepot</ulink> (o similar; puede que no se aplque de manera limpia dependiendo de la antigüedad del directorio de admin).</para>

			<para>Si su paquete utiliza <application>debhelper</application> o <application>cdbs</application> e incluye su propio archivo kde.mk, necesitará añadir las reglas por su cuenta.</para>

			<para>Para <application>cdbs</application>, añada esas líneas a debian/rules:</para>

			<screen>
common-post-build-arch::
	mkdir -p po
        XGETTEXT=/usr/bin/kde-xgettext sh admin/cvs.sh extract-messages

clean::
        rm -rf po</screen>
			<para>Para <application>debhelper</application>, añada lo siquiente al final de la regla <emphasis>install</emphasis>:</para>
			<screen>
mkdir -p po
XGETTEXT=/usr/bin/kde-xgettext sh admin/cvs.sh extract-messages</screen>
			<para>También para <application>debhelper</application>, añada lo siguiente a la regla <emphasis>clean</emphasis>:</para>
			<screen>
rm -f po/*.pot</screen>
		</sect2>
		
	</sect1>

</chapter>

