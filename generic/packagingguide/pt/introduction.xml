<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE chapter PUBLIC "-//OASIS//DTD DocBook XML V4.3//EN" 
	"http://www.oasis-open.org/docbook/xml/4.3/docbookx.dtd" [
<!ENTITY % globalent SYSTEM "../../../libs/global.ent">
%globalent;
<!ENTITY % cdo-C SYSTEM "../../../libs/cdo-C.ent">
%cdo-C;
<!ENTITY % pg-common SYSTEM "../pg-common.ent">
%pg-common;
<!ENTITY % xinclude SYSTEM "../../../libs/xinclude.mod">
%xinclude;
<!ENTITY language "en">
<!ENTITY ubuntu '<phrase>Ubuntu</phrase>'>
]>
<chapter id="intro-chap" status="review">
	<title id="intro">Introdução</title>
	
	<para>Welcome to the <phrase>Ubuntu</phrase> Packaging Guide! This guide is
		primarily addressed to those who would like to make and
		maintain <phrase>Ubuntu</phrase> packages. Although many of the concepts in
		this guide could be used to make binary packages for personal
		use, it is designed for those people wanting to distribute
		their packages to and for others. While it is also written
		with the <phrase>Ubuntu</phrase> Linux distribution in mind, it should also
		be useful for any Debian-based distribution.</para>

	<para>There are several reasons you might want to learn how to
		package for Ubuntu.  First, building and fixing <phrase>Ubuntu</phrase>
		packages is a great way to contribute to the <phrase>Ubuntu</phrase>
		community. It is also a good way to learn how <phrase>Ubuntu</phrase> and the
		applications you have installed work. Maybe you want to
		install a package that is not in the <phrase>Ubuntu</phrase>
		repositories. Hopefully after you have completed this guide
		you will have the tools and knowledge you need to do all of
		these things.</para>

	<para> HTML and PDF versions of the manual are available online
			at <ulink url="http://help.ubuntu.com">the Ubuntu
			Documentation website</ulink>.  </para>
	
	<para> You can buy this guide in book form from <ulink url="http://www.lulu.com/ubuntu-doc">our Lulu store</ulink>. You will only pay for
		the price of printing and postage.  </para>

	<sect1 id="intro-wtb" status="writing">
	  <title>Onde Começar</title>
	  <para>Se é completamente novo para si o empacotamento baseado em Debian então quererá ler este guia exaustivamente, prestando especial atenção a <xref linkend="intro-prereq"/>, <xref linkend="gs-chap"/>, e <xref linkend="basic-chap"/>. As pessoas que já têm experiência com o sistema de empacotamento baseado no Debian acharão <xref linkend="ubuntu-chap"/> e <xref linkend="bugs-chap"/> muito úteis.</para>
	</sect1>

	<sect1 id="intro-prereq" status="review">
		<title>Pré-requisitos</title>
			
		<para>Este guia assume que o leitor tem um conhecimento razoável de construção e instalação de software a partir da fonte em distribuições Linux. O guia também usa o Command Line Interface (CLI) exaustivamente, por isso deverá sentir-se confortável com o uso de um terminal. Deverá conseguir pelo menos usar o seguinte:</para>

		<itemizedlist>
		  <listitem><para><emphasis role="bold">make:</emphasis> O GNU Make é uma ferramenta muito importante de compilação de software. É usado para transformar uma tarefa complexa de compilação numa trivial. É importante que aprenda a usá-lo, porque armazenaremos a maioria da informação acerca do processo de empacotamento num Makefile. A documentação está disponível no website url="http://www.gnu.org/software/make/manual/make.html"&gt;GNU </para></listitem>

		  <listitem><para><emphasis role="bold">./configure:</emphasis> Este script é incluído em quase todas as fonte Linux, especialmente para software escrito em linguagens compiladas como o C e C++. É usado para gerar um Makefile (ficheiro usado pelo <application>make</application>) que é configurado correctamente para o seu sistema. As ferramentas standard Debian de empacotamento usam-no, por isso é muito importante que saiba o que o script <filename>configure</filename> faz. Informação sobre o <filename>./configure</filename> pode ser encontrada na documetação do <application>make</application>.</para></listitem>
							
		  <listitem><para>O <emphasis role="bold">Apt/Dpkg:</emphasis> além do uso básico para instalar programas, o <application>apt</application> e o <application>dpkg</application> têm muitas funcionalidades que são úteis para empacotamento.</para>
			<itemizedlist>
				
			  <listitem><para><emphasis role="bold">apt-cache dump</emphasis> - lista todos os pacotes em cache. Este comando é especialmente útil em combinação com um filtro do <application>grep</application> tal como <application>apt-cache dump | grep foo</application> para procurar pacotes cujos nomes ou dependências incluem <quote>foo</quote>.</para></listitem>

				<listitem><para><emphasis role="bold">apt-cache policy</emphasis> - lista os repositórios (main/restricted/universe/multiverse) nos quais um pacote se encontra.</para></listitem>

				<listitem><para><emphasis role="bold">apt-cache show </emphasis> - mostra informação sobre um pacote binário.</para></listitem>

				<listitem><para><emphasis role="bold">apt-cache showsrc </emphasis> - mostra informação sobre um pacote fonte.</para></listitem>

				<listitem><para><emphasis role="bold">apt-cache rdepends </emphasis> - mostra dependências recursivas para um pacote (quais os pacotes requeridos pelo procurado).</para></listitem>

				<listitem><para><emphasis role="bold">dpkg -S </emphasis> - lista o pacote binário a que determinado ficheiro pertence.</para></listitem>

				<listitem><para><emphasis role="bold">dpkg -l </emphasis> - lista os pacotes instalados actualmente. Isto é similar a <application>apt-cache dump</application> mas para pacotes instalados.</para></listitem>
	
				<listitem><para><emphasis role="bold">dpkg -c </emphasis> - lista o conteúdo de um pacote binário. É útil para assegurar que os ficheiros são instalados nos locais correctos.</para></listitem>

				<listitem><para><emphasis role="bold">dpkg -f </emphasis> - mostra o ficheiro de controlo para um pacote binário. É útil para assegurar que as dependências estão correctas.</para></listitem>

				<listitem><para><emphasis role="bold">grep-dctrl</emphasis> - procura por informação específica em pacotes. Tem uso específico no pacote <application>grep</application> (mas não é instalado por defeito).</para></listitem>

			</itemizedlist>
				
		  </listitem>

		  <listitem><para><emphasis role="bold">diff and patch:</emphasis> O programa <application>diff</application> pode ser usado para comparar dois ficheiros e para fazer correcções. Um exemplo típico pode ser <application>diff -ruN file.old file.new &gt; file.diff</application>. Este comando criará um diff (recursivamente se as directorias são usadas) que mostrará as mudanças, ou <quote>delta</quote>, entre os dois ficheiros.</para>

			<para>A aplicação <application>patch</application> é usado para aplicar uma correcção (geralmente criada pelo programa <application>diff</application> ou outro programa semelhante) para um ficheiro ou directoria. Para aplicar a correcção criada anteriormente, podemos invocar <application>patch -p0 &lt; file.diff</application>. O <emphasis>-p</emphasis> diz ao <application>patch</application> quanto deverá retirar dos caminhos para os nomes dos ficheiros na correcção. -p0 significa não retirar nada, ou deixar o caminho intacto.</para>
			
		  </listitem>

		</itemizedlist>
		
	</sect1>

</chapter>

