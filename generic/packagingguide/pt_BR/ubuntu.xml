<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE chapter PUBLIC "-//OASIS//DTD DocBook XML V4.3//EN"
	"http://www.oasis-open.org/docbook/xml/4.3/docbookx.dtd" [
<!ENTITY % globalent SYSTEM "../../../libs/global.ent">
%globalent;
<!ENTITY % cdo-C SYSTEM "../../../libs/cdo-C.ent">
%cdo-C;
<!ENTITY % pg-common SYSTEM "../pg-common.ent">
%pg-common;
<!ENTITY % xinclude SYSTEM "../../../libs/xinclude.mod">
%xinclude;
<!ENTITY language "en">
]>
<chapter id="ubuntu-chap" status="complete">
	<title>Empacotamento no Ubuntu</title>

	<sect1 id="ubuntu-upload" status="complete">
		<title>Enviando e Revisão</title>

		<para>Once you have created a source package (either a completely new package or
			just an update/bugfix), you will want to distribute your
			package so that other people can enjoy your hard work. The most effective way
			to do that for &ubuntu; is to contribute your package to the Universe repository.
			The community developers who are responsible for the Universe repository are
			known as Masters of the Universe (<ulink url="https://wiki.ubuntu.com/MOTU">MOTU</ulink>). <ulink url="http://revu.tauware.de">REVU</ulink> is a web-based tool that gives
			people a place to upload their source packages for other people to look at and
			for MOTUs to review in a structured manner.</para>

		<sect2 id="contribute-as-uploader">
			<title>Contribuindo como um Enviador</title>
		
			<para>Primeiramente, você deve adicionar a sua <ulink url="https://wiki.ubuntu.com/GPGKey">Chave GPG</ulink> no chaveiro do REVU. Este passo garante que seus pacotes estão realmente sendo enviados por você e nos ajudar a manter controle sobre envios.</para>
	
			<para>REVU uses your <ulink url="https://launchpad.net">Launchpad</ulink> account to look up your <application>gpg</application> key so make sure you have a Launchpad account and you have put your <application>gpg</application> key in your user profile there. Once this is one you can join the <ulink url="https://launchpad.net/people/ubuntu-universe-contributors">Universe Contributors</ulink> team and then email <ulink url="mailto:admin@tiber.tauware.de">admin@tiber.tauware.de</ulink> asking for your <application>gpg</application> key to be updated on REVU. When this is done you will be able to upload your packages. You don't	need a password to upload packages, only to log in to the website and to reply to comments.</para>

			<note><para>Não é necessário ter uma chave assinada por outros para enviar para REVU, mas é uma boa idéia fazer isso em algum momento.</para></note>
			
			
			<sect3 id="upload-your-packages">
				<title>Enviando seus pacotes</title>

				<para>Uploading to REVU uses <application>dput</application>. The &ubuntu;
					version of <application>dput</application> already knows about REVU so
					you do not need to change any configuration files. Only upload signed
					packages, and unlike other repositories, you should always include the
					original tarball, otherwise reviewers will not be able to look at your
					extracted source package. In order to do so, use the options "-S -sa"
					with <application>debuild</application> or
					<application>dpkg-buildpackage</application> to build only the source
					package and to include the original source in the upload.</para>
				
				<para>Depois que o pacote fonte é construído, você pode usar o <application>dput</application> com as alterações no arquivo de configuração acima para fazer o seu upload especificando apenas o arquivo <filename>_source.changes</filename> que foi criado:</para>

				<screen>dput revu *_source.changes</screen>

				<note><para>Se você está re-enviando um pacote alterado (depois de receber revisões) você pode receber um erro como este:</para>
					
				<screen>
Enviar pacote para o servidor revu
Já foi enviado para tauware.de
Fazendo nada para myapp_source.changes</screen>
			
				<para>Para fixar, adicionar a opção -f ao dput para forçar o envio ou remover o arquivo <filename>.upload</filename> que foi criado pelo <application>dput</application>.</para></note>
			
				<para>Processing of uploads is done every five minutes, so if your upload does not show up,
				please contact the REVU administrators by email, or join the &irc-network; IRC channel #ubuntu-motu.</para>
		
			</sect3>
		
			<sect3 id="howto-login">
				<title>Como logar no REVU</title>
			
				<para>After your first upload, you are registered automatically in the
					database and assigned a random password. On the <ulink url="http://revu.tauware.de">REVU</ulink> website, use the email
					address you used in the changelog file of your upload as the login and
					click the 'recover password' link. You will be taken to a page that
					has your encrypted password with instructions for decrypting
					it.</para>
				
			</sect3>

			<sect3 id="view-and-comment-uploads">
				<title>Visualizar e comentar envios</title>
			
				<para>Packages uploaded to REVU are public. You can browse them without logging
					in to the system. However, commenting on uploads is available only to registered
					users. As an uploader, you can only comment on your own uploads. This can be
					useful to give reviewers some info on the changes you have made between two
					uploads of your packages.</para>

			</sect3>

			<sect3 id="additional-rules">
				<title>Regras adicionais</title>
		
				<itemizedlist>

					<listitem><para>Você precisa ter o pacote revisto para saber a respeito de vulnerabilidades de segurança e precisa fornecer correções para eles.</para></listitem>
					
					<listitem><para>O pacote pode ser recusado inicialmente por problemas de segurança conhecidos.</para></listitem>
					
					<listitem><para>Você precisa incluir um arquivo de copyright e licença, e eles precisam permitir a inclusão do pacote como componente do Universe e re-distribuição via mirrors do Ubuntu.</para></listitem>
					
					<listitem><para>The package must be known to build on top of the main component
							of the current &ubuntu; stable release. It is permissible to require other
							packages already in Universe.</para></listitem>
				</itemizedlist>
			</sect3>

			<sect3 id="getting-help">
				<title>Obtendo Ajuda</title>
				<para>If you need assistance on these steps, or if you have questions about REVU, you can
					ask in #ubuntu-motu on the &irc-network; IRC network.</para>
			</sect3>

		</sect2>

	</sect1>

	<sect1 id="ubuntu-sync" status="complete">
		<title>Mescle e Sincronize</title>



		<important><para><emphasis role="bold">Exigências:</emphasis> build-essential, automake, gnupg, lintian, fakeroot, patchutils, debhelper e <xref linkend="gs-pbuilder"/>.</para></important>
		
		<para>&ubuntu; is based on the Debian Linux distribution and uses the same package
			management system (APT). At the beginning of each &ubuntu; development cycle, the
			packages in &ubuntu; are updated to those in the Debian unstable branch. However,
			because &ubuntu; is not the same as Debian, some of the packages need to
			be modified to work in &ubuntu;. There might also be bug fixes that &ubuntu;
			developers have introduced into the packages. You can determine whether this has
			taken place by noting the package version. If the package version includes
			ubuntu in it (an example would be gimp-2.2.9-3ubuntu2), then the &ubuntu;
			developers have made changes, and it is no longer the same as the Debian package.
			There are more than 1000 such modified packages in the Universe repository.</para>
		
		<para>At the start of each Ubuntu development cycle, a decision is made regarding
			these Ubuntu versioned packages. Of course if the Debian version hasn't
			changed since the last &ubuntu; release, then nothing needs to be changed.
			However, if there is a newer version of the package in Debian, then one
			of two things should happen. If all of the reasons for Ubuntu modifications
			(bug fixes, dependencies, etc.) are fixed in the new Debian package,
			then we can just take the Debian package directly. This decision is called a
			<emphasis>sync</emphasis>. However, if the new Debian version has the same
			issues that caused the Ubuntu version to be made, then those changes need
			to be applied to the new Debian version, too. This decision is called <emphasis>merging</emphasis>.
		</para>
		<sect2 id="merge-tutorial">
			<title>Tutorial Mesclando</title>
			<para>O processo de mesclagem envolve observar as mudanças entre os pacotes fontes no Debian e no Ubuntu e deteminando  o que mudaram e quais mudanças são especificas do Ubuntu. Deixe-nos agora observar um exemplo, um popular programa de gravação de CD chamado <application>xcdroast</application>.</para>
			<para>Para iniciar, crie uma pasta para manter nosso projeto, então navegue lá:</para>
			<screen>
mkdir ~/xcdroast
cd ~/xcdroast</screen>
			<para>Agora baixe todos os pacotes fontes envolvidos dentro deste diretório:</para>
			<itemizedlist>
				<listitem><para>Um <application>xcdroast</application> fonte tarball que é usado para todas as versões:</para>
					<itemizedlist>
						<listitem>
<para><ulink url="http://snapshot.debian.net/archive/2006/01/16/debian/pool/main/x/xcdroast/xcdroast_0.98+0alpha15.orig.tar.gz">xcdroast_0.98+0alpha15.orig.tar.gz</ulink></para>
						</listitem>
					</itemizedlist>
				</listitem>
				<listitem>
					<para>The &ubuntu; Breezy source package files:</para>
					<itemizedlist>
						<listitem><para>
<ulink url="http://doc.ubuntu.com/files/packagingguide/xcdroast_0.98+0alpha15-1.1ubuntu1.dsc">xcdroast_0.98+0alpha15-1.1ubuntu1.dsc</ulink></para>
						</listitem>
						<listitem><para>
<ulink url="http://doc.ubuntu.com/files/packagingguide/xcdroast_0.98+0alpha15-1.1ubuntu1.diff.gz">xcdroast_0.98+0alpha15-1.1ubuntu1.diff.gz</ulink></para>
						</listitem>
					</itemizedlist>
				</listitem>
				<listitem>
					<para>Os arquivos do pacote fonte do Debian dos quais os pacotes do Breezy são derivados:</para>
						<itemizedlist>
							<listitem>
<para><ulink url="http://doc.ubuntu.com/files/packagingguide/xcdroast_0.98+0alpha15-1.1.diff.gz">xcdroast_0.98+0alpha15-1.1.diff.gz</ulink></para>
							</listitem>
							<listitem>
<para><ulink url="http://doc.ubuntu.com/files/packagingguide/xcdroast_0.98+0alpha15-1.1.dsc">xcdroast_0.98+0alpha15-1.1.dsc</ulink></para>
							</listitem>
						</itemizedlist>
				</listitem>
				<listitem>
					<para>Os novos pacotes fontes do Debian dos quais os pacotes do Dapper packages serão derivados:</para>
					<itemizedlist>
						<listitem>
<para><ulink url="http://doc.ubuntu.com/files/packagingguide/xcdroast_0.98+0alpha15-3.dsc">xcdroast_0.98+0alpha15-3.dsc</ulink></para>
						</listitem>
						<listitem>
<para><ulink url="http://doc.ubuntu.com/files/packagingguide/xcdroast_0.98+0alpha15-3.diff.gz">xcdroast_0.98+0alpha15-3.diff.gz</ulink></para>
						</listitem>
					</itemizedlist>
				</listitem>
			</itemizedlist>
			<note><para>Estes passos também podem ser feitos procurando por pacotes Debian no <ulink url="packages.debian.org">packages.debian.org</ulink> e os pacotes do Ubuntu no <ulink url="packages.ubuntu.com">packages.ubuntu.com</ulink>.</para></note>
		<tip><para>A very useful package to have installed when doing merges (or any Ubuntu packaging) is
				<application>devscripts</application>. If you do not have that already
				installed, install it before proceeding.</para></tip>
			
			<para>By looking at the &ubuntu; changelog you should be able to see which differences
				to expect between the Ubuntu package and the Debian package from which it was derived.
				For xcdroast, the &ubuntu; changelog can be found at
	<ulink url="http://changelogs.ubuntu.com/changelogs/pool/universe/x/xcdroast/xcdroast_0.98+0alpha15-1.1ubuntu1/changelog">
					changelogs.ubuntu.com</ulink>. It says that a .desktop file was fixed and properly
				installed to close a bug reported in
				<ulink url="https://launchpad.net/malone/bugs/2698">Malone</ulink>.
			</para>
			
			<para>Agora inspecione as atuais mudanças nos pacotes fontes:</para>
			<screen>
debdiff xcdroast_0.98+0alpha15-1.1.dsc xcdroast_0.98+0alpha15-1.1ubuntu1.dsc | 
	ubuntu.debdiff | less ubuntu.debdiff</screen>
			
			<para>The lines that start with - have been removed from the Debian package, and those that start
				with + have been added to the &ubuntu; package.</para>
			<para>A seguir é o que nós vemos:</para>
			<itemizedlist>
				<listitem>
					<para>In debian/rules install is being used instead of cp to install the xcdroast icon.
						Also, there is a new line installing the .desktop file.</para>
				</listitem>
				<listitem>
					<para>No debian/changelog as mudanças feitas são adcionadas numa entrada no changelog.</para>
				</listitem>
				<listitem>
					<para>In debian/dirs usr/share/applications has been added for the install lines above to
						work properly.</para>
				</listitem>
				<listitem>
					<para>xcdroast.desktop é adicionado</para>
				</listitem>
			</itemizedlist>
			
			<para>Agora nós sabemos como a fonte do Ubuntu foi alterada. Agora nós precisamos ver o que foi alterando nas fontes do Debian.</para>
			<screen>
debdiff xcdroast_0.98+0alpha15-1.1.dsc xcdroast_0.98+0alpha15-3.dsc &gt; debian.debdiff
less debian.debdiff</screen>
			<para>There is a lot more in this debdiff than in the last one. One way we can get a
				better idea of what has changed is to see what files were changed in the debdiff:</para>
			
			<screen>grep diff debian.debdiff</screen>
			
			<para>Isto indica que debian/postinst, debian/rules, debian/changelog, debian/doc-base.manual, debian/control, e debian/menu foram modificados na nova versão Debian.</para>
			<para>Thus we can see that we need to check debian/rules to see if the &ubuntu; changes were made.
				We can also see that debian/dirs was not changed from the old Debian version. Let us
				now look at the files. We can unpack the source package by using
				<application>dpkg-source</application>:</para>
			
			<screen>dpkg-source -x xcdroast_0.98+0alpha15-3.dsc</screen>
			
			<para>Isto irá descomprimir o arquivo xcdroast_0.98+0alpha15.orig.tar.gz, criar um diretório xcdroast-0.98+0alpha15, e aplicar as mudanças encontradas no arquivo xcdroast_0.98+0alpha15-3.diff.gz.</para>
			<para>Agora iremos ao diretório do debian:</para>
			
			<screen>cd xcdroast-0.98+0alpha15/debian</screen>
			
			<para>One can see in <filename>rules</filename> that changes made by &ubuntu; were not applied to the new Debian version.
				This means that:</para>
			
			<screen>cp debian/xcdroast.xpm `pwd`/debian/$(PACKAGE)/usr/share/pixmaps</screen>
			
			<para>...pode ser alterado para:</para>
			
			<screen>
#cp debian/xcdroast.xpm `pwd`/debian/$(PACKAGE)/usr/share/pixmaps

#install desktop and icon
install -D -m 644 $(CURDIR)/debian/xcdroast.desktop \
	$(CURDIR)/debian/xcdroast/usr/share/applications/xcdroast.desktop
install -D -m 644 $(CURDIR)/debian/xcdroast.xpm \
	$(CURDIR)/debian/xcdroast/usr/share/pixmaps/xcdroast.xpm</screen>

			<para>Agora no <filename>dirs</filename>, a seguinte linha precisa ser adicionada para o arquivo .desktop para ser instalado:</para>
			<screen>usr/share/applications</screen>
			
			<para>Agora nós precisamos do atual arquivo .desktop (salvo como <emphasis>debian/xcdroast.desktop</emphasis>). Para o ubuntu.debdiff (ou o pacote fonte), nós veremos como é:</para>
			<screen>
[Desktop Entry]
Encoding=UTF-8
Name=X-CD-Roast
Comment=Criar um CD
Exec=xcdroast
Icon=xcdroast.xpm
Type=Application
Categories=Application;AudioVideo;</screen>
			
			<para>The last change that needs to be made is in <filename>changelog</filename>. 
				Not only do we need to add what we have just done (merge with Debian), but we 
				should also add in the previous &ubuntu; changelog entries. To do this, run 
				<application>dch -i -D dapper</application> and put something to the effect of:</para>
			<screen>
xcdroast (0.98+0alpha15-3<emphasis>ubuntu1</emphasis>) dapper; urgency=low

  * Resynchronise with Debian.</screen>

			<para>Make sure to change the version number to the correct &ubuntu; version.
				Also add:</para>
			<screen>
xcdroast (0.98+0alpha15-1.1ubuntu1) breezy; urgency=low

  * Fix and install existing .desktop file. (Closes Malone #2698)
				
  -- Captain Packager &lt;packager@coolness.com&gt;  Sat,  1 Oct 2005 19:39:04 -0400</screen>
			<para>between the 0.98+0alpha15-1.1 and 0.98+0alpha15-2 log entries.</para>
			
			<para>Now you can build and test the new source packages. There are different ways to do this, but one example is:</para>
			<screen>
cd ..
debuild -S
cd ..
sudo pbuilder build xcdroast_0.98+0alpha15-3ubuntu1.dsc</screen>
			
			<para>This will recreate the source package, sign it with your default GPG key, and build the package in a pbuilder
				environment to make sure it builds correctly. Make sure to always test your packages
				before submitting patches. The last step is to make a debdiff that can be
				attached to an existing bug report or given to the MOTUs in the #ubuntu-motu IRC channel. To do this,
				we get the difference between the Debian unstable source package and the new &ubuntu; version:
			</para>
			<screen>debdiff xcdroast_0.98+0alpha15-3.dsc xcdroast_0.98+0alpha15-3ubuntu1.dsc &gt; \
	xcdroast_0.98+0alpha15-3ubuntu1.debdiff</screen>
		</sect2>
	</sect1>

	<sect1 id="ubuntu-kubuntu" status="complete">
		<title>Empacotanto para o Kubuntu</title>
		
		<para>As one might imagine, the main packaging issues specific to Kubuntu are with
			KDE and Qt.</para>
		
		<sect2 id="build-dependencies">
			<title>Contruindo Dependências</title>
	
			<para>Kubuntu programs are mostly KDE ones. Therefore, they need to
				Build-Depend on <filename>kdelibs4-dev</filename>. Since KDE's
				focus is to have programs interacting, some programs might also need to
				Build-Depend on other parts of KDE, such as
				<filename>kdepim-dev</filename>. Be sure to get the list of
				necessary dependencies for your program.</para>
	
		</sect2>

		<sect2 id="desktop-files">
			<title>Arquivos da Área de Trabalho</title>
		
			<para>KDE has some specific paths. Most settings for KDE are installed in either
				<filename>/etc/kde3/</filename> or <filename>/usr/share/apps/</filename>.
				It is important to note that the general desktop files for KDE should go
				to <filename>/usr/share/applications/kde/</filename>. The install path
				for the desktop files should be fixed if they do not use this (except for
				desktop files like service menus).  </para>
			
			<para>KDE desktop files also need specific entries to fit in the KMenu. A
				minimal desktop file for a KDE program could be something like
				this:</para>
				
			<screen>[Desktop Entry]
Encoding=UTF-8
Name=Kfoo
Name[xx]=Kfoo
GenericName=Bar description
Exec=kfoo
Icon=kfoo
Terminal=false
Categories=Qt;KDE;Utility;</screen>

			<para>Note that the Categories field must begin with Qt;KDE;. There are
				specific desktop file entries for KDE programs and modules that allow su to
				declare the given programs as KCModules or autostart them when logging in.
			</para>
	
		</sect2>
		
		<sect2 id="generating-pot-files">
			<title>Gerando Arquivos .pot</title>

			<para>The Ubuntu translation website, <ulink url="https://launchpad.net/rosetta/">Rosetta</ulink>, now supports KDE,
				which means KDE packages need to support Rosetta by generating .pot
				template files for translators. If you use <application>cdbs</application>
				in edgy, your package should now automatically build and check
				for a .pot file in po/ directory.</para>

			<para>You will need the <ulink url="../files/kubuntu_01_kdepot.diff">kdepot
					patch</ulink> (or similar; it may not apply cleanly depending on the
				age of the admin directory).</para>

			<para>If your package uses <application>debhelper</application> or
				<application>cdbs</application> and includes its own kde.mk file, you need
				to add the rules yourself.</para>

			<para>Para o <application>cdbs</application>, adicione estas linhas ao debian/rules:</para>

			<screen>
common-post-build-arch::
	mkdir -p po
        XGETTEXT=/usr/bin/kde-xgettext sh admin/cvs.sh extract-messages

clean::
        rm -rf po</screen>
			<para>Para o <application>debhelper</application>, adicione o seguinte no final da guia <emphasis>install</emphasis>:</para>
			<screen>
mkdir -p po
XGETTEXT=/usr/bin/kde-xgettext sh admin/cvs.sh extract-messages</screen>
			<para>Also for <application>debhelper</application>, add the following to the <emphasis>clean</emphasis> rule:</para>
			<screen>
rm -f po/*.pot</screen>
		</sect2>
		
	</sect1>

</chapter>

