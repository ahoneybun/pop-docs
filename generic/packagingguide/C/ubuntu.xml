<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE chapter PUBLIC "-//OASIS//DTD DocBook XML V4.3//EN"
	"http://www.oasis-open.org/docbook/xml/4.3/docbookx.dtd" [
<!ENTITY % globalent SYSTEM "../../../libs/global.ent">
%globalent;
<!ENTITY % cdo-C SYSTEM "../../../libs/cdo-C.ent">
%cdo-C;
<!ENTITY % gnome-menus-C SYSTEM "../../../ubuntu/libs/gnome-menus-C.ent">
%gnome-menus-C;
<!ENTITY % xinclude SYSTEM "../../../libs/xinclude.mod">
%xinclude;
<!ENTITY language "en">
<!ENTITY distro-rev "6.04">
<!ENTITY distro-version "Dapper Drake">
<!ENTITY ubuntu '<phrase>Ubuntu</phrase>'>
]>
<chapter id="Ubuntu-chap">
	<title>Ubuntu Specific Packaging</title>
	<para>Material that is specific to &ubuntu; development.</para>

	<sect1 id="kubuntu">
		<title>Packaging for Kubuntu</title>
		<para>Below are package issues specific to KDE.</para>
		<sect2 id="generating-pot-files">
			<title>Generating .pot Files</title>
			<para>The Ubuntu translation website <ulink url="https://launchpad.net/rosetta/">Rosetta</ulink>
				now supports KDE, which means KDE packages need to support Rosetta by
				generating .pot template files for translators. If you use <application>cdbs</application>
				in Dapper your package should now do this automatically, build and check for a .pot
				file in po/ directory.</para>
			<para>You will need the kdepot patch (or similar, it may not apply exactly depending
				on the age of the admin directory).</para>
			<para>If your package uses <application>debhelper</application>, or <application>cdbs</application>
				and includes it's own kde.mk file you need to add the rules yourself.</para>
			<para>For <application>cdbs</application> add these lines to your debian/rules:</para>
			<screen>
common-post-build-arch::
	mkdir -p po
        XGETTEXT=/usr/bin/kde-xgettext sh admin/cvs.sh extract-messages

clean::
        rm -rf po</screen>
			<para>And for <application>debhelper</application> the following to the end of the
				<emphasis>install</emphasis> rule:</para>
			<screen>
mkdir -p po
XGETTEXT=/usr/bin/kde-xgettext sh admin/cvs.sh extract-messages</screen>
			<para>Then add this to the <emphasis>clean</emphasis> rule:</para>
			<screen>
rm -f po/*.pot</screen>
		</sect2>
	</sect1>

	<sect1 id="ubuntu-upload">
		<title>Uploading and Review</title>
		<para><ulink url="http://revu.tauware.de">REVU</ulink> is a web-based tool to
			give people who have worked on packages a chance to "put their packages
			out there" for other people to look at and comment on in a structured manner.</para>
		<para>Once a packager's <ulink url="https://wiki.ubuntu.com/GPGKey">GPG key</ulink>
			has been added to the REVU keyring, the packager can begin to upload his
			packages to REVU. They are then commented by reviewers and the packager
			can send updates of his package to REVU until it gets advocated by at
			least 2 <ulink url="https://wiki.ubuntu.com/MOTU">MOTU</ulink>s. When that
			point is reached, a MOTU uploads the approved package to Universe.</para>
		<sect2 id="contribute-as-uploader">
			<title>Contributing as an Uploader</title>
			<para>Would you like a program to be distributed in &ubuntu; that is not available in
				the development version of either &ubuntu; (currently &distro-version;) or Debian
				(Sid)? Then you might like to package this program and upload it to REVU!
				In order to do so, you need to register as an uploader on the REVU system.</para>
			<para>What you require is:</para>
			<itemizedlist>
				<listitem><para>A GPG key</para></listitem>
				<listitem><para>Knowledge on how to make Debian packages</para></listitem>
				<listitem><para>One or more new packages to upload</para></listitem>
			</itemizedlist>
			<note><para>It is not necessary to get your key signed, but it is a good idea
					anyway.</para></note>
			<para>Send a signed email with your GnuPG keyid, asking to be added to the REVU keyring,
				to <email>keyring@tiber.tauware.de</email>. One of the REVU admins will then add
				you then to the uploaders keyring. You don't need a password to upload packages,
				only to log in to the website and reply to comments.</para>
			<sect3 id="upload-your-packages">
				<title>Uploading your packages</title>
				<para>Uploading to REVU uses <application>dput</application>. You need to set dput
					before your first upload. Edit <filename>/etc/dput.cf</filename> and add
					the following entry:</para>
				<screen>
[revu]
fqdn = revu.tauware.de
incoming = /incoming
login = anonymous</screen>
				<para>Only upload signed packages and always include the original tarball, otherwise reviewers
					will not be able to look at your extracted source package.</para>
				<para>In order to do so, use the options "-S -sa" to build only the source package and also
					include the original source in the package.</para>
				<para>After the package is built, you can use <application>dput</application> with the above
					config file changes to upload it by specifying just the *_source.changes file that was
					created:</para>
					<screen>
dput *_source.changes</screen>
				<note><para>If you are reuploading a changed package (after receiving reviews), you may get an
						error like this:</para></note>
				<screen>
Upload package to host revu
Already uploaded to tauware.de
Doing nothing for myapp_source.changes</screen>
				<para>To fix, add the -f option to dput to force the upload.</para>
				<para>Processing of uploads is done every 5 minutes. So, if your upload does not show up,
				please contact the REVU administrators by email or join the IRC channel #ubuntu-motu.</para>
			</sect3>
			<sect3 id="howto-login">
				<title>How to login to REVU</title>
				<para>After your first upload, you will be automatically registered to the database and
					assigned a random password. Use the email address you used in the changelog file
					of your upload as login and press the 'recover password' link, so as to receive
					your password by email.</para>
			</sect3>
			<sect3 id="view-and-comment-uploads">
				<title>View and comment uploads</title>
				<para>Packages uploaded to REVU are made public. You can browse them without logging
					in to the system. However, commenting uploads is only available to registered
					users. As an uploader, you can only comment your own uploads. This can be
					useful to give reviewers some info on the changes you have made between two
					uploads of your packages.</para>
			</sect3>
			<sect3 id="additional-rules">
				<title>Additional rules</title>
				<itemizedlist>
					<listitem><para>You must have reviewed the package for known security
							vulnerabilities and provide patches for all of them.</para></listitem>
					<listitem><para>We can refuse the package on the grounds of known security
							problems and design.</para></listitem>
					<listitem><para>You must have included a copyright and licence file, and those
							must allow inclusion of the package in the universe component
							and on mirrors.</para></listitem>
					<listitem><para>The package must be known to build on top of the main component
							of the current &ubuntu; stable release, it may require other
							packages already in Universe.</para></listitem>
				</itemizedlist>
			</sect3>
			<sect3 id="getting-help">
				<title>Getting Help</title>
				<para>If you need help on these steps or if you have more questions about REVU, you can
					ask on #ubuntu-motu on the Freenode network.</para>
			</sect3>
		</sect2>
		<sect2 id="contribute-as-reviewer">
			<title>Contribute as a Reviewer</title>
			<para>If you have some experience in packaging and know the policy well, then you can help improving
				the packages uploaded to universe and guide packagers in doing so, by contributing as a
				reviewer on REVU.</para>
			<para>What you need:</para>
			<itemizedlist>
				<listitem><para>A GPG key</para></listitem>
				<listitem><para>Be a MOTU</para></listitem>
			</itemizedlist>
			<para>Send a signed and encrypted mail with your password and GnuPG keyid to
				<email>keyring@tiber.tauware.de</email>. And you will be marked as a Reviewer in the
				database.</para>
			<sect3 id="using-revu-tools">
				<title>Using REVU-tools</title>
				<para><application>REVU-Tools</application> is a set of scripts used on REVU to automatize
					the reviewing process. It gathers fours scripts: revu-build, revu-orig, revu-report
					and a hook script for pbuilder, used by revu-build to perform build tests.</para>
				<para>On REVU, only REVU admins can run these tools. If you are not a REVU admin, ask
					one to run it on the package you want to review.</para>
				<para>Among the details that REVU-tools gives are:</para>
				<itemizedlist>
					<listitem><para>Whether the package is a Debian-native.</para></listitem>
					<listitem><para>Whether the package contains a usable debian/watch file.</para></listitem>
					<listitem><para>Whether new versions of the program are available, using the debian/watch
							file with uscan.</para></listitem>
					<listitem><para>Whether the md5 sums of the upstream tarball and the orig.tar.gz are
							identical, and whether this is normal or not.</para></listitem>
					<listitem><para>Whether there is a diff between the extracted upstream tarball and
							orig.tar.gz</para></listitem>
					<listitem><para>Whether the package fails to build from source in pbuilder.</para></listitem>
					<listitem><para>Whether lintian and linda are happy with the package.</para></listitem>
					<listitem><para>Whether running debuild -S -sa on this package generates files in the diff
							outside of debian/.</para></listitem>
				</itemizedlist>
			</sect3>
		</sect2>
	</sect1>

	<sect1 id="ubuntu-sync">
		<title>Merges and Syncs</title>
		
		<para>Describe the Ubuntu release cycle. How to merge or sync packages from Debian
			and how to tell the difference.</para>

	</sect1>

</chapter>
