<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE chapter PUBLIC "-//OASIS//DTD DocBook XML V4.3//EN"
	"http://www.oasis-open.org/docbook/xml/4.3/docbookx.dtd" [
<!ENTITY % globalent SYSTEM "../../../libs/global.ent">
%globalent;
<!ENTITY % cdo-C SYSTEM "../../../libs/cdo-C.ent">
%cdo-C;
<!ENTITY % pg-common SYSTEM "../pg-common.ent">
%pg-common;
<!ENTITY % xinclude SYSTEM "../../../libs/xinclude.mod">
%xinclude;
<!ENTITY language "en">
]>
<chapter id="ubuntu-chap" status="complete">
	<title>Creazione di pacchetti per Ubuntu</title>

	<sect1 id="ubuntu-upload" status="complete">
		<title>Caricamento e revisione</title>

		<para>Once you have created a source package (either a completely new package or
			just an update/bugfix), you will want to distribute your
			package so that other people can enjoy your hard work. The most effective way
			to do that for <phrase>Ubuntu</phrase> is to contribute your package to the Universe repository.
			The community developers who are responsible for the Universe repository are
			known as Masters of the Universe (<ulink url="https://wiki.ubuntu.com/MOTU">MOTU</ulink>). <ulink url="http://revu.tauware.de">REVU</ulink> is a web-based tool that gives
			people a place to upload their source packages for other people to look at and
			for MOTUs to review in a structured manner.</para>

		<sect2 id="contribute-as-uploader">
			<title>Contribuire nel caricare</title>
		
			<para>Primo, sarà necessario che la propria <ulink url="https://wiki.ubuntu.com/GPGKey">chiave GPG</ulink> sia aggiunta al portachiavi di REVU. Questo passo assicura che i tuoi pacchetti provengano veramente da te ed aiuta nel mantenere traccia dei caricamenti.</para>
	
			<para>REVU uses your <ulink url="https://launchpad.net">Launchpad</ulink> account to look up your <application>gpg</application> key so make sure you have a Launchpad account and you have put your <application>gpg</application> key in your user profile there. Once this is one you can join the <ulink url="https://launchpad.net/people/ubuntu-universe-contributors">Universe Contributors</ulink> team and then email <ulink url="mailto:admin@tiber.tauware.de">admin@tiber.tauware.de</ulink> asking for your <application>gpg</application> key to be updated on REVU. When this is done you will be able to upload your packages. You don't	need a password to upload packages, only to log in to the website and to reply to comments.</para>

			<note><para>Non è necessario avere la propria chiave firmata da altri per caricare su REVU, ma è una buona idea che venga fatto ad un certo punto.</para></note>
			
			
			<sect3 id="upload-your-packages">
				<title>Caricare i proprii pacchetti</title>

				<para>Uploading to REVU uses <application>dput</application>. The <phrase>Ubuntu</phrase>
					version of <application>dput</application> already knows about REVU so
					you do not need to change any configuration files. Only upload signed
					packages, and unlike other repositories, you should always include the
					original tarball, otherwise reviewers will not be able to look at your
					extracted source package. In order to do so, use the options "-S -sa"
					with <application>debuild</application> or
					<application>dpkg-buildpackage</application> to build only the source
					package and to include the original source in the upload.</para>
				
				<para>Dopo che il pacchetto sorgente è stato creato, usare <application>dput</application> con i cambiamenti al file di configurazione visti sopra per caricare specificando solo il file <filename>_source.changes</filename> che è stato creato:</para>

				<screen>dput revu *_source.changes</screen>

				<note><para>Se si sta facendo un nuovo caricamento di un pacchetto modificato (dopo aver ricevuto revisioni), si potrebbe avere un errore del genere:</para>
					
				<screen>
↵
 Upload package to host revu↵
 Already uploaded to tauware.de↵
 Doing nothing for myapp_source.changes</screen>
			
				<para>Per risolvere il problema, aggiungere l'opzione -f a dput per forzare il caricamento o rimuovere il file <filename>.upload</filename> che è stato creato da <application>dput</application>.</para></note>
			
				<para>Processing of uploads is done every five minutes, so if your upload does not show up,
				please contact the REVU administrators by email, or join the Freenode IRC channel #ubuntu-motu.</para>
		
			</sect3>
		
			<sect3 id="howto-login">
				<title>Come connettersi a REVU</title>
			
				<para>After your first upload, you are registered automatically in the
					database and assigned a random password. On the <ulink url="http://revu.tauware.de">REVU</ulink> website, use the email
					address you used in the changelog file of your upload as the login and
					click the 'recover password' link. You will be taken to a page that
					has your encrypted password with instructions for decrypting
					it.</para>
				
			</sect3>

			<sect3 id="view-and-comment-uploads">
				<title>Visualizzare e commentare i caricamenti</title>
			
				<para>I pacchetti caricati su REVU sono pubblici. Si può esaminarli senza aver effettuato la connessione al sistema. Comunque la possibilità di lasciare commenti riguardo i caricamenti è disponibile solo agli utenti registrati. Come contributore, puoi lasciare commenti riguardanti solo i tuoi pacchetti. Questo può essere utile per dare ai revisori informazioni sui cambiamenti fatti tra un caricamento e l'altro dei tuoi pacchetti.</para>

			</sect3>

			<sect3 id="additional-rules">
				<title>Regole aggiuntive</title>
		
				<itemizedlist>

					<listitem><para>Si deve  essersi assicurati che il pacchetto non sia soggetto a vulnerabilità di sicurezza note e si deve eventualmente fornire correzioni per queste.</para></listitem>
					
					<listitem><para>Il pacchetto potrebbe essere rifiutato in caso di problemi di sicurezza noti.</para></listitem>
					
					<listitem><para>E' necessario includere un file per il copyright e la licenza, e questi devono permettere l'inclusione del pacchetto nel componente Universe e nella ridistribuzione tramite i mirror di Ubuntu.</para></listitem>
					
					<listitem><para>The package must be known to build on top of the main component
							of the current <phrase>Ubuntu</phrase> stable release. It is permissible to require other
							packages already in Universe.</para></listitem>
				</itemizedlist>
			</sect3>

			<sect3 id="getting-help">
				<title>Ottenere aiuto</title>
				<para>If you need assistance on these steps, or if you have questions about REVU, you can
					ask in #ubuntu-motu on the Freenode IRC network.</para>
			</sect3>

		</sect2>

	</sect1>

	<sect1 id="ubuntu-sync" status="complete">
		<title>Fusioni e sincronizzazioni</title>



		<important><para><emphasis role="bold">Requisiti:</emphasis> build-essential, automake, gnupg, lintian, fakeroot, patchutils, debhelper and <xref linkend="gs-pbuilder"/>.</para></important>
		
		<para><phrase>Ubuntu</phrase> is based on the Debian Linux distribution and uses the same package
			management system (APT). At the beginning of each <phrase>Ubuntu</phrase> development cycle, the
			packages in <phrase>Ubuntu</phrase> are updated to those in the Debian unstable branch. However,
			because <phrase>Ubuntu</phrase> is not the same as Debian, some of the packages need to
			be modified to work in <phrase>Ubuntu</phrase>. There might also be bug fixes that <phrase>Ubuntu</phrase>
			developers have introduced into the packages. You can determine whether this has
			taken place by noting the package version. If the package version includes
			ubuntu in it (an example would be gimp-2.2.9-3ubuntu2), then the <phrase>Ubuntu</phrase>
			developers have made changes, and it is no longer the same as the Debian package.
			There are more than 1000 such modified packages in the Universe repository.</para>
		
		<para>At the start of each Ubuntu development cycle, a decision is made regarding
			these Ubuntu versioned packages. Of course if the Debian version hasn't
			changed since the last <phrase>Ubuntu</phrase> release, then nothing needs to be changed.
			However, if there is a newer version of the package in Debian, then one
			of two things should happen. If all of the reasons for Ubuntu modifications
			(bug fixes, dependencies, etc.) are fixed in the new Debian package,
			then we can just take the Debian package directly. This decision is called a
			<emphasis>sync</emphasis>. However, if the new Debian version has the same
			issues that caused the Ubuntu version to be made, then those changes need
			to be applied to the new Debian version, too. This decision is called <emphasis>merging</emphasis>.
		</para>
		<sect2 id="merge-tutorial">
			<title>Guida sul merging</title>
			<para>Il processo di fusione implica esaminare i cambiamenti dei pacchetti sorgente sia di Debian che di Ubuntu, e determinare quali siano i cambiamenti e quali siano specifici di Ubuntu. Guardiamo ora un esempio, un popolare programma per la creazione di CD chiamato <application>xcdroast</application>.</para>
			<para>Per cominciare, è necessario creare una cartella che contenga il nostro progetto, ed aprirla:</para>
			<screen>
↵
 mkdir ~/xcdroast↵
 cd ~/xcdroast</screen>
			<para>Ora scaricare tutti i pacchetti sorgente necessari in questa cartella:</para>
			<itemizedlist>
				<listitem><para>Il tarball sorgente di <application>xcdroast</application> utilizzato da tutte le versioni:</para>
					<itemizedlist>
						<listitem>
<para><ulink url="http://snapshot.debian.net/archive/2006/01/16/debian/pool/main/x/xcdroast/xcdroast_0.98+0alpha15.orig.tar.gz">xcdroast_0.98+0alpha15.orig.tar.gz</ulink></para>
						</listitem>
					</itemizedlist>
				</listitem>
				<listitem>
					<para>The <phrase>Ubuntu</phrase> Breezy source package files:</para>
					<itemizedlist>
						<listitem><para>
<ulink url="http://doc.ubuntu.com/files/packagingguide/xcdroast_0.98+0alpha15-1.1ubuntu1.dsc">xcdroast_0.98+0alpha15-1.1ubuntu1.dsc</ulink></para>
						</listitem>
						<listitem><para>
<ulink url="http://doc.ubuntu.com/files/packagingguide/xcdroast_0.98+0alpha15-1.1ubuntu1.diff.gz">xcdroast_0.98+0alpha15-1.1ubuntu1.diff.gz</ulink></para>
						</listitem>
					</itemizedlist>
				</listitem>
				<listitem>
					<para>I file del pacchetto sorgente di Debian da cui sono derivati i pacchetti di Breezy:</para>
						<itemizedlist>
							<listitem>
<para><ulink url="http://doc.ubuntu.com/files/packagingguide/xcdroast_0.98+0alpha15-1.1.diff.gz">xcdroast_0.98+0alpha15-1.1.diff.gz</ulink></para>
							</listitem>
							<listitem>
<para><ulink url="http://doc.ubuntu.com/files/packagingguide/xcdroast_0.98+0alpha15-1.1.dsc">xcdroast_0.98+0alpha15-1.1.dsc</ulink></para>
							</listitem>
						</itemizedlist>
				</listitem>
				<listitem>
					<para>I nuovi file del pacchetto sorgente di Debian da cui saranno derivati i pacchetti di Dapper:</para>
					<itemizedlist>
						<listitem>
<para><ulink url="http://doc.ubuntu.com/files/packagingguide/xcdroast_0.98+0alpha15-3.dsc">xcdroast_0.98+0alpha15-3.dsc</ulink></para>
						</listitem>
						<listitem>
<para><ulink url="http://doc.ubuntu.com/files/packagingguide/xcdroast_0.98+0alpha15-3.diff.gz">xcdroast_0.98+0alpha15-3.diff.gz</ulink></para>
						</listitem>
					</itemizedlist>
				</listitem>
			</itemizedlist>
			<note><para>Questi passaggi possono essere completati anche cercando in <ulink url="packages.debian.org">packages.debian.org</ulink> per i pacchetti Debian e in <ulink url="packages.ubuntu.com">packages.ubuntu.com</ulink> per i pacchetti Ubuntu.</para></note>
		<tip><para>Un pacchetto che è estremamente utile avere installato quando si fanno fusioni (od ogni operazione di creazione di pacchetti per Ubuntu) è <application>devscripts</application>. Se ancora non dovesse essere stato installato, installarlo prima di continuare.</para></tip>
			
			<para>By looking at the <phrase>Ubuntu</phrase> changelog you should be able to see which differences
				to expect between the Ubuntu package and the Debian package from which it was derived.
				For xcdroast, the <phrase>Ubuntu</phrase> changelog can be found at
	<ulink url="http://changelogs.ubuntu.com/changelogs/pool/universe/x/xcdroast/xcdroast_0.98+0alpha15-1.1ubuntu1/changelog">
					changelogs.ubuntu.com</ulink>. It says that a .desktop file was fixed and properly
				installed to close a bug reported in
				<ulink url="https://launchpad.net/malone/bugs/2698">Malone</ulink>.
			</para>
			
			<para>Ora si esaminano gli attuali cambiamenti nei pacchetti sorgente:</para>
			<screen>
↵
 debdiff xcdroast_0.98+0alpha15-1.1.dsc xcdroast_0.98+0alpha15-1.1ubuntu1.dsc | \↵
 	ubuntu.debdiff | less ubuntu.debdiff</screen>
			
			<para>The lines that start with - have been removed from the Debian package, and those that start
				with + have been added to the <phrase>Ubuntu</phrase> package.</para>
			<para>Questo è ciò che vediamo:</para>
			<itemizedlist>
				<listitem>
					<para>In debian/rules è stato utilizzato install al posto di cp per installare l'icona di xcdroast. Inoltre, è presente una nuova linea per l'installazione del file .desktop.</para>
				</listitem>
				<listitem>
					<para>In debian/changelog i cambiamenti effettuati sono stati aggiunti alle note del changelog.</para>
				</listitem>
				<listitem>
					<para>In debian/dirs usr/share/applications è stata aggiunta per fare in modo che le linee di installazione sopra funzionino correttamente.</para>
				</listitem>
				<listitem>
					<para>xcdroast.desktop è stato aggiunto</para>
				</listitem>
			</itemizedlist>
			
			<para>Adesso sappiamo come è stato modificato il sorgente di Ubuntu. È necessario ora conoscere cosa è stato cambiato nei sorgenti Debian.</para>
			<screen>
↵
 debdiff xcdroast_0.98+0alpha15-1.1.dsc xcdroast_0.98+0alpha15-3.dsc &gt; debian.debdiff↵
 less debian.debdiff</screen>
			<para>n questo debdiff ci sono molte più cose che nel precedente. Un modo con cui farsi una migliore idea di cosa sia cambiato è vedere quali file siano stati modificati nel debdiff:</para>
			
			<screen>grep diff debian.debdiff</screen>
			
			<para>Questo ci indica che debian/postinst, debian/rules, debian/changelog, debian/doc-base.manual, debian/control, e debian/menu sono stati modificati nella nuova versione Debian.</para>
			<para>Thus we can see that we need to check debian/rules to see if the <phrase>Ubuntu</phrase> changes were made.
				We can also see that debian/dirs was not changed from the old Debian version. Let us
				now look at the files. We can unpack the source package by using
				<application>dpkg-source</application>:</para>
			
			<screen>dpkg-source -x xcdroast_0.98+0alpha15-3.dsc</screen>
			
			<para>Questo comando scompatterà il file xcdroast_0.98+0alpha15.orig.tar.gz, creerà una cartella xcdroast-0.98+0alpha15, ed applicherà i cambiamenti trovati in xcdroast_0.98+0alpha15-3.diff.gz.</para>
			<para>Ora entrare nella cartella Debian:</para>
			
			<screen>cd xcdroast-0.98+0alpha15/debian</screen>
			
			<para>One can see in <filename>rules</filename> that changes made by <phrase>Ubuntu</phrase> were not applied to the new Debian version.
				This means that:</para>
			
			<screen>cp debian/xcdroast.xpm `pwd`/debian/$(PACKAGE)/usr/share/pixmaps</screen>
			
			<para>..dovrebbe essere cambiato in:</para>
			
			<screen>
↵
 #cp debian/xcdroast.xpm `pwd`/debian/$(PACKAGE)/usr/share/pixmaps↵
 ↵
 #install desktop and icon↵
 install -D -m 644 $(CURDIR)/debian/xcdroast.desktop \↵
 	$(CURDIR)/debian/xcdroast/usr/share/applications/xcdroast.desktop↵
 install -D -m 644 $(CURDIR)/debian/xcdroast.xpm \↵
 	$(CURDIR)/debian/xcdroast/usr/share/pixmaps/xcdroast.xpm</screen>

			<para>Ora in <filename>dirs</filename>, le seguenti linee devono essere aggiunte affinché il file .desktop venga installato.</para>
			<screen>usr/share/applications</screen>
			
			<para>Adesso abbiamo bisogno del file .desktop attuale (salvato come <emphasis>debian/xcdroast.desktop</emphasis>). Da ubuntu.debdiff (o dal pacchetto sorgente Ubuntu), vediamo che è:</para>
			<screen>
[Desktop Entry]
Encoding=UTF-8
Name=X-CD-Roast
Comment=Create a CD
Exec=xcdroast
Icon=xcdroast.xpm
Type=Application
Categories=Application;AudioVideo;</screen>
			
			<para>The last change that needs to be made is in <filename>changelog</filename>. 
				Not only do we need to add what we have just done (merge with Debian), but we 
				should also add in the previous <phrase>Ubuntu</phrase> changelog entries. To do this, run 
				<application>dch -i -D dapper</application> and put something to the effect of:</para>
			<screen>
xcdroast (0.98+0alpha15-3<emphasis>ubuntu1</emphasis>) dapper; urgency=low

  * Resynchronise with Debian.</screen>

			<para>Make sure to change the version number to the correct <phrase>Ubuntu</phrase> version.
				Also add:</para>
			<screen>
xcdroast (0.98+0alpha15-1.1ubuntu1) breezy; urgency=low

  * Fix and install existing .desktop file. (Closes Malone #2698)
				
  -- Captain Packager &lt;packager@coolness.com&gt;  Sat,  1 Oct 2005 19:39:04 -0400</screen>
			<para>between the 0.98+0alpha15-1.1 and 0.98+0alpha15-2 log entries.</para>
			
			<para>Now you can build and test the new source packages. There are different ways to do this, but one example is:</para>
			<screen>
cd ..
debuild -S
cd ..
sudo pbuilder build xcdroast_0.98+0alpha15-3ubuntu1.dsc</screen>
			
			<para>This will recreate the source package, sign it with your default GPG key, and build the package in a pbuilder
				environment to make sure it builds correctly. Make sure to always test your packages
				before submitting patches. The last step is to make a debdiff that can be
				attached to an existing bug report or given to the MOTUs in the #ubuntu-motu IRC channel. To do this,
				we get the difference between the Debian unstable source package and the new <phrase>Ubuntu</phrase> version:
			</para>
			<screen>debdiff xcdroast_0.98+0alpha15-3.dsc xcdroast_0.98+0alpha15-3ubuntu1.dsc &gt; \
 	xcdroast_0.98+0alpha15-3ubuntu1.debdiff</screen>
		</sect2>
	</sect1>

	<sect1 id="ubuntu-kubuntu" status="complete">
		<title>Creazione dei pacchetti per Kubuntu</title>
		
		<para>As one might imagine, the main packaging issues specific to Kubuntu are with
			KDE and Qt.</para>
		
		<sect2 id="build-dependencies">
			<title>Build Dependencies</title>
	
			<para>Kubuntu programs are mostly KDE ones. Therefore, they need to
				Build-Depend on <filename>kdelibs4-dev</filename>. Since KDE's
				focus is to have programs interacting, some programs might also need to
				Build-Depend on other parts of KDE, such as
				<filename>kdepim-dev</filename>. Be sure to get the list of
				necessary dependencies for your program.</para>
	
		</sect2>

		<sect2 id="desktop-files">
			<title>Desktop Files</title>
		
			<para>KDE has some specific paths. Most settings for KDE are installed in either
				<filename>/etc/kde3/</filename> or <filename>/usr/share/apps/</filename>.
				It is important to note that the general desktop files for KDE should go
				to <filename>/usr/share/applications/kde/</filename>. The install path
				for the desktop files should be fixed if they do not use this (except for
				desktop files like service menus).  </para>
			
			<para>KDE desktop files also need specific entries to fit in the KMenu. A
				minimal desktop file for a KDE program could be something like
				this:</para>
				
			<screen>[Desktop Entry]
Encoding=UTF-8
Name=Kfoo
Name[xx]=Kfoo
GenericName=Bar description
Exec=kfoo
Icon=kfoo
Terminal=false
Categories=Qt;KDE;Utility;</screen>

			<para>Note that the Categories field must begin with Qt;KDE;. There are
				specific desktop file entries for KDE programs and modules that allow su to
				declare the given programs as KCModules or autostart them when logging in.
			</para>
	
		</sect2>
		
		<sect2 id="generating-pot-files">
			<title>Generare i file .pot</title>

			<para>The Ubuntu translation website, <ulink url="https://launchpad.net/rosetta/">Rosetta</ulink>, now supports KDE,
				which means KDE packages need to support Rosetta by generating .pot
				template files for translators. If you use <application>cdbs</application>
				in edgy, your package should now automatically build and check
				for a .pot file in po/ directory.</para>

			<para>You will need the <ulink url="../files/kubuntu_01_kdepot.diff">kdepot
					patch</ulink> (or similar; it may not apply cleanly depending on the
				age of the admin directory).</para>

			<para>If your package uses <application>debhelper</application> or
				<application>cdbs</application> and includes its own kde.mk file, you need
				to add the rules yourself.</para>

			<para>For <application>cdbs</application>, add these lines to debian/rules:</para>

			<screen>
common-post-build-arch::
 	mkdir -p po
        XGETTEXT=/usr/bin/kde-xgettext sh admin/cvs.sh extract-messages

clean::
        rm -rf po</screen>
			<para>For <application>debhelper</application>, add the following to the end of the
				<emphasis>install</emphasis> rule:</para>
			<screen>
mkdir -p po
XGETTEXT=/usr/bin/kde-xgettext sh admin/cvs.sh extract-messages</screen>
			<para>Also for <application>debhelper</application>, add the following to the <emphasis>clean</emphasis> rule:</para>
			<screen>
rm -f po/*.pot</screen>
		</sect2>
		
	</sect1>

</chapter>

