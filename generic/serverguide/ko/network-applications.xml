<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE chapter PUBLIC "-//OASIS//DTD DocBook XML V4.3//EN" "http://www.oasis-open.org/docbook/xml/4.3/docbookx.dtd" [
<!ENTITY % globalent SYSTEM "../../../libs/global.ent">
<!-- NAMES --><!ENTITY canonical-name "Canonical Ltd.">
<!ENTITY project-name "Ubuntu Documentation Project">
<!ENTITY ubuntu "<phrase>Ubuntu</phrase>">
<!-- VERSIONS --><!ENTITY distro-version "Dapper Drake">
<!ENTITY distro-rev "6.06 LTS">
<!ENTITY distro-release-date "June 2006">
<!ENTITY linux-kernel-version "2.6.15">
<!ENTITY gcc-version "4.0.3">
<!ENTITY glibc-version "2.3.6">
<!ENTITY python-version "2.4.3">
<!-- AUTHORS --><!ENTITY author-ubuntu-documentation-project SYSTEM "../common/authors/ubuntu-documentation-project.xml">
<!ENTITY author-christoph-haas SYSTEM "../common/authors/christoph-haas.xml">
<!ENTITY author-alexander-poslavsky SYSTEM "../common/authors/alexander-poslavsky.xml">
<!ENTITY author-alan-hood SYSTEM "../common/authors/alan-hood.xml">
<!ENTITY author-johnathon-hornbeck SYSTEM "../common/authors/johnathon-hornbeck.xml">
<!ENTITY author-nick-loeve SYSTEM "../common/authors/nick-loeve.xml">
<!ENTITY author-gordon-ingram SYSTEM "../common/authors/gordon-ingram.xml">
<!ENTITY author-sean-wheller SYSTEM "../common/authors/sean-wheller.xml">
<!ENTITY author-enrico-zini SYSTEM "../common/authors/enrico-zini.xml">
<!ENTITY author-kevin-muligan SYSTEM "../common/authors/kevin-muligan.xml">
<!ENTITY author-ari-torhamo SYSTEM "../common/authors/ari-torhamo.xml">
<!ENTITY author-jeff-schering SYSTEM "../common/authors/jeff-schering.xml">
<!ENTITY author-corey-burger SYSTEM "../common/authors/corey-burger.xml">
<!ENTITY author-niel-tallim SYSTEM "../common/authors/niel-tallim.xml">
<!ENTITY author-henry-meyerding SYSTEM "../common/authors/henry-meyerding.xml">
<!ENTITY author-matthew-east SYSTEM "../common/authors/matthew-east.xml">
<!ENTITY author-jerome-gotangco SYSTEM "../common/authors/jerome-gotangco.xml">
<!ENTITY author-johnathan-jesse SYSTEM "../common/authors/johnathan-jesse.xml">
<!ENTITY author-greg-taylor SYSTEM "../common/authors/greg-taylor.xml">
<!ENTITY author-troy-williams SYSTEM "../common/authors/troy-williams.xml">
<!ENTITY author-matt-galvin SYSTEM "../common/authors/matt-galvin.xml">
<!ENTITY author-robert-stoffers SYSTEM "../common/authors/robert-stoffers.xml">
<!ENTITY author-jordan-mantha SYSTEM "../common/authors/jordan-mantha.xml">
<!ENTITY author-venkat-raghavan SYSTEM "../common/authors/venkat-raghavan.xml">
<!ENTITY author-brian-burger SYSTEM "../common/authors/brian-burger.xml">
<!ENTITY author-rocco-stanzione SYSTEM "../common/authors/rocco-stanzione.xml">
<!ENTITY glossary SYSTEM "../common/C/glossary.xml">
<!-- LEGAL URLs --><!ENTITY gpl-url '<ulink url="http://www.gnu.org/licenses/gpl.html">GNU General Public License</ulink>'>
<!ENTITY cc "http://creativecommons.org/">
<!ENTITY cc-attrib '<ulink url="http://creativecommons.org/licenses/by-sa/2.0/">Attribution-ShareAlike 2.0</ulink>'>
<!ENTITY cc-fulldeed-url "http://creativecommons.org/licenses/by-sa/2.0/legalcode/">
<!ENTITY fdl-url '<ulink url="http://www.gnu.org/copyleft/fdl.html">GNU Free Documentation License</ulink>'>
<!ENTITY cc-disclaimer-url "http://creativecommons.org/licenses/disclaimer-popup?lang=en">
<!-- CANONICAL URL RESOURCES --><!ENTITY canonical-url "http://www.canonical.com">
<!-- UBUNTU URL RESOURCES --><!ENTITY ubuntu-packages "http://packages.ubuntu.com">
<!ENTITY ubuntu-dpkgfile "ubuntu5.10.tar">
<!ENTITY ubuntu-web "http://www.ubuntu.com">
<!ENTITY ubuntu-main "http://www.ubuntu.com">
<!ENTITY ubuntu-download "http://www.ubuntu.com/download">
<!ENTITY ubuntu-forums "http://www.ubuntu.com/community/forums">
<!ENTITY ubuntu-components "http://www.ubuntu.com/ubuntu/components">
<!ENTITY ubuntu-lists "http://lists.ubuntu.com">
<!ENTITY ubuntu-wiki "http://wiki.ubuntu.com">
<!ENTITY ubuntu-irc "irc.freenode.net channel #ubuntu">
<!ENTITY ubuntu-bugzilla "https://launchpad.net/distros/ubuntu/+bugs">
<!ENTITY ubuntu-doc-bugs "https://launchpad.net/products/ubuntu-doc/+bugs">
<!ENTITY ubuntu-paidsupport "http://www.ubuntu.com/support/supportoptions/paidsupport">
<!ENTITY ubuntu-freesupport "http://www.ubuntu.com/support/supportoptions/freesupport">
<!ENTITY ubuntu-comments "http://www.ubuntuforums.org/showthread.php?p=21787">
<!ENTITY ubuntu-documentation "http://help.ubuntu.com">
<!ENTITY ubuntu-documentation-repos "https://docteam.ubuntu.com/repos/trunk">
<!ENTITY ubuntu-doc-team "https://wiki.ubuntu.com/DocumentationTeam">
<!ENTITY ubuntu-doc-list "http://lists.ubuntu.com/mailman/listinfo/ubuntu-doc">
<!ENTITY ubuntu-shipit "http://shipit.ubuntu.com">
<!ENTITY ubuntu-launchpad "https://launchpad.ubuntu.com">
<!ENTITY ubuntu-rosetta "https://launchpad.ubuntu.com/rosetta">
<!ENTITY ubuntu-planet "http://planet.ubuntu.com">
<!ENTITY ubuntu-philosophy "http://www.ubuntu.com/ubuntu/philosophy">
<!ENTITY ubuntu-participate "http://www.ubuntu.com/community/participate/">
<!-- UBUNTU WIKI RESOURCES --><!ENTITY wiki-UserDocumentation "https://wiki.ubuntu.com/UserDocumentation">
<!ENTITY restricted-formats "https://wiki.ubuntu.com/RestrictedFormats">
<!ENTITY wiki-RestrictedFormats "https://wiki.ubuntu.com/RestrictedFormats">
<!ENTITY wiki-XChatHowto "https://wiki.ubuntu.com/XChatHowto">
<!ENTITY wiki-RootSudo "https://wiki.ubuntu.com/RootSudo">
<!ENTITY wiki-HowToGetHelp "https://wiki.ubuntu.com/HowToGetHelp">
<!ENTITY transcode "https://wiki.ubuntu.com/DVDRippingandEncoding">
<!ENTITY wiki-Wine "https://wiki.ubuntu.com/Wine">
<!ENTITY wiki-Cedega "https://wiki.ubuntu.com/Cedega">
<!ENTITY wiki-Nano "https://wiki.ubuntu.com/NanoHowto">
<!ENTITY wiki-locoteams "https://wiki.ubuntu.com/LoCoTeamList">
<!ENTITY wiki-BasicCommands "https://wiki.ubuntu.com/BasicCommands">
<!ENTITY wiki-filepermissions "https://wiki.ubuntu.com/FilePermissions">
<!-- KUBUNTU URL RESOURCES --><!ENTITY kubuntu-web "http://www.kubuntu.org">
<!ENTITY kubuntu-main "http://www.kubuntu.org">
<!ENTITY kubuntu-download "http://releases.ubuntu.com/kubuntu/">
<!ENTITY kubuntu-packages "http://packages.ubuntu.com/breezy/">
<!ENTITY kubuntu-cdpackages-nodefault "http://people.ubuntu.com/~cjwatson/seeds/kubuntu-breezy/ship">
<!ENTITY kubuntu-lists "http://lists.ubuntu.com/archives/kubuntu-users/">
<!ENTITY kubuntu-lists-users "http://lists.ubuntu.com/mailman/listinfo/kubuntu-users/">
<!ENTITY kubuntu-lists-devel "http://lists.ubuntu.com/mailman/listinfo/kubuntu-devel/">
<!ENTITY kubuntu-mirrors "http://distrowatch.com/kubuntu">
<!ENTITY kubuntu-forums "http://ubuntuforums.org/forumdisplay.php?f=68">
<!ENTITY kubuntu-forums2 "http://kubuntuforums.net">
<!ENTITY kubuntu-wiki "http://www.ubuntu.com/wiki/Kubuntu">
<!ENTITY kubuntu-irc "irc.freenode.net channel kubuntu">
<!ENTITY kubuntu-documentation-site "http://www.kubuntu.org/documentation.php">
<!ENTITY kubuntu-wiki-UserDocumentation "https://wiki.kubuntu.com/UserDocumentation">
<!-- XUBUNTU URL RESOURCES --><!ENTITY xubuntu-irc "irc.freenode.net channel xubuntu">
<!-- DEBIAN RESOURCES --><!ENTITY debian-apt "http://www.debian.org/doc/user-manuals#apt-howto">
<!-- EXTERNAL URL RESOURCES --><!ENTITY linmodem "http://www.linmodems.org/">
<!ENTITY gnome "http://www.gnome.org/">
<!ENTITY linuxorg "http://www.linux.org/">
<!ENTITY ooo "http://www.openoffice.org/">
<!ENTITY kde "http://www.kde.org/">
<!ENTITY lugww "http://lugww.counter.li.org/">
<!ENTITY ubuntu-watch "http://distrowatch.com/ubuntu/">
<!ENTITY realplayer-download "http://www.real.com/linux/">
<!ENTITY nvu-download "http://www.nvu.com/download.html">
<!ENTITY sunjava-download "http://java.sun.com/j2se/1.5.0/download.jsp">
<!ENTITY xorg "http://www.x.org">
<!ENTITY dyndns "http://www.dyndns.org">
<!ENTITY shoutcast "http://www.shoutcast.com/">
<!ENTITY freedomtoaster "http://www.freedomtoaster.org/">
<!-- ubuntu-screenshots TODO --><!ENTITY kubuntu-screenshots "http://shots.osdir.com/slideshows/slideshow.php?release=306&amp;slide=1">
<!ENTITY mozilla "http://www.mozilla.org/">
<!ENTITY mozilla-firefox "http://www.mozilla.org/products/firefox/">
<!ENTITY gnu "http://www.gnu.org/">
<!ENTITY gnu-philosophy "http://www.gnu.org/philosophy/">
<!ENTITY win4lin "http://www.win4lin.com">
<!ENTITY codeweavers "http://www.codeweavers.com">
<!ENTITY kernel "http://www.kernel.org">
<!ENTITY google "http://www.google.com">
<!ENTITY kdelook " http://www.kde-look.org">
<!-- this entity controls the url for addons--><!ENTITY java-download "http://java.sun.com/j2se/1.5.0/download.jsp">
<!ENTITY skype-deb "skype_1.2.0.17-1_i386.deb">
<!ENTITY skype-download "http://www.skype.com/go/getskype-linux-deb">
<!ENTITY scanmodem-gz "scanModem.gz">
<!ENTITY scanmodem-url "http://linmodems.technion.ac.il/packages/scanModem.gz">
<!ENTITY ext2fs-url "http://www.fs-driver.org/index.html">
<!ENTITY mvb-tar "mvb_1.6.tgz">
<!ENTITY mvb-url "http://www.xscd.com/pub/mvb/&mvb-tar;">
<!-- TLDP --><!ENTITY ldp-pre-install-check "http://tldp.org/HOWTO/Pre-Installation-Checklist/">
<!-- LANGUAGES (sorted by two letter code)--><!ENTITY Afar "aa">
<!ENTITY Abkhazian "ab">
<!ENTITY Afrikaans "af">
<!ENTITY Amharic "af">
<!ENTITY Arabic "ar">
<!ENTITY Assamese "as">
<!ENTITY Aymara "ay">
<!ENTITY Azerbaijani "az">
<!ENTITY Bashkir "ba">
<!ENTITY Byelorussian "be">
<!ENTITY Bulgarian "bg">
<!ENTITY Bihari "bh">
<!ENTITY Bislama "bi">
<!ENTITY Bangla "bn">
<!ENTITY Bengali "bn">
<!ENTITY Tibetan "bo">
<!ENTITY Breton "br">
<!ENTITY Catalan "ca">
<!ENTITY Corsican "co">
<!ENTITY Czech "cs">
<!ENTITY Welsh "cy">
<!ENTITY Danish "da">
<!ENTITY German "de">
<!ENTITY Bhutani "dz">
<!ENTITY Greek "el">
<!-- <!ENTITY EnglishAmerican 'en'> --><!ENTITY EnglishAmerican "C">
<!ENTITY Esperanto "eo">
<!ENTITY Spanish "es">
<!ENTITY Estonian "et">
<!ENTITY Basque "eu">
<!ENTITY Persian "fa">
<!ENTITY Finnish "fi">
<!ENTITY Fiji "fj">
<!ENTITY Faeroese "fo">
<!ENTITY French "fr">
<!ENTITY Frisian "fy">
<!ENTITY Irish "ga">
<!ENTITY Gaelic "gd">
<!ENTITY ScotsGaelic "gd">
<!ENTITY Galician "gl">
<!ENTITY Guarani "gn">
<!ENTITY Gujarati "gu">
<!ENTITY Hausa "ha">
<!ENTITY Hindi "hi">
<!ENTITY Croatian "hr">
<!ENTITY Hungarian "hu">
<!ENTITY Armenian "hy">
<!ENTITY Interlingua "ia">
<!ENTITY Interlingue "ie">
<!ENTITY Inupiak "ik">
<!ENTITY Indonesian "in">
<!ENTITY Icelandic "is">
<!ENTITY Italian "it">
<!ENTITY Hebrew "iw">
<!ENTITY Japanese "ja">
<!ENTITY Yiddish "ji">
<!ENTITY Javanese "jw">
<!ENTITY Georgian "ka">
<!ENTITY Kazakh "kk">
<!ENTITY Greenlandic "kl">
<!ENTITY Cambodian "km">
<!ENTITY Kannada "kn">
<!ENTITY Korean "ko">
<!ENTITY Kashmiri "ks">
<!ENTITY Kurdish "ku">
<!ENTITY Kirghiz "ky">
<!ENTITY Latin "la">
<!ENTITY Lingala "ln">
<!ENTITY Laothian "lo">
<!ENTITY Lithuanian "lt">
<!ENTITY Latvian "lv">
<!ENTITY Lettish "lv">
<!ENTITY Malagasy "mg">
<!ENTITY Maori "mi">
<!ENTITY Macedonian "mk">
<!ENTITY Malayalam "ml">
<!ENTITY Mongolian "mn">
<!ENTITY Moldavian "mo">
<!ENTITY Marathi "mr">
<!ENTITY Malay "ms">
<!ENTITY Maltese "mt">
<!ENTITY Burmese "my">
<!ENTITY Nauru "na">
<!ENTITY Nepali "ne">
<!ENTITY Dutch "nl">
<!ENTITY Norwegian "no">
<!ENTITY Occitan "oc">
<!ENTITY Afan "om">
<!ENTITY Oromo "om">
<!ENTITY Oriya "or">
<!ENTITY Punjabi "pa">
<!ENTITY Polish "pl">
<!ENTITY Pushto "ps">
<!ENTITY Pashto "ps">
<!ENTITY Portuguese "pt">
<!ENTITY Quechua "qu">
<!ENTITY Rhaeto-Romance "rm">
<!ENTITY Kirundi "rn">
<!ENTITY Romanian "ro">
<!ENTITY Russian "ru">
<!ENTITY Kinyarwanda "rw">
<!ENTITY Sanskrit "sa">
<!ENTITY Sindhi "sd">
<!ENTITY Sangro "sg">
<!ENTITY Serbo-Croatian "sh">
<!ENTITY Singhalese "si">
<!ENTITY Slovak "sk">
<!ENTITY Slovenian "sl">
<!ENTITY Samoan "sm">
<!ENTITY Shona "sn">
<!ENTITY Somali "so">
<!ENTITY Albanian "sq">
<!ENTITY Serbian "sr">
<!ENTITY Siswati "ss">
<!ENTITY Sesotho "st">
<!ENTITY Sudanese "su">
<!ENTITY Swedish "sv">
<!ENTITY Swahili "sw">
<!ENTITY Tamil "ta">
<!ENTITY Tegulu "te">
<!ENTITY Tajik "tg">
<!ENTITY Thai "th">
<!ENTITY Tigrinya "ti">
<!ENTITY Turkmen "tk">
<!ENTITY Tagalog "tl">
<!ENTITY Setswana "tn">
<!ENTITY Tonga "to">
<!ENTITY Turkish "tr">
<!ENTITY Tsonga "ts">
<!ENTITY Tatar "tt">
<!ENTITY Twi "tw">
<!ENTITY Ukrainian "uk">
<!ENTITY Urdu "ur">
<!ENTITY Uzbek "uz">
<!ENTITY Vietnamese "vi">
<!ENTITY Volapuk "vo">
<!ENTITY Wolof "wo">
<!ENTITY Xhosa "xh">
<!ENTITY Yoruba "yo">
<!ENTITY Chinese "zh">
<!ENTITY Zulu "zu">
<!ENTITY % genericent SYSTEM "../../libs/generic.ent">
<!ENTITY sg-title "Server Guide">
<!ENTITY secguide-title "Security Guide">
<!ENTITY installguide-rev "0.1">
<!ENTITY % cdo-C SYSTEM "../../../libs/cdo-C.ent">
<!-- COMMON DOC OBJECTS --><!ENTITY copyright SYSTEM "../common/C/copyright.xml">
<!ENTITY conventions SYSTEM "../common/C/conventions.xml">
<!ENTITY feedback SYSTEM "../common/C/feedback.xml">
<!ENTITY publisher SYSTEM "../common/C/publisher.xml">
<!ENTITY legalnotice SYSTEM "../common/C/legalnotice.xml">
<!ENTITY disclaimer SYSTEM "../common/C/disclaimer.xml">
<!ENTITY inline-ubuntu-icon SYSTEM "../common/C/inlinemediaobject-ubuntu-icon.xml">
<!ENTITY inline-ubuntu-icon-header SYSTEM "../common/C/inlinemediaobject-ubuntu-icon-header.xml">
<!ENTITY relative-ubuntu-icon SYSTEM "../common/C/mediaobject-relative-ubuntu-icon.xml">
<!ENTITY ubuntu-icon SYSTEM "../common/C/mediaobject-ubuntu-icon.xml">
<!ENTITY gpl SYSTEM "../common/C/gpl.xml">
<!ENTITY fdl SYSTEM "../common/C/fdl.xml">
<!ENTITY cc-by-sa SYSTEM "../common/C/ccbysa.xml">
<!ENTITY % gnome-menus-C SYSTEM "../../../ubuntu/libs/gnome-menus-C.ent">
<!-- MENUS --><!-- Please keep entries alphabetical, it makes them much easier to find & use --><!ENTITY about-me SYSTEM "../menus/C/about-me.xml">
<!ENTITY accessories SYSTEM "../menus/C/accessories.xml">
<!ENTITY acro-read SYSTEM "../menus/C/acro-read.xml">
<!ENTITY administration SYSTEM "../menus/C/administration.xml">
<!ENTITY amule SYSTEM "../menus/C/amule.xml">
<!ENTITY archive-man SYSTEM "../menus/C/archive-man.xml">
<!ENTITY assistive-technology-preferences SYSTEM "../menus/C/assistive-technology-preferences.xml">
<!ENTITY azureus SYSTEM "../menus/C/azureus.xml">
<!ENTITY blender3d SYSTEM "../menus/C/blender3d.xml">
<!ENTITY boot SYSTEM "../menus/C/boot.xml">
<!ENTITY calculator SYSTEM "../menus/C/calculator.xml">
<!ENTITY character-map SYSTEM "../menus/C/character-map.xml">
<!ENTITY desktop-background SYSTEM "../menus/C/desktop-background.xml">
<!ENTITY desktop-preferences SYSTEM "../menus/C/desktop-preferences.xml">
<!ENTITY device-manager SYSTEM "../menus/C/device-manager.xml">
<!ENTITY dictionary SYSTEM "../menus/C/dictionary.xml">
<!ENTITY disks SYSTEM "../menus/C/disks.xml">
<!ENTITY downloader-x SYSTEM "../menus/C/downloader-x.xml">
<!ENTITY file-management SYSTEM "../menus/C/file-management.xml">
<!ENTITY firefox SYSTEM "../menus/C/firefox.xml">
<!ENTITY firestarter-firewall-tool SYSTEM "../menus/C/firestarter-firewall-tool.xml">
<!ENTITY font SYSTEM "../menus/C/font.xml">
<!ENTITY gaim SYSTEM "../menus/C/gaim.xml">
<!ENTITY games SYSTEM "../menus/C/games.xml">
<!ENTITY gftp SYSTEM "../menus/C/gftp.xml">
<!ENTITY gimp SYSTEM "../menus/C/gimp.xml">
<!ENTITY gnome-app-install SYSTEM "../menus/C/gnomeappinstall.xml">
<!ENTITY gnome-config-editor SYSTEM "../menus/C/gnome-config-editor.xml">
<!ENTITY gparted SYSTEM "../menus/C/gparted.xml">
<!ENTITY graphics SYSTEM "../menus/C/graphics.xml">
<!ENTITY gthumb SYSTEM "../menus/C/gthumb.xml">
<!ENTITY home-folder SYSTEM "../menus/C/home-folder.xml">
<!ENTITY inkscape SYSTEM "../menus/C/inkscape.xml">
<!ENTITY internet SYSTEM "../menus/C/internet.xml">
<!ENTITY keyboard SYSTEM "../menus/C/keyboard.xml">
<!ENTITY keyboard-shortcuts SYSTEM "../menus/C/keyboard-shortcuts.xml">
<!ENTITY limewire SYSTEM "../menus/C/limewire.xml">
<!ENTITY login-screen-setup SYSTEM "../menus/C/login-screen-setup.xml">
<!ENTITY logout SYSTEM "../menus/C/logout.xml">
<!ENTITY menu-editor SYSTEM "../menus/C/menu-editor.xml">
<!ENTITY menus-and-toolbars SYSTEM "../menus/C/menus-and-toolbars.xml">
<!ENTITY mouse SYSTEM "../menus/C/mouse.xml">
<!ENTITY multimedia-systems-selector SYSTEM "../menus/C/multimedia-systems-selector.xml">
<!ENTITY network-proxy SYSTEM "../menus/C/network-proxy.xml">
<!ENTITY networking SYSTEM "../menus/C/networking.xml">
<!ENTITY nvu SYSTEM "../menus/C/nvu.xml">
<!ENTITY open-office SYSTEM "../menus/C/open-office.xml">
<!ENTITY palmos-devices SYSTEM "../menus/C/palmos-devices.xml">
<!ENTITY preferred-applications SYSTEM "../menus/C/preferred-applications.xml">
<!ENTITY printing SYSTEM "../menus/C/printing.xml">
<!ENTITY qtparted SYSTEM "../menus/C/qtparted.xml">
<!ENTITY remote-desktop SYSTEM "../menus/C/remote-desktop.xml">
<!ENTITY removable-drives-and-media SYSTEM "../menus/C/removable-drives-and-media.xml">
<!ENTITY realplayer SYSTEM "../menus/C/realplayer.xml">
<!ENTITY rhythmbox SYSTEM "../menus/C/rhythmbox.xml">
<!ENTITY route-planner SYSTEM "../menus/C/route-planner.xml">
<!ENTITY screen-resolution SYSTEM "../menus/C/screen-resolution.xml">
<!ENTITY screensaver SYSTEM "../menus/C/screensaver.xml">
<!ENTITY scribus SYSTEM "../menus/C/scribus.xml">
<!ENTITY services SYSTEM "../menus/C/services.xml">
<!ENTITY sessions SYSTEM "../menus/C/sessions.xml">
<!ENTITY shared-folders SYSTEM "../menus/C/shared-folders.xml">
<!ENTITY skype SYSTEM "../menus/C/skype.xml">
<!ENTITY software-properties SYSTEM "../menus/C/software-properties.xml">
<!ENTITY sound SYSTEM "../menus/C/sound.xml">
<!ENTITY soundandvideo SYSTEM "../menus/C/soundandvideo.xml">
<!ENTITY synaptic SYSTEM "../menus/C/synaptic.xml">
<!ENTITY systemtools SYSTEM "../menus/C/systemtools.xml">
<!ENTITY terminal SYSTEM "../menus/C/terminal.xml">
<!ENTITY text-editor SYSTEM "../menus/C/text-editor.xml">
<!ENTITY theme SYSTEM "../menus/C/theme.xml">
<!ENTITY time-date SYSTEM "../menus/C/time-date.xml">
<!ENTITY totem SYSTEM "../menus/C/totem.xml">
<!ENTITY ubuntu-update-manager SYSTEM "../menus/C/ubuntu-update-manager.xml">
<!ENTITY users SYSTEM "../menus/C/users.xml">
<!ENTITY users-groups SYSTEM "../menus/C/users-groups.xml">
<!ENTITY windows SYSTEM "../menus/C/windows.xml">
<!ENTITY xchat-gnome SYSTEM "../menus/C/xchat-gnome.xml">
<!ENTITY xine SYSTEM "../menus/C/xine.xml">
<!ENTITY xmms SYSTEM "../menus/C/xmms.xml">
<!ENTITY % xinclude SYSTEM "../../../libs/xinclude.mod">
<!ELEMENT xi:include (xi:fallback)?>
<!ATTLIST xi:include xmlns:xi CDATA #FIXED "http://www.w3.org/2001/XInclude">
<!ATTLIST xi:include href CDATA #REQUIRED>
<!ATTLIST xi:include parse (xml | text) "xml">
<!ATTLIST xi:include xpointer CDATA #IMPLIED>
<!ATTLIST xi:include encoding CDATA #IMPLIED>
<!ATTLIST xi:include accept CDATA #IMPLIED>
<!ATTLIST xi:include accept-charset CDATA #IMPLIED>
<!ATTLIST xi:include accept-language CDATA #IMPLIED>
<!ELEMENT xi:fallback ANY>
<!ATTLIST xi:fallback xmlns:xi CDATA #FIXED "http://www.w3.org/2001/XInclude">
<!ENTITY % local.preface.class "| xi:include">
<!ENTITY % local.part.class "| xi:include">
<!ENTITY % local.chapter.class "| xi:include">
<!ENTITY % local.divcomponent.mix "| xi:include">
<!ENTITY % local.para.char.mix "| xi:include">
<!ENTITY % local.info.class "| xi:include">
<!ENTITY % local.common.attrib "xmlns:xi            CDATA       #FIXED       'http://www.w3.org/2001/XInclude'">
<!ENTITY language "&EnglishAmerican;">
]>
<chapter id="networking" status="complete">
	<title>네트워킹</title>
  <para>네트워크는 연결된 장치 간에 정보를 공유하고 배포할 목적으로 실제 케이블 또는 무선 링크로 연결된 컴퓨터 시스템, 프린터, 그리고 관련되는 장비와 같은 두 개 이상의 장치로 구성 됩니다.</para>
  <para>우분투 서버 안내서의 이 영역은 네트워크 개념의 개괄적인 설명과 잘 알려진 네트워크 프로토콜과 서버 프로그램의 자세한 논의를 포함하는, 네트워킹에 속하는 일반적이고 특정한 정보를 제공 합니다.</para>
	<sect1 id="network-configuration" status="complete">
		<title>네트워크 설정</title>
          <para>우분투는 여러분의 네트워크 장치를 설정할 수 있는 몇 가지 그래픽 유틸리티를 제공 합니다. 이 문서는 서버 관리자를 위하여 작성되었고 명령어 라인에서 여러분의 네트워크를 관리하는 것에 중점 합니다.</para>
      <sect2 id="ethernet" status="complete">
        <title>이더넷</title> 
          <para>대부분 이더넷 설정은 <filename>/etc/network/interfaces</filename> 파일 하나에 중앙화 되었습니다. 만약 여러분이 이더넷 장치를 가지고 있지 않다면, 이 파일에는 오직 loopback 인터페이스만 보일 것이고, 그것은 다음과 비슷하게 보일 겁니다: <screen># This file describes the network interfaces available on your system
# and how to activate them. For more information, see interfaces(5).

# The loopback network interface
auto lo
iface lo inet loopback
address 127.0.0.1
netmask 255.0.0.0</screen> 만약 여러분이 오직 하나의 이더넷 장치, eth0를 가지고 있고, 그것이 DHCP 서버에서 설정을 가지고 부트 시에 자동으로 올라와야 한다면, 다음의 두 줄이 더해지는 것이 필요 합니다: <screen>auto eth0
iface eth0 inet dhcp</screen> 첫 번째 줄은 eth0 장치가 여러분이 부팅을 할 때 자동적으로 올라와야 한다는 것을 지정 합니다. 두 번째 줄은, 인터페이스 (<quote>iface</quote>) eth0는 IPv4 주소 체계를 (IPv6 장치를 위해서는 <quote>inet</quote> 를 <quote>inet6</quote> 로 대체함) 가지고 DHCP에서 자동적으로 그 장치의 설정을 가져야 한다는 것을, 의미 합니다. 여러분의 네트워크와 DHCP 서버가 올바르게 설정되었음을 가정하고, 이 기계의 네트워크는 올바르게 동작하기 위해 더 이상의 설정을 필요로 하지 않습니다. DHCP 서버는 기본 설정 게이트웨이(<application>route</application> 명령을 통하여 이행되는), 장치의 IP 주소(<application>ifconfig</application> 명령을 통하여 이행되는), 그리고 네트워크 상에서 사용되는 DNS 서버를(<filename>/etc/resolv.conf</filename> 파일에 이행되는) 제공 합니다.</para>
		<para>여러분의 이더넷 장치를 고정 IP 주소와 여러분에 맞는 설정값으로 설정을 하려면, 몇 가지 정보가 더 필요 합니다. eth1 장치에 192.168.0.2 IP 주소를, 일반적인 255.255.255.0 netmask와 함께 지정하기를 원한다고 생각해 봅니다. 여러분의 기본 설정 게이트웨이의 IP 주소는 192.168.0.1 입니다. <filename>/etc/network/interfaces</filename> 파일에 다음과 같이 입력을 합니다: <screen>iface eth1 inet static
	address 192.168.0.2
	netmask 255.255.255.0
	gateway 192.168.0.1</screen> 이 경우에는, <filename>/etc/resolv.conf</filename> 파일에 여러분의 DNS 서버를 수동으로 지정하는 것이 필요하고, 이것과 비슷할 겁니다: <screen>search mydomain.com
nameserver 192.168.0.1
nameserver 4.2.2.2</screen> <emphasis role="italics">search</emphasis> 지시자는 여러분의 네트워크 상의 이름을 해결하기 위한 시도를 할 때 mydomain.com을 호스트 이름 질의에 추가하게 됩니다. 예를 들어, 만약 여러분의 네트워크 도메인이 mydomain.com 이고, 여러분이 호스트 <quote>mybox</quote> 에 ping을 시도하면, 그 DNS 질의는 이름의 파악을 위하여 <quote>mybox.mydomain.com</quote> 으로 변경 됩니다. <emphasis role="italics">nameserver</emphasis> 지시자는 호스트 이름을 IP 주소로 해결하기 위하여 사용되는 DNS 서버를 지정 합니다. 만약 여러분 소유의 네임서버를 사용하면, 그것을 여기에 입력 하십시오. 그렇지 않다면, 여러분의 인터넷 서비스 제공자에게 사용할 우선(primary) 그리고 이차(secondary) DNS 서버를 문의하고, 그것들을 위에 보인 것과 같이 <filename>/etc/resolv.conf</filename> 파일에 입력 합니다.</para>
		<para>다이얼업 PPP 인터페이스, IPv6 네트워킹, VPN 장치, 기타 등등을 포함하는 많은 다른 설정들이 가능합니다. 더 많은 정보와 지원되는 선택 사항들은 <application>man 5 interfaces</application> 를 참조 하십시오. 기억해야 할 것은,  <filename>/etc/network/interfaces</filename> 파일은 <application>ifup</application>/<application>ifdown</application> 스크립트에 의하여 사용되고, 그것들은 다른 리눅스 배포판에서 사용되는 것보다 높은 수준의(역주:사용의 편의를 기했다는 의미) 설정 체계 입니다. <application>ifconfig</application>, <application>route</application>, 그리고 <application>dhclient</application> 와 같은 전통적이고, 낮은 수준의(역주:명령어 라인에 직접 입력해야 한다는 의미) 유틸리티는 여전히 ad hoc 설정을 위하여 사용 가능 합니다.</para>
      </sect2>
      <sect2 id="managing-dns-entries" status="complete">
          <title>DNS 항목 관리</title>
            <para>이 영역은 IP 주소를 호스트 이름으로 파악을 하고 또 그 반대로 알아내는데 사용하는 네임서버를 어떻게 설정하는지에 대한 설명을 합니다. 이것은 시스템을 하나의 네임 서버로 어떻게 구축하는지를 설명하지는 않습니다.</para>
            <para>DNS 항목을 관리하려면, 여러분은 <filename>/etc/resolv.conf</filename> 파일에서 DNS 이름을 추가, 편집 또는 삭제할 수 있습니다. <ulink url="../sample/resolv.conf">예제 파일</ulink>이 아래와 같이 주어집니다:</para>
<programlisting>
search com
nameserver 204.11.126.13
nameserver 64.125.134.133
nameserver 64.125.134.132
nameserver 208.185.179.218
</programlisting>
            
            <para><application>search</application> 키는 불완전한 호스트 이름에 더하여지는 문자를 지정 합니다. 여기에, 우리는 그것을 <application>com</application> 으로 언급하였습니다. 그러므로, 우리가 다음과 수행할 때: <command>ping ubuntu</command> 은 <command>ping ubuntu.com</command> 으로 해석되어 집니다.</para> 

            <para><application>nameserver</application> 키는 네임서버 IP 주소를 지정 합니다. 그것은 주어진 IP 주소 또는 호스트 이름을 해결하기 위하여 사용 됩니다. 이 파일은 복수 개의 nameserver 항목을 가질 수 있습니다. 네임서버들은 적힌 것과 같은 순서로 네트워크 질의에 사용 됩니다.</para>

            <warning>
            <para>만약 DNS 서버 이름이 동적으로 DHCP 또는 PPPOE (여러분의 ISP에서) 읽혀졌다면, 이 파일에 nameserver 항목을 추가하지 마십시오. 그것은 자동적으로 업데이트 됩니다.</para>
            </warning>

        </sect2>
        <sect2 id="managing-hosts" status="complete">
          <title>호스트 관리</title>
            <para>호스트를 관리하기 위하여, 여러분은 <filename>/etc/hosts</filename> 파일에서 호스트를 추가, 편집 또는 삭제할 수 있습니다. 그 파일은 IP 주소와 그에 대응하는 호스트 이름을 가집니다. 여러분의 시스템이 호스트 이름으로 IP 주소를 해결하거나 IP 주소로 호스트 이름을 결정할 때, 그것은 네임서버를 사용하기 전에 <filename>/etc/hosts</filename> 파일을 참조 합니다. 만약 그 IP 주소가 <filename>/etc/hosts</filename> 파일 내에 열거되었다면, 네임서버는 사용되지 않습니다. 이 동작은 여러분이 위험을 감수하는 것을 전제로 <filename> /etc/nsswitch.conf</filename> 파일을 편집하는 것으로 변경될 수 있습니다.</para>

            <para>만약 여러분의 네트워크이 DNS에 나열되지 않은 IP 주소를 가지는 컴퓨터들을 가지고 있다면, 그것들을 <filename>/etc/hosts</filename> 파일에 추가하는 것을 권장 합니다.</para>
        </sect2>
    </sect1>
	<sect1 id="tcpip" status="complete">
		<title>TCP/IP</title>
          <para>Transmission Control Protocol and Internet Protocol (TCP/IP) 는 1970년대 후반에 Defense Advanced Research Projects Agency (DARPA) 에 의하여 개발된 프로토콜의 표준화된 규격이고 다른 종류의 컴퓨터와 컴퓨터 네트워크 간에 통신을 하기 위한 수단 입니다. TCP/IP 는 인터넷을 주도하는 힘이고, 그러므로 그것은 지구상의 네트워크 프로토콜 중에 가장 인기있는 규약 입니다.</para>
      <sect2 id="tcpip-introduction" status="complete">
        <title>TCP/IP 소개</title> 
          <para>TCP/IP의 두 가지 프로토콜 요소는 컴퓨터 네트워킹의 다른 측면을 다룹니다. <emphasis>Internet Protocol</emphasis>, TCP/IP의 "IP"는 네트워크 정보의 기본 단위로서 <emphasis role="italics">IP datagram</emphasis> 을 사용하는 네트워크 패킷 라우팅만을 다루는 접속이 없는 프로토콜 입니다. TCP/IP의 "TCP" 는 <emphasis> Transmission Control Protocol</emphasis> 이고, 네트워크 호스트들이 데이터 스트림을 교환하기 위하여 사용될 수 있는 접속을 이루기 위해 활성화 합니다. TCP는 또한 접속들 간에 자료가 한 네트워크 호스트에서 주고 받는 것과 마찬가지로 다른 네트워크 호스트에서 보내지는 것도 보장 합니다.</para>
          </sect2>
        <sect2 id="tcpip-configuration" status="complete">
          <title>TCP/IP 설정</title>
            <para>TCP/IP 프로토콜 설정은, 해당 설정 파일들을 편집하거나, 적당한 TCP/IP 설정 값을 네트워크 클라이언트에게 자동적으로 제공하기 위하여 사용하는 Dynamic Host Configuration Protocol (DHCP) 서버와 같은 솔루션을 적용하는 것에 의해, 반드시 지정되는 여러가지 요소로 구성 합니다. 이 설정 값들은 여러분의 우분투 시스템의 적절한 네트워크 동작의 편의를 위하여 반드시 정확하게 지정되어야 합니다.</para>
            <para>TCP/IP의 공통적인 설정 요소와 그들의 목적은 다음과 같습니다: <itemizedlist>
               <listitem>
                  <para><emphasis role="bold">IP address</emphasis> IP 주소는, 점으로 구분되는 네 개의 0부터 255까지의 십진수 범위의 숫자들이고, 각각의 네 숫자는 전체 주소를 위한 총 32 bits의 8 bits 주소를 표현하는, 유일한 식별자 입니다. 이러한 형식은 <emphasis>dotted quad notation</emphasis> 라 불립니다.</para>
               </listitem>
               <listitem>
                  <para><emphasis role="bold">Netmask</emphasis> 서브넷 마스크는 (또는 간략하게, <emphasis>netmask</emphasis>) 네트워크 상의 비트 마스크, 또는 네트워크에 중요한 IP 주소에서 <emphasis>subnetwork</emphasis> 에 중요한 비트를 구분하는 부분인 플랙의 집합 입니다. 예를 들어, 클래스 C 네트워크에서, 표준 netmask는 255.255.255.0 이고, IP 주소의 첫 3 바이트는 차폐하고 IP 주소의 마지막 바이트는 서브 네트워크 상의 호스트를 지정하기 위해 사용하도록 남겨지는 것을 허용 합니다.</para>
               </listitem>
               <listitem>
                  <para><emphasis role="bold">Network Address</emphasis> 네트워크 주소는 IP 주소의 네크워크 부분을 구성하는 바이트를 표현 합니다. 예를 들어, 클래스 A 네트워크 내의 12.128.1.2 호스트는 네트워크 주소로 12.0.0.0을 사용하고, 그 IP 주소의 첫 번째 바이트인 12가 그것을 표현 합니다 (네트워크 부분). 0으로 표시되는 남겨진 세 바이트는 가능한 호스트 값을 표시하기 위해서 입니다. 아주 일반적인 사적 그리고 라우팅을 할 수 없는 192.168.1.100과 같은 IP 주소를 사용하는 네트워크 호스트는 192.168.1.0의 네트워크 주소를 사용하는 것이고, 클래스 C 인 192.168.1 네트워크와 그 네트워크 상에서 가능한 모든 호스트를 위한 마지막 자리의 0을 지정하는 것 입니다.</para>
               </listitem>
               <listitem>
                  <para><emphasis role="bold">브로드캐스트 주소</emphasis> 브로드캐스트 주소는 특정 네트워크 호스트를 지정하는 대신에 주어진 서브네트워크 상의 모든 호스트들에게 일제히 네트워크 데이터가 보내지는 것을 허용하는 IP 주소 입니다. IP 네트워크를 위한 표준화된 일반적 브로드캐스트 주소는 255.255.255.255 이지만, 이 브로드캐스트 주소는 라우터에 의하여 막히기 때문에 인터넷 상의 모든 호스트로 브로드캐스트 메세지를 보내는데 사용할 수는 없습니다. 좀 더 적당한 브로드캐스트 주소는 특정 서브네트워크에 일치하도록 지정을 합니다. 예를 들어, 잘 알려진 사설 C 클래스 IP 네트워크, 192.168.1.0 상의 브로드캐스트 주소는 192.168.1.255로 설정되어야 합니다. 브로드캐스트 메세지는 Address Resolution Protocol (ARP) 와 Routing Information Protocol (RIP) 같은 네트워크 프로토콜에 의하여 일반적으로 생산이 됩니다.</para>
               </listitem>
               <listitem>
                  <para><emphasis role="bold">게이트웨이 주소</emphasis> 게이트웨이 주소는 특정 네트워크 또는 네트워크 상의 호스트로 접근하기 위하여 통해야 하는 IP 주소 입니다. 만약 한 네트워크 호스트가 같은 네트워크 상에 위치하지 않은 다른 네트워크 호스트와 통신을 하기를 원한다면, 하나의 <emphasis>게이트웨이</emphasis>를 반드시 사용하여야 합니다. 많은 경우에, 게이트웨이 주소는 같은 네트워크 상의 라우터의 주소가 되고, 인터넷 호스트와 같은 다른 네트워크 또는 호스트로 트래픽을 넘기는데도 사용이 됩니다. 게이트웨이 주소 설정 값은 반드시 정확하여야 하고, 그렇지 않다면 여러분의 시스템은 같은 네트워크 밖에 있는 어떠한 호스트로도 접근을 하는 것이 불가능 합니다.</para>
               </listitem>
               <listitem>
                  <para><emphasis role="bold">네임서버 주소</emphasis> 네임서버 주소는 도메인 네임 서비스(DNS)의 IP 주소를 나타내고, 네트워크 호스트 이름을 IP 주소로 알아내는 역할을 합니다. 네임서버 주소의 세 가지 수준이 있고, 그것을 중요도의 순서로 지정하면: <emphasis>우선(일차)</emphasis> 네임서버, <emphasis>이차</emphasis> 네임서버, 그리고 <emphasis>삼차</emphasis> 네임서버 입니다. 여러분의 시스템이 네트워크 호스트 이름으로 그들에 대응하는 IP 주소를 알아내기 위해서는, 여러분은 시스템의 TCP/IP 설정에 여러분이 사용할 수 있게 허가된 올바른 네임서버 주소를 반드시 지정을 해야 합니다. 많은 경우에 이 네임서버 주소는 여러분의 네트워크 서비스 제공자에 의해서 제공될 수 있고 제공되어 지지만, 많은 무료 그리고 공개적으로 접근이 가능한 4.2.2.1 에서 4.2.2.6 까지의 IP 주소를 가지는 Level3 (Verizon) 서버와 같은 네임서버들이 사용가능 합니다.</para>
                     <tip>
                        <para>IP 주소, 넷마스크, 네트워크 주소, 브로드캐스트 주소, 그리고 게이트웨이 주소는 전형적으로 <filename>/etc/network/interfaces</filename> 파일 내에 해당 지시자를 사용하여 지정 됩니다. 네임서버 주소는 <filename>/etc/resolv.conf</filename> 파일 내에 <emphasis>nameserver</emphasis> 지시자를 통해 일반적으로 지정 됩니다. 더 많은 정보는, 터미널 프롬프트에서 다음의 명령을 사용하여, <filename>interfaces</filename> 또는 <filename>resolv.conf</filename> 를 위한 시스템 지침서를 읽어 보십시오:</para>
                     </tip>
                    <para><filename>interfaces</filename> 를 위한 시스템 매뉴얼 페이지는 다음의 명령으로 접근 합니다:</para>
                    <para>
<screen>
<command>man interfaces</command>
</screen>
                    </para>
                    <para><filename>resolv.conf</filename> 를 위한 시스템 매뉴얼 페이지는 다음의 명령으로 접근 합니다:</para>
                    <para>
<screen><command>man resolv.conf</command></screen>
                    </para>
               </listitem>
            </itemizedlist></para>
        </sect2>
        <sect2 id="ip-routing" status="complete">
          <title>IP 라우팅</title>
            <para>IP 라우팅은 네트워크 데이터가 보내지는 TCP/IP 네트워크 상에서 경로를 지정하고 찾기 위한 수단 입니다. 라우팅은 보내는 곳에서 받는 곳으로 네트워크 데이터 패킷을 전달하기 위한 지시를 위하여 <emphasis>routing tables</emphasis> 의 집합을 사용하고, 종종 <emphasis>routers</emphasis> 라고 알려진 네트워크 상의 많은 중간 지점을 경유 합니다. IP 라우팅의 두 가지 주요 형태가 있습니다: <emphasis>Static Routing(정적 라우팅)</emphasis> 과 <emphasis>Dynamic Routing(동적 라우팅)</emphasis></para>
            <para>정적 라우팅은 시스템의 라우팅 테이블에 손수 IP 라우트를 추가하는 것을 필요로 하고, 이것은 <application>route</application> 명령으로 라우팅 테이블을 조작하는 것으로 대개 마쳐지게 됩니다. 정적 라우팅은 동적 라우팅에 비해 많은 장점을 가집니다. 규모가 작은 네트워크 상의 단순한 적용, 예측 가능함(라우팅 테이블은 언제나 미리 계산이 되고, 그래서 경로는 그것이 사용되는 같은 각각의 시간을 예측할 수 있음), 그리고 동적 라우팅 프로토콜을 사용하지 않음에 기인하는 다른 라우터와 네트워크 링크에 낮은 오버헤드 등이 장점이 됩니다. 하지만, 정적 라우팅은 역시 단점도 가지고 있습니다. 예를 들어, 정적 라우팅은 규모가 작은 네트워크에 제한적이고 확장이 용이하지 않습니다. 또한, 경로를 고정한 특성 때문에, 정적 라우팅이 완전히 실패하면 네트워크 중단과 실패로 이어지게 됩니다.</para>
            <para>동적 라우팅은 보낸 곳에서 받는 곳까지 복수의 가능한 IP 라우트를 가지는 규모카 큰 네트웨크에 의존하고, 동적 라우팅이 가능하도록 라우팅 테이블의 자동 조정을 처리하는 Router Information Protocol (RIP) 과 같은 특별한 라우팅 프로토콜을 사용 합니다. 동적 라우팅은 정적 라우팅에 비해 여러가지 장점을 가집니다. 휼륭한 확장성, 네트워크 라우터의 실패와 중단에 적응하는 능력 등이 장점 입니다. 추가하여, 라우터가 다른 라우터의 존재와 가능한 경로를 스스로 배우기 때문에, 라우팅 테이블의 수작업 설정을 줄여 줍니다. 이 특성은 또한 작업자의 오류로 인한 라우팅 테이블의 실수가 일어나는 가능성을 제거 합니다. 하지만, 동적 라우팅은 완벽하지 않고, 계층적으로 복잡함과 라우터 통신의 추가적인 네트워크 오버헤드(최종 사용자에게는 직접적으로 이득을 주지않고 네트워크의 밴드위드를 소모하는)와 같은 단점을 가집니다.</para>
        </sect2>
        <sect2 id="tcp-and-udp" status="complete">
          <title>TCP와 UDP</title>
            <para>TCP는 접속 기반 프로토콜이고, 에러 교정과 <emphasis>flow control</emphasis> (흐름 제어)로 알려진 데이터의 배달을 보장하는 것을 제공 합니다. 흐름 제어는 데이터 스트림의 흐름이 중단되는 것이 필요한 때와, 예를 들어, 데이타의 완전하고 정확한 배달을 확신하기 위하여, <emphasis>collisions</emphasis> 과 같은 문제들로 인하여 재전송을 해야하는 이전의 보내진 패킷을 결정합니다. TPC는 전형적으로 데이타베이스 트랜잭션과 같은 중요한 정보를 교환하는 데에 사용되어 집니다.</para>
            <para>한편, User Datagram Protocol (UDP)는, <emphasis>connectionless</emphasis></para>
        </sect2>
        <sect2 id="icmp" status="complete">
          <title>ICMP</title>
            <para>Internet Control Messaging Protocol (ICMP)는 Request For Comments (RFC) #792에 정의된 바와 같이 Internet Protocol (IP)의 확장이고, 제어, 에러 그리고 정보 메세지를 포함하는 네트워크 패킷을 지원 합니다. ICMP는 <application>ping</application> 유틸리티와 같은 네트워크 프로그램에서 사용되고, 네트워크 호스트 또는 장치의 사용 가능함을 결정할 수 있습니다. ICMP에 의해 되돌려지는 몇 가지 에러 메세지의 예는 네트워크 호스트와 라우터와 같은 장치 모두에게 유용하고, <emphasis>Destination Unreachable</emphasis> 과 <emphasis>Time Exceeded</emphasis> 를 포함 합니다.</para>
        </sect2>
        <sect2 id="daemons" status="complete">
          <title>데몬</title>
            <para>데몬은 전형적으로 백그라운드에서 계속적으로 실행되는 그리고 다른 프로그램에서 데몬이 제공하는 기능을 위한 요청을 기다리는 특별한 시스템 응용 프로그램 입니다. 많은 데몬들은 네트워크 중심이고, 우분투 시스템 상의 백그라운드에서 수행되는 많은 수의 데몬들은 네트워크와 관련된 기능을 제공 합니다. 이러한 네트워크 데몬의 몇 가지 예는 웹 서버 기능을 제공하는 <emphasis>Hyper Text Transport Protocol Daemon</emphasis> (httpd), 보안 원격 로그인 쉘과 파일 전송 능력을 제공하는 <emphasis>Secure SHell Daemon</emphasis> (sshd), 그리고 이메일 서비스를 제공하는 <emphasis>Internet Message Access Protocol Daemon</emphasis> (imapd) 등을 포함 합니다.</para>
        </sect2>
    </sect1>
	<sect1 id="firewall-configuration" status="help">
		<title>방화벽 설정</title>
          <para>리눅스 커널은 <emphasis>Netfilter</emphasis> 서브 시스템을 포함하고, 이것은 여러분 서버로 오는 또는 경유하는 네트워크 트래픽을 조작하거나 운명을 결정하는데 사용 됩니다. 모든 현대적인 리눅스 방화벽 솔루션은 패킷을 걸러내기 위하여 이 시스템을 사용 합니다.</para>
        <sect2 id="firewall-introduction" status="help">
          <title>방화벽 소개</title>
            <para>커널의 패킷 필터링 시스템은 그것을 관리하기 위한 사용자 공간의 인터페이스가 없이 시스템 관리자가 약간의 작업을 하는 것이 필요 합니다. 이것은 iptables의 목적 입니다. 패킷이 여러분의 서버에 도착할 때, 패킷은 iptables를 통하여 사용자 공간에서 패킷에 제공되는 규칙에 근거하여 패킷의 수용, 조작 또는 거절을 위한 Netfilter 서브 시스템을 거치게 됩니다. 그러므로, iptables는, 만약 여러분이 그것에 익숙하다면, 여러분의 방화벽을 관리하기 위하여 필요한 전부이고, 작업을 단순화하기 위한 많은 프론트엔드들이 있습니다.</para>
        </sect2>
        <sect2 id="ip-masquerading" status="help">
          <title>IP 마스커레이딩</title>
            <para>IP 마스커레이딩(Masquerading:가장)의 목적은 여러분의 네트워크 상의 사설, 라우팅이 안되는 IP 주소를 가진 기계들이 IP의 가장을 통하여 인터넷을 접근하는 것을 허용하기 위해서 입니다. 여러분의 사설 네트워크에서 인터넷을 목적지로 하는 트래픽은 반드시, 그 요청을 만든 기계로 경로가 되돌아갈 수 있는 응답들을 위하여, 조작되어져야 합니다. 이것을 하기 위하여, 커널은 반드시 각각의 패킷의 <emphasis>source</emphasis> IP 어드레스를 변경하고, 그러므로 응답은 인터넷에서 사용 가능하지 않은 요청을 만든 사설 IP 주소 대신에 변경된 것에 따라 다시 되돌아오게 됩니다. 리눅스는 기계가 속하는 접속과 되돌와오는 패킷을 적절하게 재경로하는 것을 추적하기 위하여 <emphasis>접속 추적</emphasis> (conntrack)을 사용 합니다. 그러므로 여러분의 사설 네트워크를 떠난 트래픽은 여러분의 우분투 게이트웨이 기계로 향할 때 "가장"이 됩니다. 이 절차는 인터넷 접속 공유로 마이크로소프트의 문서에서는 알려져 있습니다.</para>
			<para>
              This can be accomplished with a single iptables rule, which may differ slightly
			  based on your network configuration:
			  <screen>sudo iptables -t nat -A POSTROUTING -s 192.168.0.0/16 -o ppp0 -j MASQUERADE</screen>
			  The above command assumes that your private address space is 192.168.0.0/16 and
			  that your Internet-facing device is ppp0.  The syntax is broken down as follows:
			  <itemizedlist>
				  <listitem><para>-t nat -- nat 테이블로 가기 위한 규칙</para></listitem>
				  <listitem><para>-A POSTROUTING -- POSTROUTING chain에 덧붙이는(-A) 규칙</para></listitem>
				  <listitem><para>-s 192.168.0.0/16 --  지정된 주소 공간에서 향하는 트래픽에 적용하는 규칙</para></listitem>
				  <listitem><para>-o ppp0 -- 지정된 네트워크 장치를 통하여 경유하도록 스케쥴된 트래픽에 적용하는 규칙</para></listitem>
				  <listitem><para>-j MASQUERADE -- 위에 설명된 대로 이 규칙에 일치하는 트래픽은 조작되기 위한 MASQUERADE 타켓으로 "jump" (-j)</para></listitem>
			  </itemizedlist>
			</para>
			<para>
              Each chain in the filter table (the default table, and where most or all packet
			  filtering occurs) has a default <emphasis>policy</emphasis> of
			  ACCEPT, but if you are creating a firewall in addition to a gateway device, you
			  may have set the policies to DROP or REJECT, in which case your masqueraded
			  traffic needs to be allowed through the FORWARD chain for the above rule to work:
			  <screen>sudo iptables -A FORWARD -s 192.168.0.0/16 -o ppp0 -j ACCEPT
sudo iptables -A FORWARD -d 192.168.0.0/16 -m state --state ESTABLISHED,RELATED -i ppp0 -j ACCEPT</screen>
			  The above commands will allow all connections from your local network to the
			  Internet and all traffic related to those connections to return to the machine
			  that initiated them.
			</para>
        </sect2>
        <sect2 id="firewall-tools" status="help">
          <title>도구</title>
            <para>
              There are many tools available to help you construct a complete firewall without
			  intimate knowledge of iptables.  For the GUI-inclined, 
			  <application>Firestarter</application> is quite popular and easy to use, and
			  <application>fwbuilder</application> is very powerful and will look familiar 
			  to an administrator who has used a commercial firewall utility such as Checkpoint 
			  FireWall-1.  If you prefer a command-line tool with plain-text configuration files, 
			  <application>Shorewall</application> is a very powerful solution to help you 
			  configure an advanced firewall for any network.  If your network is relatively 
			  simple, or if you don't have a network, <application>ipkungfu</application> should 
			  give you a working firewall "out of the box" with zero configuration, 
			  and will allow you to easily set up a more advanced firewall by editing simple, 
			  well-documented configuration files.  Another interesting tool is 
			  <application>fireflier</application>, which is designed to be a desktop firewall 
			  application.  It is made up of a server (fireflier-server) and your choice of GUI 
			  clients (GTK or QT), and behaves like many popular interactive firewall 
			  applications for Windows.
            </para>
        </sect2>
        <sect2 id="firewall-logs" status="help">
          <title>로그</title>
            <para>
              Firewall logs are essential for recognizing attacks, troubleshooting your
			  firewall rules, and noticing unusual activity on your network.  You must include
			  logging rules in your firewall for them to be generated, though, and logging
			  rules must come before any applicable terminating rule (a rule with a target
			  that decides the fate of the packet, such as ACCEPT, DROP, or REJECT).  For
			  example:
			  <screen>sudo iptables -A INPUT -m state --state NEW -p tcp --dport 80 -j LOG --log-prefix "NEW_HTTP_CONN: "</screen>
			  A request on port 80 from the local machine, then, would generate a log in dmesg
			  that looks like this:
			</para>
			<para>
			  <programlisting>[4304885.870000] NEW_HTTP_CONN: IN=lo OUT= MAC=00:00:00:00:00:00:00:00:00:00:00:00:08:00 SRC=127.0.0.1 DST=127.0.0.1 LEN=60 TOS=0x00 PREC=0x00 TTL=64 ID=58288 DF PROTO=TCP SPT=53981 DPT=80 WINDOW=32767 RES=0x00 SYN URGP=0</programlisting>
			</para>
			<para>
              The above log will also appear in <filename>/var/log/messages</filename>,
			  <filename>/var/log/syslog</filename>, and <filename>/var/log/kern.log</filename>.
			  This behavior can be modified by editing <filename>/etc/syslog.conf</filename>
			  appropriately or by installing and configuring <application>ulogd</application>
			  and using the ULOG target instead of LOG.  The <application>ulogd</application>
			  daemon is a userspace server that listens for logging instructions from the kernel
			  specifically for firewalls, and can log to any file you like, or even to a
			  <application>PostgreSQL</application> or <application>MySQL</application>
			  database.  Making sense of your firewall logs can be simplified by using a log
			  analyzing tool such as <application>fwanalog</application>, <application>
			  fwlogwatch</application>, or <application>lire</application>.
            </para>
        </sect2>
    </sect1>
	<sect1 id="openssh-server" status="complete">
		<title>OpenSSH 서버</title>
      <sect2 id="openssh-introduction">
        <title>소개</title> 
           <para>
            This section of the <phrase>Ubuntu</phrase> Server Guide introduces a powerful collection of tools
            for the remote control of networked computers and transfer of data between networked 
            computers, called <emphasis>OpenSSH</emphasis>. You will also learn
            about some of the configuration settings possible with the OpenSSH server application and
            how to change them on your Ubuntu system. 
          </para>
          <para>
            OpenSSH is a freely available version of the Secure Shell (SSH) protocol family of 
            tools for remotely controlling a computer or transferring files between computers.
            Traditional tools used to accomplish these functions, such as <application>telnet</application>
            or <application>rcp</application>, are insecure and transmit the user's password in
            cleartext when used. OpenSSH provides a server daemon and client tools to facilitate
            secure, encrypted remote control and file transfer operations, effectively replacing
            the legacy tools.
          </para>
          <para>
            The OpenSSH server component, <application>sshd</application>, listens continuously for
            client connections from any of the client tools. When a connection request occurs,
            <application>sshd</application> sets up the correct connection depending on the type
            of client tool connecting. For example, if the remote computer is connecting with the
            <application>ssh</application> client application, the OpenSSH server sets up a remote
            control session after authentication. If a remote user connects to an OpenSSH server with
            <application>scp</application>, the OpenSSH server daemon initiates a secure copy of files
            between the server and client after authentication. OpenSSH can use many authentication
            methods, including plain password, public key, and <application>Kerberos</application> tickets.
            </para>
          </sect2>
        <sect2 id="openssh-installation">
        <title>설치</title>
        <para>OpenSSH 클라이언트와 서버 프로그램의 설치는 간단 합니다. 우분투 시스템에 OpenSSH 클라이언트 프로그램을 설치하려면, 다음의 명령을 터미널 프롬프트에서 사용 합니다:</para>
           <para>
<screen>
<command>sudo apt-get install openssh-client</command>
</screen>
           </para>
        <para>OpenSSH 서버 프로그램과 관련되는 지원 파일을 설치하려면, 다음의 명령을 터미널 프롬프트에서 사용 합니다:</para>
           <para>
<screen>
<command>sudo apt-get install openssh-server</command>
</screen>
           </para>
        </sect2>
        <sect2 id="openssh-configuration">
          <title>설정</title>
            <para>
              You may configure the default behavior of the OpenSSH server application, <application>sshd</application>, by editing the file <filename>/etc/ssh/sshd_config</filename>. For information about the configuration directives used in this file, you may
              view the appropriate manual page with the following command, issued at a terminal prompt:
            </para>
               <para>
<screen>
<command>man sshd_config</command>
</screen>
               </para>
            <para>
            There are many directives in the <application>sshd</application> configuration file controlling such things as communications
            settings and authentication modes. The following are examples of configuration directives that can be changed by editing the <filename>/etc/ssh/ssh_config</filename> file.
            </para>
            <tip>
               <para>설정 파일을 편집하기 전에, 원래의 파일을 복사본을 만들고 쓰기에서 그것을 보호해야만 합니다. 그래서 원래의 설정을 참고로 그리고 필요한 경우 재사용할 수 있습니다.</para>
               <para><filename>/etc/ssh/sshd_config</filename> 파일을 복사하고 쓰기에서 그것을 보호하려면, 터미널 프롬프트에서 다음의 명령을 입력 합니다:</para>
	    </tip>
               <para>
<screen>
<command>sudo cp /etc/ssh/sshd_config /etc/ssh/sshd_config.original</command>
<command>sudo chmod a-w /etc/ssh/sshd_config.original</command>
</screen>
               </para> 
            <para>다음은 여러분이 변경할 수 있는 설정 지시자의 예 입니다:</para>
           <itemizedlist>
               <listitem>
               <para>여러분의 OpenSSH가 기본 설정된 TCP 포트 22 대신에 TCP 포트 2222를 사용하게 하려면, 다음과 같이 Port 지시자를 변경 합니다:</para>
               <para>Port 2222</para>
               </listitem>
	<listitem>
            <para><application>sshd</application> 가 공개 키 기반의 로그인 신뢰서를 허용하게 하려면, 간단히 이 줄을 더하거나 변경 합니다:</para>
               <para>PubkeyAuthentication yes</para>
            <para><filename>/etc/ssh/sshd_config</filename> 파일 내에 있고, 만약 이미 있다면, 그 줄의 주석처리 해제하는 것을 확신 하십시오.</para>
            </listitem>
            <listitem>
             <para>여러분의 OpenSSH 서버가 선-로그인 배너로 <filename>/etc/issue.net</filename> 파일의 내용을 표시하게 만드려면, 간단히 이 줄을 더하거나 변경 합니다:</para>
               <para>Banner /etc/issue.net</para>
               <para><filename>/etc/ssh/sshd_config</filename> 파일 내에 있습니다.</para>
             </listitem>
             </itemizedlist>
	    <para><filename>/etc/ssh/sshd_config</filename> 파일에 변경을 만든 후에, 그 파일을 저장하고, 변경의 효과를 가지려면 다음 명령을 터미널 프롬프트에서 사용하여 <application>sshd</application> 서버 프로그램을 재시작 합니다:</para>
               <para>
<screen>
<command>sudo /etc/init.d/ssh restart</command>
</screen>
               </para>
		<warning>
                           <para><application>sshd</application> 를 위한 많은 다른 설정 지시자는 여러분의 필요에 맞게 그 서버 프로그램의 동작을 변경하는 것을 위하여 사용가능 합니다. 그러나, 만약 여러분이 서버를 접근할 수 있는 오직 한 가지 방법이 <application>ssh</application> 이고, <filename>/etc/ssh/sshd_config</filename> 파일을 통해 <application>sshd</application> 를 설정하는데 실수를 하였다면, 서버를 재시작할 때 잠겨지거나 <application>sshd</application> 서버가 부정확한 설정 지시자 때문에 시작하는 것이 거부될 수 있음을 조언 합니다. 그러므로 원격 서버 상의 이 파일을 편집할 때는 정말로 조심스럽게 하시기 바랍니다.</para>
                        </warning>
        </sect2>
   <sect2 id="openssh-references" status="complete">
      <title>참조</title>
      <para>
      <ulink url="http://www.openssh.org/">OpenSSH 웹사이트</ulink>
      </para>
      <para>
      <ulink url="https://wiki.ubuntu.com/AdvancedOpenSSH">진보한 OpenSSH 위키 페이지</ulink>
      </para>
   </sect2>
     </sect1>
	<sect1 id="ftp-server" status="complete">
        <title>FTP 서버</title> 
            <para>파일 전송 프로토콜 (FTP)는 컴퓨터들 간에 파일을 올리고 내려받기 위한 TCP 프로토콜 입니다. FTP는 클라이언트/서버 모델로 동작을 합니다. 서버 구성 요소는 <emphasis>FTP 데몬</emphasis>으로 불립니다. 그것은 원격지 클라이언트에서의 FTP 요청을 계속적으로 듣습니다. 요청이 접수될 때, 그것은 로그인을 관리하고 접속을 만들어 줍니다. 세션이 지속되는 동안 그것은 FTP 클라이언트에서 보내지는 어떠한 명령도 실행을 합니다.</para>
            <para>FTP 서버로 접근하는 것은 다음의 두 가지 방법으로 관리할 수 있습니다:</para>
            <itemizedlist spacing="compact">
                <listitem>
                    <para>익명</para>
                </listitem>
                <listitem>
                    <para>인증</para>
                </listitem>
            </itemizedlist>
            <para>In the Anonymous mode, remote clients can access the FTP server by using the
                default user account called 'anonymous" or "ftp" and
                sending an email address as the password. In the Authenticated mode a user must
                have an account and a password. User access to the FTP server directories and files is
                dependent on the permissions defined for the account used at login. As a general
                rule, the FTP daemon will hide the root directory of the FTP server and change it to
                the FTP Home directory. This hides the rest of the file system from remote
            sessions.</para>
            <sect2 id="vsftpd-ftp-server-installation" status="complete">
                <title>vsftpd - FTP 서버 설치</title>
                    <para>vsftpd 는 우분투에서 사용할 수 있는 FTP 데몬 입니다. 이것은 설치, 설정, 그리고 관리하기가 쉽습니다. <application>vsftpd</application> 를 설치하려면 다음의 명령을 실행 합니다: <screen> <command>sudo apt-get install vsftpd</command> </screen></para>

                </sect2>
            <sect2 id="vsftpd-ftp-server-configuration" status="complete">
                <title>vsftpd - FTP 서버 설정</title>
                <para>
                You can edit the vsftpd configuration file,
                <filename>/etc/vsftpd.conf</filename>, to
                change the default settings.

                By default only anonymous FTP is
                allowed. If you wish to disable this option, you
                should change the following line:
<programlisting>
anonymous_enable=YES
</programlisting>
                to
<programlisting>
anonymous_enable=NO
</programlisting>
                By default, local system users are not allowed to
                login to FTP server. To change this setting, you
                should uncomment the following line:
<programlisting>
#local_enable=YES
</programlisting>
                By default, users are allowed to download files
                from FTP server. They are not allowed to upload
                files to FTP server. To change this setting, you
                should uncomment the following line:
<programlisting>
#write_enable=YES
</programlisting>
                Similarly, by default, the anonymous users are not
                allowed to upload files to FTP server. To change
                this setting, you should uncomment the following
                line:
<programlisting>
#anon_upload_enable=YES
</programlisting>
                The configuration file consists of many
                configuration parameters. The information about
                each parameter is available in the configuration
                file. Alternatively, you can refer to the man
                page, <command>man 5 vsftpd.conf</command> for
                details of each parameter. 
                </para>
                <para><application>vsftpd</application> 를 설정했으면 데몬을 시작할 수 있습니다. <application>vsftpd</application> 데몬을 시작하려면 다음의 명령을 실행 합니다: <screen> <command>sudo /etc/init.d/vsftpd start</command> </screen></para>
				<note><para>설정 파일에 기본 설정된 것은 보안의 사유를 위하여 지정된 것임을 주의 하십시오. 위의 변경된 각각은 시스템을 덜 보안적으로 할 수 있으므로, 그것들이 꼭 필요한 경우에만 변경을 하십시오.</para></note>
                </sect2>
    </sect1>
	<sect1 id="network-file-system" status="complete">
		<title>네트워크 파일 시스템 (NFS)</title>
          <para>NFS는 네트워크 상의 다른 사람과 디렉토리와 파일을 공유하는 시스템을 허용 합니다. NFS를 사용하는 것으로, 사용자와 프로그램은 원격지 시스템 상의 파일을 로컬 파일을 사용하는 것과 거의 비슷하게 접근할 수 있습니다.</para>

          <para>NFS가 제공하는 가장 주목할 만한 혜택의 몇 가지는 다음과 같습니다:</para>

          <itemizedlist>
          <listitem>
      <para>Local workstations use less disk space because commonly used data
can be stored on a single machine and still remain accessible to others
over the network.</para>
          </listitem>
          <listitem>
      <para>There is no need for users to have separate home directories on
every network machine. Home directories could be set up on the NFS
server and made available throughout the network.</para>
          </listitem>
          <listitem>

      <para>Storage devices such as floppy disks, CDROM drives, and USB
Thumb drives can be used by other machines on the network. This may
reduce the number of removable media drives throughout the
network.</para>
          </listitem>
          </itemizedlist>

      <sect2 id="nfs-installation" status="complete">
        <title>설치</title>
      
          <para>NFS 서버를 설치하기 위하여 다음의 명령을 터미널 프롬프트에서 입력 합니다:</para>
          <para>
<screen>
<command>sudo apt-get install nfs-kernel-server</command>
</screen>
          </para>
      </sect2>
      <sect2 id="nfs-configuration" status="complete">
        <title>설정</title>
          <para><filename>/etc/exports</filename> 파일에 디렉토리를 추가하는 것으로 내보낼 디렉토리를 설정할 수 있습니다. 예는:</para>
          <para>
<screen>
/ubuntu *(ro,sync,no_root_squash)
/home *(rw,sync,no_root_squash)
</screen>
          </para>

          <para>호스트 이름 형식의 하나를 *로 대체할 수 있습니다. 호스트 이름 정의를 가능한 지정하여 원하지 않는 시스템이 NFS 마운트를 접근할 수 없도록 합니다.</para>

          <para>NFS 서버를 시작하기 위하여, 다음의 명령을 터미널 프롬프트에서 실행할 수 있습니다:</para>
          <para>
<screen>
<command>sudo /etc/init.d/nfs-kernel-server start</command>
</screen>
          </para>
      </sect2>
      <sect2 id="nfs-client-configuration" status="complete">
        <title>NFS  클라이언트 설정</title>
          <para>다른 기계에서 공유된 NFS 디렉토리를 마운트하려면 <application>mount</application> 명령을 사용하고, 터미널 프롬프트에서 다음의 명령과 비슷하게(각자의 경우에 맞게) 명령을 입력 합니다:</para>
          <para>
<screen>
<command>sudo mount example.hostname.com:/ubuntu /local/ubuntu</command>
</screen>
</para>
      <warning>
      <para>마운트 위치 디렉토리 <filename>/local/ubuntu</filename> 반드시 있어야 합니다. <filename>/local/ubuntu</filename> 디렉토리 내에는 파일 또는 서브 디렉토리가 없어야만 합니다.</para>
      </warning>

      <para>
       An alternate way to mount an NFS share from another machine is to
       add a line to the <filename>/etc/fstab</filename> file. The line must state the
       hostname of the NFS server, the directory on the server being
       exported, and the directory on the local machine where the NFS
       share is to be mounted.
      </para>

      <para><filename>/etc/fstab</filename> 파일 내의 그 줄을 위한 일반적인 문법은 다음과 같습니다:</para>
      
      <para>
<programlisting>
example.hostname.com:/ubuntu /local/ubuntu nfs rsize=8192,wsize=8192,timeo=14,intr
</programlisting>
      </para>
      </sect2>
      <sect2 id="nfs-references" status="complete">
        <title>참조</title>
				<para><ulink url="http://nfs.sourceforge.net/">리눅스 NFS에 대해 자주하는 질문</ulink></para>
      </sect2>
    </sect1>
	<sect1 id="dhcp" status="complete">
		<title>동적 호스트 설정 프로토콜 (DHCP)</title>
            <para>The Dynamic Host Configuration Protocol (DHCP) is a network service that enables host
                computers to be automatically assigned settings from a server as opposed to
                manually configuring each network host. Computers configured to be DHCP clients have
                no control over the settings they receive from the DHCP server, and the configuration
                is transparent to the computer's user.</para>
            <para>DHCP 서버에 의하여 DHCP 클라이언트로 제공되는 가장 공통적인 설정은 다음과 같습니다:</para>
            <itemizedlist spacing="compact">
                <listitem>
                    <para>IP 주소와 넷마스크</para>
                </listitem>
                <listitem>
                    <para>DNS</para>
                </listitem>
                <listitem>
                    <para>WINS</para>
                </listitem>
            </itemizedlist>
            <para>그러나, DHCP 서버는 다음과 같은 설정 값도 또한 공급을 할 수 있습니다:</para>
            <itemizedlist spacing="compact">
                <listitem>
                    <para>호스트 이름</para>
                </listitem>
                <listitem>
                    <para>도메인 이름</para>
                </listitem>
                <listitem>
                    <para>기본 설정 게이트웨이</para>
                </listitem>
                <listitem>
                    <para>시간 서버</para>
                </listitem>
                <listitem>
                    <para>인쇄 서버</para>
                </listitem>
            </itemizedlist>
            <para>DHCP 사용의 장점은 네트워크가 변경될 때 입니다. 예를 들어, DNS 서버의 주소가 변경되었을 때, DHCP 서버에서만 그 변경이 필요하고, 모든 네트워크 호스트는 DHCP 클라이언트가 DHCP 서버를 읽는 다음 시점에 재 설정됩니다. 이 장점에 더하여, 네트워크에 새로운 컴퓨터를 통합하는 것도 또한 쉽고, IP 주소의 사용 가능성을 점검할 필요가 없습니다. IP 주소의 할당 시 충돌이 일어나는 것도 또한 줄어듭니다.</para>
            <para>DHCP 서버는 다음의 두 가지 방법을 사용하여 설정 값을 제공할 수 있습니다:</para>
            <variablelist>
                <varlistentry>
                    <term>맥 어드레스</term>
                    <listitem>
                        <para>This method entails using DHCP to identify the unique hardware address
                            of each network card connected to the network and then continually
                            supplying a constant configuration each time the DHCP client makes a
                            request to the DHCP server using that network device.</para>
                    </listitem>
                </varlistentry>
                <varlistentry>
                    <term>어드레스 풀</term>
                    <listitem>
                        <para>This method entails defining a pool (sometimes also called a range or
                            scope) of IP addresses from which DHCP clients are supplied their
                            configuration properties dynamically and on a fist come first serve
                            basis. When a DHCP client is no longer on the network for a specified
                            period, the configuration is expired and released back to the address
                            pool for use by other DHCP Clients.</para>
                    </listitem>
                </varlistentry>
            </variablelist>
            <para>Ubuntu is shipped with both DHCP server and client. The server is
                    <application>dhcpd</application> (dynamic host configuration protocol daemon).
                The client provided with Ubuntu is
                <application>dhclient</application> and should be
                installed on all computers required to be automatically configured. Both programs
                are easy to install and configure and will be automatically started at system boot.</para>
      <sect2 id="dhcp-installation" status="complete">
        <title>설치</title>
          <para>터미널 프롬프트에서, <application>dhcpd</application> 를 설치하기 위하여 다음의 명령을 입력 합니다:</para>
          <para>
<screen>
<command>sudo apt-get install dhcpd</command>
</screen>
          </para>
          <para>여러분은 다음의 출력을 보게 되고, 그것은 다음에 무엇을 해야하는지를 설명 합니다:</para>
          <screen>
Please note that if you are installing the DHCP server for the first
time you need to configure. Please stop (/etc/init.d/dhcp
stop) the DHCP server daemon, edit /etc/dhcpd.conf to suit your needs
and particular configuration, and restart the DHCP server daemon
(/etc/init.d/dhcp start).

You also need to edit /etc/default/dhcp to specify the interfaces dhcpd
should listen to. By default it listens to eth0.

NOTE: dhcpd's messages are being sent to syslog. Look there for
diagnostics messages.

Starting DHCP server: dhcpd failed to start - check syslog for diagnostics.  </screen>
      </sect2>
      <sect2 id="dhcp-configuration" status="complete">
        <title>설정</title>
            <para>The error message the installation ends with might be a little confusing, but the
                following steps will help you configure the service:</para>
            <para>아주 일반적으로, 여러분은 IP 주소를 불규칙적으로 지정하는 것을 원할 수 있습니다. 이것은 다음과 같이 설정하는 것으로 마칠 수 있습니다:</para>
            <screen>
# Sample /etc/dhcpd.conf
# (add your comments here) 
default-lease-time 600;
max-lease-time 7200;
option subnet-mask 255.255.255.0;
option broadcast-address 192.168.1.255;
option routers 192.168.1.254;
option domain-name-servers 192.168.1.1, 192.168.1.2;
option domain-name "mydomain.org";

subnet 192.168.1.0 netmask 255.255.255.0 {
range 192.168.1.10 192.168.1.100;
range 192.168.1.150 192.168.1.200;
} </screen>
            <para>This will result in the DHCP server giving a client an IP address from the range
                192.168.1.10-192.168.1.100 or 192.168.1.150-192.168.1.200. It will lease an IP
                address for 600 seconds if the client doesn't ask for a specific time frame. Otherwise
                the maximum (allowed) lease will be 7200 seconds. The server will also "advise" the
                client that it should use 255.255.255.0 as its subnet mask, 192.168.1.255 as its
                broadcast address, 192.168.1.254 as the router/gateway and 192.168.1.1 and
                192.168.1.2 as its DNS servers. </para>
            <para>만약 여러분의 윈도우즈 클라이언트를 위하여 WINS 서버를 지정할 필요가 있다면, 에를 들어, netbios-name-servers 옵션을 포함하는 것이 필요 합니다.</para>
            <screen>
option netbios-name-servers 192.168.1.1; </screen>
            <para>Dhcpd 설정 값은 DHCP 미니-하우투에서 취해졌고, 그것은 <ulink url="http://www.tldp.org/HOWTO/DHCP/index.html">여기</ulink>에서 찾을 수 있습니다.</para>
      </sect2>
      <sect2 id="dhcp-references" status="complete">
        <title>참조</title>
          <para>
            <ulink url="http://www.dhcp-handbook.com/dhcp_faq.html">DHCP에 대해 자주하는 질문</ulink>
          </para>
      </sect2>
    </sect1>
	<sect1 id="dns" status="complete">
		<title>도메인 네임 서비스 (DNS)</title>
            <para>Domain Name Service (DNS) is an Internet service that maps IP addresses and fully
                qualified domain names (FQDN) to one another. In this way, DNS alleviates the need to
                remember IP addresses. Computers that run DNS are called
                <emphasis>name
                servers</emphasis>. Ubuntu ships with <application>BIND</application> (Berkley
                Internet Naming Daemon), the most common program used for maintaining a name
                server on GNU/Linux.</para>
            <!-- things to do: IPv6-->
      <sect2 id="dns-installation" status="complete">
        <title>설치</title>
          <para>터미널 프롬프트에서, <application>dns</application>를 설치하기 위하여 다음의 명령을 입력 합니다:</para>
          <para>
<screen>
<command>sudo apt-get install bind</command>
</screen>
          </para>
      </sect2>
      <sect2 id="dns-configuration" status="complete">
        <title>설정</title>
          <para>
          The DNS configuration files are stored in the
          <filename>/etc/bind</filename> directory. The
          primary configuration file is
         <filename>/etc/bind/named.conf</filename>. The content
          of the default configuration file is shown below:
          </para>

          <para>
<programlisting>
// This is the primary configuration file for the BIND DNS server named.
//
// Please read /usr/share/doc/bind/README.Debian for information on the 
// structure of BIND configuration files in Debian for BIND versions 8.2.1 
// and later, *BEFORE* you customize this configuration file.
//

include "/etc/bind/named.conf.options";

// reduce log verbosity on issues outside our control
logging {
	category lame-servers { null; };
	category cname { null; };
};

// prime the server with knowledge of the root servers
zone "." {
        type hint;
        file "/etc/bind/db.root";
};

// be authoritative for the localhost forward and reverse zones, and for
// broadcast zones as per RFC 1912

zone "localhost" {
        type master;
        file "/etc/bind/db.local";
};

zone "127.in-addr.arpa" {
        type master;
        file "/etc/bind/db.127";
};

zone "0.in-addr.arpa" {
        type master;
        file "/etc/bind/db.0";
};

zone "255.in-addr.arpa" {
        type master;
        file "/etc/bind/db.255";
};

// add local zone definitions here
include "/etc/bind/named.conf.local";
</programlisting>
          </para>

          <para>
          The <application>include</application> line specifies the
          filename which contains the DNS options. The
          <application>directory</application> line in the options file tells
          DNS where to look for files. All files BIND uses will be
          relative to this directory.
          </para>

          <para><filename>/etc/bind/db.root</filename> 파일은 세상의 루트 네임 서버들을 기술 합니다. 그 서버들은 시간이 지남에 따라 변경되고 반드시 지금이나 나중에 관리유지 되어야 합니다.</para>

          <para>
          The <application>zone</application> section defines a master
          server, and it is stored in a file mentioned against file tag.
          Every zone file contains 3 resource records (RRs): an SOA RR, an
          NS RR and a PTR RR. SOA is short of Start of Authority. The
          "@" is a special notation meaning the origin. NS is the Name
          Server RR. PTR is Domain Name Pointer.  To start the DNS server,
          run the following command from a terminal prompt: 
           </para>
           <para>
<screen>
<command>sudo /etc/init.d/bind start</command>
</screen>
           </para>
          <para>상세한 것은 참조 편에 언급된 문서를 참고할 수 있습니다.</para>
      </sect2>
      <sect2 id="dns-references" status="complete">
        <title>참조</title>
          <para>
            <ulink url="http://www.tldp.org/HOWTO/DNS-HOWTO.html">DNS HOWTO</ulink>
          </para>
      </sect2>
    </sect1>
	<sect1 id="cups" status="complete">
		<title>CUPS - 인쇄 서버</title>
          <para>
            The primary mechanism for Ubuntu printing and print services is the 
			<emphasis role="bold">Common UNIX Printing System</emphasis> (CUPS). 
			This printing system is a freely available, portable printing layer 
			which has become the new standard for printing in most GNU/Linux 
			distributions.
          </para>
          <para>
          CUPS manages print jobs and queues and provides network printing using 
		  the standard Internet Printing Protocol (IPP), while offering support 
		  for a very large range of printers, from dot-matrix to laser and many 
		  in between.  CUPS also supports PostScript Printer Description (PPD) and 
		  auto-detection of network printers, and features a simple web-based 
		  configuration and administration tool. 
          </para>
      <sect2 id="cups-installation" status="complete">
        <title>설치</title>
          <para>
            To install CUPS on your Ubuntu computer, simply use <application>sudo</application> with the the <application>apt-get</application> command and give the packages to install as the first parameter. A complete CUPS install has many package dependencies, but they may all be specified on the same command line.  Enter the following at a terminal prompt to install CUPS:
          </para>
          <para>
<screen>
<command>sudo apt-get install cupsys cupsys-client cupsys-driver-gimpprint \ defoma fontconfig foomatic-db foomatic-filters libcupsimage2 \ libexpat1 libfontconfig1 libfreetype6 libgimpprint1 libjpeg62 \ libpaper1 libpng12-0 libpoppler0c2 libslp1 libtiff4 patch perl \ perl-modules ttf-bitstream-vera ucf</command>
</screen>
          </para>
          <para>
          Upon authenticating with your user password, the packages should be downloaded
		  and installed without error. Upon the conclusion of installation, the CUPS server 
		  will be started automatically. For troubleshooting purposes, you can access CUPS 
		  server errors via the error log file at: <filename>/var/log/cups/error_log</filename>.
		  If the error log does not show enough information to troubleshoot any problems you
		  encounter, the verbosity of the CUPS log can be increased by changing the <emphasis role="bold">LogLevel</emphasis> directive in the configuration file (discussed below)
		  to "debug" or even "debug2", which logs everything, from the default of "info".  If 
		  you make this change, remember to change it back once you've solved your problem, to 
		  prevent the log file from becoming overly large.
          </para>
      </sect2>
      <sect2 id="cups-configuration" status="complete">
        <title>설정</title>
          <para>
            The Common UNIX Printing System server's behavior is configured through the 
			directives contained in the file <filename>/etc/cups/cupsd.conf</filename>.  
			The CUPS configuration file follows the same syntax as the primary configuration 
			file for the Apache HTTP server, so users familiar with editing Apache's 
			configuration file should feel at ease when editing the CUPS configuration 
			file. Some examples of settings you may wish to change initially will be 
			presented here.
          </para>
          <tip>
               <para>설정 파일을 편집하기 전에, 원래의 파일의 복사본을 만들고 쓰기에서 그것을 보호해야만 합니다. 그래서 여러분은 원래의 설정을 참조하거나 그리고 필요한 경우 재사용 할 수 있습니다.</para>
               <para><filename>/etc/cups/cupsd.conf</filename> 파일을 복사하고 쓰기에서 그것을 보호하려면, 터미널 프롬프트에서 다음의 명령을 입력 합니다:</para>
               </tip>
               <para>
<screen>
<command>sudo cp /etc/cups/cupsd.conf /etc/cups/cupsd.conf.original</command>
<command>sudo chmod a-w /etc/cups/cupsd.conf.original</command>
</screen>
               </para>
          <itemizedlist>
                <listitem>
                <para>
                <emphasis role="bold">ServerAdmin</emphasis>: To configure the email 
				address of the designated administrator of the CUPS server, simply 
				edit the <filename>/etc/cups/cupsd.conf</filename> configuration file 
				with your preferred text editor, and modify the <emphasis role="italics">ServerAdmin</emphasis> line accordingly.  For example, 
				if you are the Administrator for the CUPS server, and your e-mail 
				address is 'bjoy@somebigco.com', then you would modify the ServerAdmin 
				line to appear as such:
                </para>
                <para>
<screen>
ServerAdmin bjoy@somebigco.com
</screen>
                </para>
                </listitem>
                <listitem>
                <para>
                <emphasis role="bold">Listen</emphasis>: By default on Ubuntu, the CUPS 
				server installation listens only on the loopback interface at IP address 
				<emphasis>127.0.0.1</emphasis>. In order to instruct the 
				CUPS server to listen on an actual network adapter's IP address, you must 
				specify either a hostname, the IP address, or optionally, an IP 
				address/port pairing via the addition of a Listen directive.  For example, 
				if your CUPS server resides on a local network at the IP address <emphasis role="italics">192.168.10.250</emphasis> and you'd like to make it 
				accessible to the other systems on this subnetwork, you would edit the 
				<filename>/etc/cups/cups.d/ports.conf</filename> and add a Listen 
				directive, as such:
                </para>
                <para>
<screen>
Listen 127.0.0.1:631 # existing loopback Listen
Listen /var/run/cups/cups.sock # existing socket Listen
Listen 192.168.10.250:631 # Listen on the LAN interface, Port 631 (IPP)
</screen>
                </para>
                <para>
                In the example above, you may comment out or remove the reference to the 
				Loopback address (127.0.0.1) if you do not wish <application>cupsd
				</application> to listen on that interface, but would rather have it only 
				listen on the Ethernet interfaces of the Local Area Network (LAN). To enable 
				listening for all network interfaces for which a certain hostname is bound, 
				including the Loopback, you could create a Listen entry for the hostname 
				<emphasis>socrates</emphasis> as such:
                </para>
                <para>
<screen>
Listen socrates:631 # Listen on all interfaces for the hostname 'socrates'
</screen>
                </para> 
				<para>or by omitting the Listen directive and using <emphasis>Port</emphasis> instead, as in:</para>
<para>
<screen>
Port 631 # Listen on port 631 on all interfaces
</screen>
</para>
                <para>CUPS 서버 설정 파일, <filename>/etc/cups/cupsd.conf</filename> 는, 올바르게 사용하는 몇 가지 가능한 Listen 지시자에 대한 예제를 가지고 있습니다.</para>
                </listitem>
          </itemizedlist>
                <para>CUPS 서버 설정 파일 내의 설정 지시자에 대한 더 많은 예제는, 터미널 프롬프트에서 다음의 명령을 입력하여 관계된 시스템 매뉴얼 페이지를 읽어 보십시오:</para>
               <para>
<screen>
<command>man cupsd.conf</command>
</screen>
               </para>
                               <note>
                <para><filename>/etc/cups/cupsd.conf</filename> 설정 파일에 변경을 만드는 어느 때에나, 터미널 프롬프트에서 다음의 명령을 입력하여 CUPS 서버를 재시작 하는 것이 필요 합니다:</para>
                </note>
                <para>
<screen>
<command>sudo /etc/init.d/cupsys restart</command>
</screen>
                </para>
      </sect2>
      <sect2 id="cups-references" status="complete">
        <title>참조</title>
        <para>
        <ulink url="http://www.cups.org/">CUPS 웹사이트</ulink>
        </para>
        </sect2>
    </sect1>
	<sect1 id="httpd" status="complete">
		<title>HTTPD - 아파치2 웹 서버</title>
      <para>Apache is the most commonly used Web Server on GNU/Linux systems. Web Servers are used
          to serve Web Pages requested by client computers. Clients typically request and view
          Web Pages using Web Browser applications such as <application>Firefox</application>,
              <application>Opera</application>, or <application>Mozilla</application>.</para>
      <para>Users enter a Uniform Resource Locator (URL) to point to a Web server by means of
          its Fully Qualified Domain Name (FQDN) and a path to the required resource. For example, to view the home page of
          the <ulink url="http://www.ubuntu.com">Ubuntu Web site</ulink> a user will enter only the FQDN. To request specific information about 
              <ulink url="http://www.ubuntu.com/support/supportoptions/paidsupport">paid
              support</ulink>, a user will enter the FQDN followed by a path.</para>
      <para>The most common protocol used to transfer Web pages is the Hyper Text Transfer
          Protocol (HTTP). Protocols such as Hyper Text Transfer Protocol over Secure Sockets Layer (HTTPS), and
          File Transfer Protocol (FTP), a protocol for uploading and downloading files, are also
          supported.</para>
      <para>Apache Web Servers are often used in combination with the <application>MySQL</application>
          database engine, the HyperText Preprocessor (<application>PHP</application>)
          scripting language, and other popular scripting languages such as
              <application>Python</application> and <application>Perl</application>. This
          configuration is termed LAMP (Linux, Apache, MySQL and Perl/Python/PHP) and forms a
          powerful and robust platform for the development and deployment of Web-based
          applications.</para>
<sect2 id="http-installation" status="complete">
  <title>설치</title>
                  <para>아파치2 웹 서버는 우분투 리눅스에서 사용 가능합니다. 아파치2를 설치하려면:</para>
          <procedure><step>
                	  <para>터미널 프롬프트에서 다음의 명령을 입력 합니다: <screen>
<command>sudo apt-get install apache2</command>
</screen></para>
			</step>
	    </procedure>
      </sect2>
      <sect2 id="http-configuration" status="complete">
        <title>설정</title>
          <para>
          Apache is configured by placing <emphasis>directives</emphasis> in plain text
          configuration files. The main configuration file is called 
		  <filename>apache2.conf</filename>. In addition, other configuration files may be added
          using the <emphasis>Include</emphasis> directive, and wildcards can be used to
          include many configuration files. Any directive may be placed
          in any of these configuration files. Changes to the main
          configuration files are only recognized by Apache2 when it is
          started or restarted.</para>

          <para>서버는 또한 <emphasis>TypesConfig</emphasis> 지시자에 의해 정해지는 파일 이름과 그리고 기본으로 <filename>mime.types</filename>인 mime 문서 종류를 가지는 파일을 읽을 수 있습니다.</para>

          <para>기본 아파치2 설정 파일은 <filename>/etc/apache2/apache2.conf</filename> 입니다. 아파치2 서버를 설정하기 위하여 이 파일을 편집할 수 잇습니다. 포트 번호, 문서 루트, 모듈, 로그 파일, 가상 호스트, 기타 등등을 설정할 수 있습니다.</para>
        <sect3 id="http-basic-settings" status="complete">
          <title>기본적인 설정</title>
            <para>이 영역은 아파치2 서버의 필수적인 설정 파라미터를 설명 합니다. 더 자세한 것은 <ulink url="http://httpd.apache.org/docs/2.0/">아파치2 문서</ulink>를 참조 합니다.</para>

             <itemizedlist>

             <listitem><para>
             Apache2 ships with a virtual-host-friendly default configuration.
			 That is, it is configured with a single default virtual host (using
			 the <emphasis>VirtualHost</emphasis> directive) which can modified or used as-is if you
			 have a single site, or used as a template for additional virtual hosts
			 if you have multiple sites.  If left alone, the default virtual host
			 will serve as your default site, or the site users will see if the
			 URL they enter does not match the <emphasis>ServerName</emphasis> directive of any of your 
			 custom sites.  To modify the default virtual host, edit the file
			 <filename>/etc/apache2/sites-available/default</filename>.  If you
			 wish to configure a new virtual host or site, copy that file into the
			 same directory with a name you choose.  For example,
			 <command>sudo cp /etc/apache2/sites-available/default /etc/apache2/sites-available/mynewsite</command>
			 Edit the new file to configure the new site using some of the directives
			 described below.
            </para></listitem>

             <listitem><para>
			 The <emphasis>ServerAdmin</emphasis> directive specifies the email address to be advertised
			 for the server's administrator.  The default value is webmaster@localhost.
			 This should be changed to an email address that is delivered to you (if you
			 are the server's administrator).  If your website has a problem, Apache2
			 will display an error message containing this email address to report the
			 problem to.  Find this directive in your site's configuration file in
			 /etc/apache2/sites-available.
			 </para></listitem>

             <listitem><para>
             The <emphasis>Listen</emphasis> directive specifies the port, and optionally the IP address,
			 Apache2 should listen on. If the IP address is not specified, Apache2
			 will listen on all IP addresses assigned to the machine it runs on.
			 The default value for the Listen directive is 80.  Change this to
			 127.0.0.1:80 to cause Apache2 to listen only on your loopback interface
			 so that it will not be available to the Internet, to (for example) 81
			 to change the port that it listens on, or leave it as is for normal
			 operation.  This directive can be found and changed in its own file,
			 <filename>/etc/apache2/ports.conf</filename>
             </para></listitem>

			 <listitem><para>
			 The <emphasis>ServerName</emphasis> directive is optional and specifies what FQDN your
			 site should answer to.  The default virtual host has no ServerName
			 directive specified, so it will respond to all requests that do not
			 match a ServerName directive in another virtual host.  If you have
			 just acquired the domain name ubunturocks.com and wish to host it on
			 your Ubuntu server, the value of the ServerName directive in your
			 virtual host configuration file should be ubunturocks.com.  Add this
			 directive to the new virtual host file you created earlier 
			 (<filename>/etc/apache2/sites-available/mynewsite</filename>).
			 
			 <tip><para>You may also want your site to respond to www.ubunturocks.com, since
				many users will assume the www prefix is appropriate.  Use the
				<emphasis>ServerAlias</emphasis> directive for this.  You may also use wildcards in the
				ServerAlias directive.  For example,
				<command>ServerAlias *.ubunturocks.com</command>
				will cause your site to respond to any domain request ending in
				.ubunturocks.com.
			 </para></tip>
			 </para></listitem>

			 <listitem><para>
			 The <emphasis>DocumentRoot</emphasis> directive specifies where Apache should look for the
			 files that make up the site.  The default value is /var/www.  No site
			 is configured there, but if you uncomment the <emphasis>RedirectMatch</emphasis> directive
			 in <filename>/etc/apache2/apache2.conf</filename> requests will be
			 redirected to /var/www/apache2-default where the default Apache2 site
			 awaits.  Change this value in your site's virtual host file, and
			 remember to create that directory if necessary!
			 </para></listitem>
            </itemizedlist>

			<tip><para>
			The /etc/apache2/sites-available directory is <emphasis role="bold">
			not</emphasis> parsed by Apache2.  Symbolic links in /etc/apache2/sites-enabled
			point to "available" sites.  Use the a2ensite (Apache2
			Enable Site) utility to create those symbolic links, like so:
			<command>sudo a2ensite mynewsite</command>
			where your site's configuration file is <filename>
			/etc/apache2/sites-available/mynewsite</filename>.  Similarly, the
			a2dissite utility should be used to disable sites.
			</para></tip>

        </sect3>
        <sect3 id="default-settings" status="complete">
          <title>기본 설정</title>
            <para>
             This section explains configuration of the Apache2 server
             default settings.  For example, if you add a virtual host, 
             the settings you configure for the virtual host take
             precedence for that virtual host. For a directive not
             defined within the virtual host settings, the default
             value is used.
            </para>

            <itemizedlist>
            <listitem>
            <para>
             The <emphasis>DirectoryIndex</emphasis> is the default page served by the
             server when a user requests an index of a directory by
             specifying a forward slash (/) at the end of the directory
             name.</para>

             <para>For example, when a user requests the page
             http://www.example.com/this_directory/, he or she will
             get either the DirectoryIndex page if it exists, a
             server-generated directory list if it does not and the
			 Indexes option is specified, or a Permission Denied page
			 if neither is true.  The server will try to
             find one of the files listed in the DirectoryIndex
             directive and will return the first one it finds. If it
             does not find any of these files and if Options Indexes is
             set for that directory, the server will generate and
             return a list, in HTML format, of the subdirectories and
             files in the directory.  The default value, found in
			 <filename>/etc/apache2/apache2.conf</filename> is "
			 index.html index.cgi index.pl index.php index.xhtml".
			 Thus, if Apache2 finds a file in a requested directory
			 matching any of these names, the first will be displayed.
            </para>
            </listitem>

            <listitem>
            <para>
             The <emphasis>ErrorDocument</emphasis> directive allows you to specify a file
			 for Apache to use for specific error events.  For example,
			 if a user requests a resource that does not exist, a 404
			 error will occur, and per Apache2's default configuration,
			 the file <filename>/usr/share/apache2/error/HTTP_NOT_FOUND.html.var
			 </filename> will be displayed.  That file is not in the
			 server's DocumentRoot, but there is an Alias directive in
			 <filename>/etc/apache2/apache2.conf</filename> that redirects
			 requests to the /error directory to /usr/share/apache2/error/.
			 To see a list of the default ErrorDocument directives, use this
			 command:
			 <command>grep ErrorDocument /etc/apache2/apache2.conf</command>
            </para>
            </listitem>


            <listitem>
            <para>
             By default, the server writes the transfer log to the file
             /var/log/apache2/access.log. You can change this on a per-site
			 basis in your virtual host configuration files with the <emphasis>CustomLog</emphasis>
			 directive, or omit it to accept the default, specified in <filename>
			 /etc/apache2/apache2.conf</filename>.  You may also specify the file
			 to which errors are logged, via the <emphasis>ErrorLog</emphasis> directive, whose default
			 is <filename>/var/log/apache2/error.log</filename>.  These are kept
			 separate from the transfer logs to aid in troubleshooting problems
			 with your Apache2 server.  You may also specify the <emphasis>LogLevel</emphasis> (the
			 default value is "warn") and the <emphasis>LogFormat</emphasis> (see <filename>
			 /etc/apache2/apache2.conf</filename> for the default value).
			 </para>
            </listitem>

            <listitem>
            <para>
            Some options are specified on a per-directory basis rather than per-server.
			Option is one of these directives.  A Directory stanza is enclosed in 
			XML-like tags, like so:
			<screen><command>&lt;Directory /var/www/mynewsite&gt;
				...
			&lt;/Directory&gt;</command></screen>
			The Options directive within a Directory stanza accepts one or more of the
			following values (among others), separated by spaces:
            </para>
            <itemizedlist spacing="compact">
                <listitem>
                    <para><emphasis role="bold">ExecCGI</emphasis> - CGI 스크립트의 실행을 허용 합니다. 만약 이 선택사항이 선택되지 않았다면 CGI 스크립트는 수행될 수 없습니다. <tip><para>Most files should not be executed as CGI scripts.  This
					would be very dangerous.  CGI scripts should kept in a directory 
					separate from and outside your DocumentRoot, and only this
					directory should have the ExecCGI option set.  This is the default,
					and the default location for CGI scripts is /usr/lib/cgi-bin.
					</para></tip></para>
                </listitem>
                <listitem>
                    <para><emphasis role="bold">Includes</emphasis> - 서버 측의 includes를 허용 합니다. 서버 측 includes는 <emphasis> include</emphasis> 파일들로 HTML 파일을 허용 합니다. 이것은 일반적인 선택 사항이 아닙니다. 더 많은 정보는 <ulink url="http://httpd.apache.org/docs/2.0/howto/ssi.html">아파치2 SSI 하우투</ulink>를 보십시오.</para>
                </listitem>
                <listitem>
                    <para><emphasis role="bold">IncludesNOEXEC</emphasis> - 서버측 includes를 허용하지만, CGI 스크립트 내의 #exec과 #include 명령을 사용하지 못하도록 합니다.</para>
                </listitem>
                <listitem>
                    <para><emphasis role="bold">Indexes</emphasis> - 요청된 디렉토리내에 DirectoryIndex가 (index.html과 같은) 없다면, 디렉토리 내용물의 형식화된 목록을 보여 줍니다.</para>
                </listitem>
                <listitem>
                    <para>
                    <emphasis role="bold">Multiview</emphasis> - Support content-negotiated multiviews;
                    this option is disabled by default for security reasons.  See the <ulink url="http://httpd.apache.org/docs/2.0/mod/mod_negotiation.html#multiviews">Apache2
					documentation on this option</ulink>.
                    </para>
                </listitem>
                <listitem>
                    <para>
                    <emphasis role="bold">SymLinksIfOwnerMatch</emphasis> - Only follow symbolic links
                    if the target file or directory has the same owner as the link.
                    </para>
                </listitem>
            </itemizedlist>

            </listitem>
            </itemizedlist>
        </sect3>
        <sect3 id="virtual-hosts-settings" status="complete">

          <title>가상 호스트 설정</title>
            <para>
			Virtual hosts allow you to run different servers for different IP addresses, different host 
			names, or different ports on the same machine. For example, you can run the website for 
			http://www.example.com and http://www.anotherexample.com on the same Web server using virtual 
			hosts. This option corresponds to the &lt;VirtualHost&gt; directive for the default virtual 
			host and IP-based virtual hosts. It corresponds to the &lt;NameVirtualHost&gt; directive for 
			a name-based virtual host.
			</para>

			<para>
			The directives set for a virtual host only apply to that particular virtual host. If a 
			directive is set server-wide and not defined within the virtual host settings, the default 
			setting is used. For example, you can define a Webmaster email address and not define 
			individual email addresses for each virtual host. 
    		</para>
 
 			<para>
			Set the DocumentRoot directive to the directory that contains the root document (such as 
			index.html) for the virtual host. The default DocumentRoot is <filename>/var/www</filename>.
			</para>

			<para>ServerAdmin 지시자는 VirtualHost 절에 포함되는, 에러 페이지에서 이메일 주소와 함께 바닥글을 보여주는 것을 선택하였다면, 에러 페이지의 바닥글에 사용되는 이메일 주소 입니다.</para>

        </sect3>
        <sect3 id="server-settings" status="complete">
          <title>서버 설정</title>
            <para>이 영역은 어떻게 기본적인 서버 설정을 하는지를 설명 합니다.</para>
                    <para><emphasis role="bold">LockFile</emphasis> - The LockFile directive sets the path 
					to the lockfile used when the server is compiled with either USE_FCNTL_SERIALIZED_ACCEPT 
					or USE_FLOCK_SERIALIZED_ACCEPT. It must be stored on the local disk. It should be left 
					to the default value unless the logs directory is located on an NFS share. If this is 
					the case, the default value should be changed to a location on the local disk and to a 
					directory that is readable only by root. </para>

					<para><emphasis role="bold">PidFile</emphasis> - The PidFile directive sets the file in which the server 
					records its process ID (pid). This file should only be readable by root. In most cases, it should be left 
					to the default value.</para>

<para><emphasis role="bold">User</emphasis> - The User directive sets the userid used by the server to answer requests. This 
setting determines the server's access. Any files inaccessible to this user will also be inaccessible to your website's visitors. 
The default value for User is www-data.  </para>
            <warning>
            <para>여러분이 하는 것을 정확히 알지 않는 한, User 지시자를 root로 지정하지 마십시오. User로 root를 사용하는 여러분의 웹 서버에 거대한 보안 구멍을 만들게 됩니다.</para>
            </warning>
 <para>Group 지시자는 User 지시자와 비슷합니다. Group은 서버가 요청을 대답하는 그룹을 지정 합니다. 기본 설정된 그룹은 또한 www-data 입니다.</para>

        </sect3>
        <sect3 id="apache-modules" status="complete">
          <title>아파치 모듈</title>
              <para>

              Apache is a modular server. This implies that only the most
              basic functionality is included in the core server. Extended
              features are available through modules which can be loaded
              into Apache. By default, a base set of modules is included in
              the server at compile-time. If the server is compiled to use
              dynamically loaded  modules, then modules can be compiled
              separately, and added at any time using the LoadModule
              directive. Otherwise, Apache must be recompiled to add or
              remove modules. Ubuntu compiles Apache2 to allow the dynamic
			  loading of modules.  Configuration directives may be conditionally
	      included on the presence of a particular module by enclosing
              them in an &lt;IfModule&gt; block.

              You can install additional Apache2 modules and use them
              with your Web server. You can install Apache2
              modules using the <application>apt-get</application>
              command. For example, to install the Apache2 module
              for MYSQL authentication, you can run the
                following command from a terminal prompt:</para>
                
                <para>
<screen>
<command>sudo apt-get install libapache2-mod-auth-mysql</command>
</screen>
                </para>
                <para>
                Once you install the module, the module will
                be available in the
                <filename>/etc/apache2/mods-available</filename> directory. You can use
              the <application>a2enmod</application> command to
              enable a module. You can use
              the <application>a2dismod</application> command to
              disable a module. Once you enable the module,
              the module will be available in the
              the <filename>/etc/apache2/mods-enabled</filename> directory.
              </para>
        </sect3>
      </sect2>
      <sect2 id="https-configuration" status="complete">
        <title>HTTPS 설정</title>
          <para>
           The <application>mod_ssl</application> module adds
           an important feature to the Apache2 server - the ability to
           encrypt communications.  Thus, when your browser is
           communicating using SSL encryption, the
           https:// prefix is used at the beginning of the Uniform
           Resource Locator (URL) in the browser navigation bar.
          </para>

          <para>
          The <application>mod_ssl</application> module is available in
          <application>apache2-common</application> package. If you have
          installed this package, you can run the following command from a terminal prompt to
          enable the <application>mod_ssl</application> module:
          </para>

          <para>
<screen>
<command>sudo a2enmod ssl</command>
</screen>
          </para>
        <sect3 id="certificates-and-security" status="complete">
          <title>인증서와 보안</title>
            <para>
              To set up your secure server, use public key cryptography to
              create a public and private key pair. In most cases, you
              send your certificate request (including your public key),
              proof of your company's identity, and payment to a
              Certificate Authority (CA). The
              CA verifies the certificate request and your identity, and
              then sends back a certificate for your secure server. 
            </para>
             <para>
             Alternatively, you can create your own self-signed
             certificate. Note, however, that self-signed certificates
             should not be used in most production environments.
             Self-signed certificates are not automatically accepted by
             a user's browser.  Users are prompted by the browser to
             accept the certificate and create the secure connection.
             </para>

             <para>
              Once you have a self-signed certificate or a signed
              certificate from the CA of your choice, you need to
              install it on your secure server.
             </para>
        </sect3>
        <sect3 id="types-of-certificates" status="complete">
          <title>인증서의 종류</title>
            <para>
             You need a key and a certificate to operate your secure
             server, which means that you can either generate a
             self-signed certificate or purchase a CA-signed
             certificate.  A CA-signed certificate provides two important
              capabilities for your server:
            </para>

            <itemizedlist>
            <listitem>
            <para>
            Browsers (usually) automatically recognize the certificate
            and allow a secure connection to be made without prompting
            the user.
            </para>
            </listitem>
            <listitem>
            <para>
             When a CA issues a signed certificate, it is
             guaranteeing the identity of the organization that is
             providing the web pages to the browser.
            </para>
            </listitem>
            </itemizedlist>

            <para>
             Most Web browsers that support SSL have a list of CAs whose
             certificates they automatically accept. If a browser
             encounters a certificate whose authorizing CA is not in the
             list, the browser asks the user to either accept or decline
             the connection.
            </para>
            <para>
             You can generate a self-signed certificate for your secure server, but
            be aware that a self-signed certificate does not provide the same
            functionality as a CA-signed certificate. A self-signed certificate is
            not automatically recognized by most Web browsers, and a self-signed
            certificate does not provide any guarantee concerning the identity of
            the organization that is providing the website. A CA-signed certificate
            provides both of these important capabilities for a secure server. 
            The process of getting a certificate from a CA is fairly
            easy. A quick overview is as follows:
            </para>

            <orderedlist>
            <listitem>
               <para>Create a private and public encryption key pair.</para>
            </listitem>
            <listitem>
                 <para>Create a certificate request based on the public key. The
              certificate request contains information about your server and the
              company hosting it.</para>
            </listitem>
            <listitem>
                 <para>Send the certificate request, along with documents proving your
              identity, to a CA. We cannot tell you which certificate authority to
              choose. Your decision may be based on your past experiences, or on the
              experiences of your friends or colleagues, or purely on monetary
              factors.</para>

                    <para>Once you have decided upon a CA, you need to follow the
              instructions they provide on how to obtain a certificate
              from them.</para>
            </listitem>
            <listitem>
               <para>When the CA is satisfied that you are indeed who you claim to be,
            they send you a digital certificate.</para>
            </listitem>
            <listitem>
               <para>Install this certificate on your secure server, and begin handling
            secure transactions. </para>
            </listitem>
            </orderedlist>

            <para>Whether you are getting a certificate from a CA or generating your own
            self-signed certificate, the first step is to generate a key.
            </para>
        </sect3>
        <sect3 id="generating-a-csr" status="complete">
          <title>Generating a Certificate Signing Request (CSR)</title>
            <para>
            To generate the Certificate Signing Request (CSR), you should create your
            own key. You can run the following command from a terminal prompt to create the
            key:
            </para>

            <para>
<screen>
<command>openssl genrsa -des3 -out server.key 1024</command>
</screen>
            </para>
<programlisting>
Generating RSA private key, 1024 bit long modulus
.....................++++++
.................++++++
unable to write 'random state'
e is 65537 (0x10001)
Enter pass phrase for server.key:
</programlisting>

        <para>
        You can now enter your passphrase. For best security, it should
        at least contain eight characters. The minimum length when
		specifying -des3 is four characters. It should include numbers
        and/or punctuation and not be a word in a dictionary. Also
        remember that your passphrase is case-sensitive. 
        </para>

        <para>
        Re-type the passphrase to verify. Once you have re-typed it
        correctly, the server key is generated and stored in
        <filename>server.key</filename> file.
        </para>

        <warning>
        <para>
        You can also run your secure web server without a passphrase.
        This is convenient because you will not need to enter the
        passphrase every time you start your secure web server. But it
        is highly insecure and a compromise of the key means a
        compromise of the server as well.
        </para>
        </warning>

        <para>
        In any case, you can choose to run your secure web server without
        a passphrase by leaving out the -des3 switch in the generation
        phase or by issuing the following command at a terminal prompt:
        </para>

        <para>
<screen>
<command>openssl rsa -in server.key -out server.key.insecure</command>
</screen>
        </para>
        <para>
        Once you run the above command, the insecure key will be stored
        in the <filename>server.key.insecure</filename> file. You can use this
        file to generate the CSR without passphrase.
        </para>

        <para>
        To create the CSR, run the following command at a terminal prompt:
        </para>

        <para>
<screen>
<command>openssl req -new -key server.key -out server.csr</command>
</screen>
        </para>

        <para>It will prompt you enter the passphrase. If you enter the
        correct passphrase, it will prompt you to enter Company Name,
        Site Name, Email Id, etc. Once you enter all these details, your
        CSR will be created and it will be stored in the
        <filename>server.csr</filename> file. You can submit this CSR file
        to a CA for processing. The CAN will use this CSR file and issue
        the certificate. On the other hand, you can create self-signed
        certificate using this CSR.</para>

        </sect3>
        <sect3 id="creating-a-self-signed-certificate" status="complete">
          <title>Creating a Self-Signed Certificate</title>
            <para>
            To create the self-signed certificate, run the
            following command at a terminal prompt:
            </para>

            <para>
<screen>
<command>openssl x509 -req -days 365 -in server.csr -signkey server.key -out server.crt</command>
</screen>
            </para>

            <para>The above command will prompt you to enter the
            passphrase. Once you enter the correct passphrase, your
            certificate will be created and it will be stored in the
            <filename>server.crt</filename> file.  </para>
        <warning>
        <para>
            If your secure server is to be used in a production environment, you
            probably need a CA-signed certificate.  It is not
            recommended to use self-signed certificate.
        </para>
        </warning>
        </sect3>
        <sect3 id="installing-the-certificate" status="complete">
          <title>인증서 설치</title>

            <para>You can install the key file
            <filename>server.key</filename> and certificate file
            <filename>server.crt</filename> or the certificate file issued
            by your CA by running following commands at a terminal prompt:
            </para>
            <para>
<screen>
<command>sudo cp server.crt /etc/ssl/certs</command>
<command>sudo cp server.key /etc/ssl/private</command>
</screen>
            </para>
            <para>
            You should add the following four lines to the
            <filename>/etc/apache2/sites-available/default</filename>
            file or the configuration file for your secure virtual
			host. You should place them in the <emphasis>VirtualHost</emphasis> section. They
            should be placed under the <emphasis>DocumentRoot</emphasis> line:
            </para>
<programlisting>
SSLEngine on
SSLOptions +FakeBasicAuth +ExportCertData +CompatEnvVars +StrictRequire

SSLCertificateFile /etc/ssl/certs/server.crt
SSLCertificateKeyFile /etc/ssl/private/server.key
</programlisting>
          
            <para>
            HTTPS should listen on port number 443. You should add the
            following line to the <filename>/etc/apache2/ports.conf</filename>
            file:
            </para>
<programlisting>
Listen 443
</programlisting>

        </sect3>
        <sect3 id="accessing-the-server" status="complete">
          <title>서버에 접근하기</title>
            <para>
            Once you install your certificate, you should restart your
            web server. You can run the following command at a terminal prompt to
            restart your web server:
            </para>
            <para>
<screen>            
<command>sudo /etc/init.d/apache2 restart</command>
</screen>
            </para>
        <note><para>
        You should remember and enter the passphrase every time you
        start your secure web server.
        </para></note>

            <para>You will be prompted to enter the passphrase. Once you
            enter the correct passphrase, the secure web server will be
            started. You can access the secure server pages by typing
            https://your_hostname/url/ in your
            browser address bar.</para>

        </sect3>
      </sect2>
      <sect2 id="http-references" status="complete">
        <title>참조</title>
          <para>
          <ulink url="http://httpd.apache.org/docs/2.0/">아파치2 문서</ulink>
          </para>
          <para>
          <ulink url="http://www.modssl.org/docs/">Mod SSL 문서</ulink>
          </para>
      </sect2>
    </sect1>
	
	<sect1 id="squid" status="complete">
		<title>Squid - 프락시 서버</title>
          <para>
          Squid is a full-featured web proxy cache server application which provides proxy and cache services for Hyper Text
          Transport Protocol (HTTP), File Transfer Protocol (FTP), and other popular network protocols.  Squid can implement
          caching and proxying of Secure Sockets Layer (SSL) requests and caching of Domain Name Server (DNS) lookups, and perform
          transparent caching. Squid also supports a wide variety of caching protocols, such as Internet Cache Protocol, (ICP)
          the Hyper Text Caching Protocol, (HTCP) the Cache Array Routing Protocol (CARP), and the Web Cache Coordination 
          Protocol. (WCCP) 
          </para>
          <para>
          The Squid proxy cache server is an excellent solution to a variety of proxy and caching server needs, and scales from
          the branch office to enterprise level networks while providing extensive, granular access control mechanisms and
          monitoring of critical parameters via the Simple Network Management Protocol (SNMP).  When selecting a computer system
          for use as a dedicated Squid proxy, or caching servers, ensure your system is configured with a large amount of physical
          memory, as Squid maintains an in-memory cache for increased performance.
          </para>
      <sect2 id="squid-installation" status="complete">
        <title>설치</title>
          <para>
            At a terminal prompt, enter the following command to install the Squid server:
          </para>
          <para>
<screen>
<command>sudo apt-get install squid squid-common</command>
</screen>
          </para>
      </sect2>
      <sect2 id="squid-configuration" status="complete">
        <title>설정</title>
          <para>
            Squid is configured by editing the directives contained within the <filename>/etc/squid/squid.conf</filename> configuration file.
            The following examples illustrate some of the directives which may be modified to affect the behavior of the Squid server.
            For more in-depth configuration of Squid, see the References section. 
          </para>
             <tip>
               <para>Prior to editing the configuration file, you should make a copy of the original file and protect it 
               from writing so you will have the original settings as a reference, and to re-use as necessary.
               </para>
               <para>Copy the <filename>/etc/squid/squid.conf</filename> file and protect it from writing with the following commands entered at a terminal prompt:
               </para>
	     </tip>
               <para>
<screen>
<command>sudo cp /etc/squid/squid.conf /etc/squid/squid.conf.original</command>
<command>sudo chmod a-w /etc/squid/squid.conf.original</command>
</screen>
               </para> 
	        <para>
           <itemizedlist>
               <listitem>
                  <para>
                  To set your Squid server to listen on TCP port 8888 instead of the default TCP port 3128, change
                  the http_port directive as such:
                  </para>
                  <para>http_port 8888</para>
               </listitem>
	            <listitem>
                  <para>
                  Change the visible_hostname directive in order to give the Squid server a specific hostname.  This hostname
                  does not necessarily need to be the computer's hostname. In this example it is set to <emphasis>weezie</emphasis>
                  </para>
                  <para>visible_hostname weezie</para>
               </listitem>
               <listitem>
                  <para>
                     Again, Using Squid's access control, you may configure use of Internet services proxied by Squid
                     to be available only users with certain Internet Protocol (IP) addresses.  For example, we willll illustrate access 
                     by users of the 192.168.42.0/24 subnetwork only:
                  </para>
                  <para>
                     Add the following to the <emphasis role="bold">bottom</emphasis> of the ACL section of your <filename>/etc/squid/squid.conf</filename> file:
                  </para>
                  <para>acl fortytwo_network src 192.168.42.0/24</para>
                  <para>
                     Then, add the following to the <emphasis role="bold">top</emphasis> of the http_access section of your
                     <filename>/etc/squid/squid.conf</filename> file:
                  </para>
                  <para>http_access allow fortytwo_network</para>
               </listitem>
               <listitem>
                  <para>
                     Using the excellent access control features of Squid, you may configure use of Internet services proxied by Squid
                     to be available only during normal business hours.  For example, we'll illustrate access by employees of a business
                     which is operating between 9:00AM and 5:00PM, Monday through Friday, and which uses the 10.1.42.0/42 subnetwork:
                  </para>
                  <para>
                     Add the following to the <emphasis role="bold">bottom</emphasis> of the ACL section of your <filename>/etc/squid/squid.conf</filename> file:
                  </para>
                  <para>acl biz_network src 10.1.42.0/24 acl biz_hours time M T W T F 9:00-17:00</para>
                  <para>
                     Then, add the following to the <emphasis role="bold">top</emphasis> of the http_access section of your
                     <filename>/etc/squid/squid.conf</filename> file:
                  </para>
                  <para>http_access allow biz_network biz_hours</para>
               </listitem>
          </itemizedlist>
          </para>
          <note>
	  <para>
          After making changes to the <filename>/etc/squid/squid.conf</filename> file, save the file and restart the <application>squid</application> 
          server application to effect the changes using the following command entered at a terminal prompt:
          </para>
          </note>
          <para>
<screen>
<command>sudo /etc/init.d/squid restart</command>
</screen>
          </para>
      </sect2>
      <sect2 id="squid-references" status="complete">
      <title>참조</title>
      <para>
      <ulink url="http://www.squid-cache.org/">Squid 웹사이트</ulink>
      </para>
      </sect2>
    </sect1>
	<sect1 id="version-control-system" status="complete">
		<title>버전 관리 시스템</title>
          <para>
Version control is the art of managing changes to information. It has long been a critical tool for programmers, who typically spend their time making small changes to software and then undoing those changes the next day. But the usefulness of version control software extends far beyond the bounds of the software development world. Anywhere you can find people using computers to manage information that changes often, there is room for version control.</para>
<para>
          </para>
      <sect2 id="subversion" status="complete">
        <title>Subversion</title>
          <para>
Subversion is an open source version control system. Using Subversion, you can record the history of source files and documents. It manages files and directories over time. A tree of files is placed into a central repository. The repository is much like an ordinary file server, except that it remembers every change ever made to files and directories.
          </para>
        <sect3 id="subversion-installation" status="complete">
          <title>설치</title>
            <para>
To access Subversion repository using the HTTP protocol, you must install and 
configure a web server. Apache2 is proven to work with Subversion. Please 
refer to the HTTP subsection in the Apache2 section to install and configure 
Apache2.  To access the Subversion repository using the HTTPS protocol, you 
must install and configure a digital certificate in your Apache 2 web server. 
Please refer to the HTTPS subsection in the Apache2 section to install and 
configure the digital certificate.
						</para>
						<para>
		To install Subversion, run the following command from a terminal prompt:
            </para>
	    <para>
<screen>
<command>sudo apt-get install subversion libapache2-svn</command>
</screen>
	    </para>

        </sect3>
        <sect3 id="subversion-configuration" status="complete">
          <title>서버 설정</title>
            <para>
	This step assumes you have installed above mentioned packages on your system. This section explains how to create a Subversion repository and access the project.</para>
			<sect4 id="create-svn-repos" status="complete">
				<title>Create Subversion Repository</title>
<para>The Subversion repository can be created using the following command from a terminal prompt:</para>

        <para>
<screen>
<command>svnadmin create /path/to/repos/project</command>
</screen>
        </para>
			</sect4>

        </sect3>
        <sect3 id="access-methods" status="complete">
          <title>접근 방법</title>
<para>Subversion repositories can be accessed (checked out) through many 
different methods --on local disk, or through various network protocols. 
A repository location, however, is always a URL. The table describes how 
different URL schemas map to the available access methods.</para>
				<table><title>접근 방법</title>

					<tgroup cols="2">
						<colspec colname="1"/>
						<colspec colname="2"/>
						<thead>
							<row>
								<entry><para>Schema</para></entry>
								<entry><para>Access Method</para></entry>
							</row>
						</thead>
						<tbody>
							<row>
								<entry><para>file://</para></entry>
								<entry><para>direct repository access (on local disk)</para></entry>
							</row>
							<row>
								<entry><para>http://</para></entry>
								<entry><para>Access via WebDAV protocol to Subversion-aware Apache2 web server</para></entry>
							</row>
							<row>
								<entry><para>https://</para></entry>
								<entry><para>Same as http://, but with SSL encryption</para></entry>
							</row>
							<row>
								<entry><para>svn://</para></entry>
								<entry><para>Access via custom protocol to an svnserve server</para></entry>
							</row>
							<row>
								<entry><para>svn+ssh://</para></entry>
								<entry><para>Same as svn://, but through an SSH tunnel</para></entry>
							</row>
						</tbody>
					</tgroup>
				</table>

				<para>
In this section, we will see how to configure Subversion for all 
these access methods. Here, we cover the basics. For more advanced 
usage details, refer to the <ulink url="http://svnbook.red-bean.com/">svn book</ulink>.
				</para>
			<sect4 id="direct-repos-access" status="complete">
				<title>Direct repository access (file://)</title>
<para> This is the simplest of all access methods. It does not 
require any Subversion server process to be running. This access 
method is used to access Subversion from the same machine. The 
syntax of the command, entered at a terminal prompt, is as follows:</para>

        <para>
<screen>
<command>svn co file:///path/to/repos/project</command>
</screen>
        </para>
  <para>또는</para>
	<para>
<screen>
<command>svn co file://localhost/path/to/repos/project</command>
</screen>
        </para>
	<note>
		<para>If you do not specify the hostname, there are three forward slashes (///) -- two for the protocol (file, in this case) plus the leading slash in the path. If you specify the hostname, you must use two forward slashes (//).</para>
	</note>
		<para>The repository permissions depend on filesystem permissions. If the user has read/write permission, he can checkout from and commit to the repository.</para>
			</sect4>
			<sect4 id="access-via-webdav" status="complete">
				<title>Access via WebDAV protocol (http://)</title>
<para> To access the Subversion repository via WebDAV protocol, you must configure your Apache 2 web server. You must add the following snippet in your <filename>/etc/apache2/apache2.conf</filename> file:</para>

	<programlisting> &lt;Location /svn&gt;
  DAV svn
  SVNPath /path/to/repos
  AuthType Basic
  AuthName "Your repository name"
  AuthUserFile /etc/subversion/passwd
  &lt;LimitExcept GET PROPFIND OPTIONS REPORT&gt;
  Require valid-user
  &lt;/LimitExcept&gt;
  &lt;/Location&gt; </programlisting>
  <para>Next, you must create the <filename>/etc/subversion/passwd</filename> 
  file. This file contains user authentication details. To add an entry, i.e. 
  to add a user, you can run the following command from a terminal prompt:</para>
	<para>
<screen>
<command>htpasswd2 /etc/subversion/passwd user_name</command>
</screen>
        </para>
	<para>This command will prompt you to enter the password. Once you enter the password, the user is added. Now, to access the repository you can run the following command:</para>
        <screen><command>svn co http://servername/svn</command></screen>
	<warning>
		<para>
			The password is transmitted as plain text. If you are worried about password snooping, you are advised to use SSL encryption. For details, please refer next section.
		</para>
	</warning>
			</sect4>
			<sect4 id="access-via-webdav-with-ssl" status="complete">
				<title>Access via WebDAV protocol with SSL encryption (https://)</title>
					<para> 
						Accessing Subversion repository via WebDAV protocol with SSL 
						encryption (https://) is similar to http:// except that you 
						must install and configure the digital certificate in your 
						Apache2 web server.
					</para>

					<para>
						You can install a digital certificate issued by a signing 
						authority like Verisign. Alternatively, you can install your 
						own self-signed certificate.
					</para>
					<para>
						This step assumes you have installed and configured a digital 
						certificate in your Apache 2 web server. Now, to access the 
						Subversion repository, please refer to the above section! 
						The access methods are exactly the same, except the protocol. 
						You must use https:// to access the Subversion repository.
					</para>

			</sect4>
			<sect4 id="access-via-custom-protocol" status="complete">
				<title>Access via custom protocol (svn://)</title>
					<para> 
					Once the Subversion repository is created, you can configure the 
					access control. You can edit the <filename>
					/path/to/repos/project/conf/svnserve.conf</filename> file to 
					configure the access control.  For example, to set up 
					authentication, you can uncomment the following lines in the 
					configuration file: </para>
					<programlisting># [general]
# password-db = passwd</programlisting>

					<para>
					After uncommenting the above lines, you can maintain the user 
					list in the passwd file. So, edit the file <filename>passwd
					</filename> in the same directory and add the new user. The 
					syntax is as follows:
					</para>
					<programlisting>username = password</programlisting>
					<para>
					For more details, please refer to the file.
					</para>

					<para>
					Now, to access Subversion via the svn:// custom protocol, either 
					from the same machine or a different machine, you can run 
					svnserver using svnserve command. The syntax is as follows:
					</para>
					<programlisting>$ svnserve -d --foreground -r /path/to/repos
# -d -- daemon mode
# --foreground -- run in foreground (useful for debugging)
# -r -- root of directory to serve

For more usage details, please refer to:
$ svnserve --help</programlisting>

					<para>Once you run this command, Subversion starts listening on default port (3690). To access the project repository, you must run the following command from a terminal prompt: </para>
					<para>
<screen>
<command>svn co svn://hostname/project project --username user_name</command>
</screen>
                                        </para>
					<para>Based on server configuration, it prompts for password. Once 
					you are authenticated, it checks out the code from Subversion 
					repository.  To synchronize the project repository with the local 
					copy, you can run the <command>update</command> sub-command. The 
					syntax of the command, entered at a terminal prompt, is as follows:
					</para>
					<para>
<screen>
<command>cd project_dir ; svn update</command>
</screen>
                                        </para>
					<para>For more details about using each Subversion sub-command, you 
					can refer to the manual. For example, to learn more about the co 
					(checkout) command, please run the following command from a 
					terminal prompt:</para>
                    <para><screen><command>svn co help</command></screen></para>

			</sect4>
			<sect4 id="access-via-custom-protocol-with-ssl" status="complete">
				<title>Access via custom protocol with SSL encryption (svn+ssh://)</title>
					<para> The configuration and server process is same as in the
					svn:// method. For details, please refer to the above section. 
					This step assumes you have followed the above step and started 
					the	Subversion server using <application>svnserve</application>  
					command.</para>

					<para>It is also assumed that the ssh server is running on that 
					machine and that it is allowing incoming connections. To confirm, 
					please try to login to that machine using ssh. If you can login, 
					everything is perfect. If you cannot login, please address it 
					before continuing further.</para>

					<para>The svn+ssh:// protocol is used to access the Subversion 
					repository using SSL encryption. The data transfer is encrypted 
					using this method. To access the project repository (for example 
					with a checkout), you must use the following command syntax: 
                                        </para>
                                        <para>
<screen>
<command>svn co svn+ssh://hostname/var/svn/repos/project</command>
</screen>
                                        </para>

					<note><para> You must use the full path (/path/to/repos/project) 
					to access the Subversion repository using this access method. 
					</para></note>
					<para>
					Based on server configuration, it prompts for password. You must 
					enter the password you use to login via ssh. Once you are 
					authenticated, it checks out the code from the Subversion 
					repository.
					</para>
			</sect4>
			</sect3>

      </sect2>
      <sect2 id="cvs-server" status="complete">
        <title>CVS 서버</title> 
          <para>
          CVS is a version control system. You can use it to record the
          history of source files.
          </para>
        <sect3 id="cvs-installation" status="complete">
          <title>설치</title>
            <para>
              At a terminal prompt, enter the following command to install
              <application>cvs</application>:

<screen>
<command>sudo apt-get install cvs</command>
</screen>

After you install <application>cvs</application>, you should install
<application>xinetd</application> to start/stop the cvs server. At the
prompt, enter the following command to install
<application>xinetd</application>:

<screen>
<command>sudo apt-get install xinetd</command>
</screen>
            </para>
        </sect3>
        <sect3 id="cvs-configuration" status="complete">
          <title>설정</title>
            <para>
            Once you install cvs, the repository will be automatically
            initialized. By default, the repository resides under the
            <application>/var/lib/cvs</application> directory. You can
            change this path by running following command:

<screen>
<command>cvs -d /your/new/cvs/repo init</command>
</screen>

Once the initial repository is set up, you can configure
<application>xinetd</application> to start the CVS server. 
You can copy the following lines to the <filename>
/etc/xinetd/cvspserver</filename> file.

<programlisting>
service cvspserver
{
     port = 2401
     socket_type = stream
     protocol = tcp
     user = root
     wait = no
     type = UNLISTED
     server = /usr/bin/cvs
     server_args = -f --allow-root /var/lib/cvs pserver
     disable = no
}
</programlisting>

<note>
<para>
Be sure to edit the repository if you have changed the default
repository (<application>/var/lib/cvs</application>) directory.
</para>
</note>

Once you have configured <application>xinetd</application> you 
can start the cvs server by running following command:

<screen>
<command>sudo /etc/init.d/xinetd start</command>
</screen>
            </para>
            <para>
            You can confirm that the CVS server is running by issuing 
			the following command:
            </para>

            <para>
<screen>
<command>sudo netstat -tap | grep cvs</command>
</screen>
            </para>

            <para>
            When you run this command, you should see the following line
            or something similar:
            </para>

<programlisting>
tcp 0 0 *:cvspserver *:* LISTEN 
</programlisting>

        <para>
From here you can continue to add users, add new projects,
and manage the CVS server. 
        </para>
        <warning>
<para>
          CVS allows the user to add users independently of the
underlying OS installation. Probably the easiest way is to use the Linux
Users for CVS, although it has potential security issues. Please refer
to the CVS manual for details.
</para>
        </warning>

        </sect3>
        <sect3 id="cvs-add-projects" status="complete">
          <title>프로젝트 더하기</title>
            <para>
            This section explains how to add new project to the CVS 
			repository. Create the directory and add necessary document 
			and source files to the directory. Now, run the following 
			command to add this project to CVS repository:
<screen>
<command>cd your/project</command>
<command>cvs import -d :pserver:username@hostname.com:/var/lib/cvs -m "Importing my project to CVS repository" . new_project start</command>
</screen>

<tip>
<para>
You can use the CVSROOT environment variable to store the CVS root directory.
Once you export the CVSROOT environment variable, you can avoid using -d option to
above cvs command.
</para>
</tip>
The string <emphasis>new_project</emphasis> is a vendor
tag, and <emphasis>start</emphasis> is a release tag.
They serve no purpose in this context, but since CVS requires them, they
must be present.

<warning>
<para>
When you add a new project, the CVS user you use must have write access to the
CVS repository (<application>/var/lib/cvs</application>). By default, the
<application>src</application> group has write access to the CVS
repository. So, you can add the user to this group, and he can then add and
manage projects in the CVS repository.
</para>
</warning>
            </para>
        </sect3>
      </sect2>
      <sect2 id="version-control-ref" status="complete">
        <title>참조</title> 
				<para><ulink url="http://subversion.tigris.org/">Subversion 홈 페이지</ulink></para>
				<para><ulink url="http://svnbook.red-bean.com/">Subversion 책</ulink></para>
				<para><ulink url="http://ximbiot.com/cvs/manual/cvs-1.11.21/cvs_toc.html">CVS 매뉴얼</ulink></para>
      </sect2>
    </sect1>
	<sect1 id="databases" status="complete">
		<title>데이타베이스</title>
          <para>
            Ubuntu provides two Database servers. They are:
            <itemizedlist spacing="compact">
                <listitem>
                    <para><application><trademark>MySQL</trademark></application></para>
                </listitem>
                <listitem>
                    <para><application>PostgreSQL</application></para>
                </listitem>
            </itemizedlist>
            They are available in the main repository. This section
            explains how to install and configure these database
            servers.
          </para>
      <sect2 id="mysql" status="complete">
        <title>MySQL</title>
          <para>
          MySQL is a fast, multi-threaded, multi-user, and robust SQL
          database server. It is intended for mission-critical, 
		  heavy-load production systems as well as for embedding into 
		  mass-deployed software.
          </para>

        <sect3 id="mysql-installation" status="complete">
          <title>설치</title>
            <para>
            To install MySQL, run the following command from a terminal prompt:
            </para>

            <para>
<screen>
<command>sudo apt-get install mysql-server mysql-client</command>
</screen>
            </para>

            <para>
            Once the installation is complete, the MySQL server should be
            started automatically. You can run the following command from a terminal prompt to
            check whether the MySQL server is running:
            </para>

            <para>
<screen>
<command>sudo netstat -tap | grep mysql</command>
</screen>
            </para>

            <para>
            When you run this command, you should see the following line
            or something similar:
            </para>

<programlisting>
tcp 0 0 localhost.localdomain:mysql *:* LISTEN -
</programlisting>
	<para>If the server is not running correctly, you can type the following command to start it:</para>
            <para>
<screen>
<command>sudo /etc/init.d/mysql restart</command>
</screen>
        </para>

        </sect3>
        <sect3 id="mysql-configuration" status="complete">
          <title>설정</title>
            <para>
            By default, the administrator password is not set. Once you
            install MySQL, the first thing you must do is to configure
            the MySQL administrator password. To do this, run the following commands:
            </para>
            <para>
<screen>
<command>sudo mysqladmin -u root password newrootsqlpassword</command>
</screen>
            </para>
            <para>
<screen>
<command>sudo mysqladmin -u root -h localhost password newrootsqlpassword</command>
</screen>
            </para>

            <para>
            You can edit the <filename>/etc/mysql/my.cnf</filename> file to configure the basic
            settings -- log file, port number, etc. Refer to
            <filename>/etc/mysql/my.cnf</filename> file for more details.
            </para>
        </sect3>
      </sect2>
      <sect2 id="postgresql" status="complete">
        <title>PostgreSQL</title> 
          <para>
          PostgreSQL is an object-relational database system that has
          the features of traditional commercial database systems with
          enhancements to be found in next-generation DBMS systems.
          </para>
        <sect3 id="postgresql-installation" status="complete">
          <title>설치</title>
            <para>
            To install PostgreSQL, run the following command in the
            command prompt:
            </para>

            <para>
<screen>
<command>sudo apt-get install postgresql</command>
</screen>
            </para>

            <para>
            Once the installation is complete, you should configure the
            PostgreSQL server based on your needs, although the default
            configuration is viable.</para>
            
        </sect3>
        <sect3 id="postgresql-configuration" status="complete">
          <title>설정</title>
            <para>By default, connection via TCP/IP is disabled.
            PostgreSQL supports multiple client authentication methods.
            By default, IDENT authentication method is used.  Please
            refer <ulink url="http://www.postgresql.org/docs/8.1/static/admin.html">
			the PostgreSQL Administrator's Guide</ulink>.</para>
            
            <para>The following discussion assumes that you wish to enable 
			TCP/IP connections and use the MD5 method for client 
			authentication. PostgreSQL configuration files are stored in the
            <filename>/etc/postgresql/&lt;version&gt;/main</filename>
            directory. For example, if you install PostgreSQL 7.4, the
            configuration files are stored in the
            <filename>/etc/postgresql/7.4/main</filename> directory.
            </para>
            
            <tip>
            <para>
             To configure <application>ident</application>
             authentication, add entries to the <filename>/etc/postgresql/7.4/main/pg_ident.conf</filename>
             file.
            </para>
            </tip>

            <para>To enable TCP/IP connections, edit the file <filename>/etc/postgresql/7.4/main/postgresql.conf</filename></para>

            <para>Locate the line <emphasis>#tcpip_socket =
            false</emphasis> and change it to
            <emphasis>tcpip_socket =
            true</emphasis>. You may
            also edit all other parameters, if you know what you are doing! 
			For details, refer to the configuration file or to the PostgreSQL documentation.
            </para>

            <para>By default, the user credentials are not set for
            <emphasis>MD5</emphasis> client
            authentication. So, first it is necessary to configure the PostgreSQL server to use
            <emphasis>trust</emphasis> client
            authentication, connect to the database,
            configure the password, and revert the configuration back to use
            <emphasis>MD5</emphasis> client authentication.
            To enable <emphasis>trust</emphasis> client
            authentication, edit the file <filename>/etc/postgresql/7.4/main/pg_hba.conf</filename></para>

            <para>Comment out all the existing lines which use
            <emphasis>ident</emphasis> and
            <emphasis>MD5</emphasis>
            client authentication and add the following
            line:</para>
<programlisting>
local all postgres trust sameuser
</programlisting>

            <para>Then, run the following command to
            start the PostgreSQL server:
            </para>
            <para>
<screen>
<command>sudo /etc/init.d/postgresql start</command>
</screen>
            </para>
            <para>Once the PostgreSQL server is successfully started, run the following command at a terminal prompt to connect to the default
            PostgreSQL template database</para>

            <para>
<screen>
<command>psql -U postgres -d template1</command>
</screen>
            </para>
            <para>The above command connects to PostgreSQL
            database <emphasis>template1</emphasis> as user
            <emphasis>postgres</emphasis>. Once you connect to the PostgreSQL
            server, you will be at a SQL prompt. You can run the
            following SQL command at the <application>psql</application> prompt to configure the
            password for the user <emphasis role="italics">postgres</emphasis>.</para>

            <para>
<screen>
<command>template1=# ALTER USER postgres with encrypted password 'your_password';</command>
</screen>
            </para>
            <para>After configuring the password, edit the file
            <filename>/etc/postgresql/7.4/main/pg_hba.conf</filename> to use
            <emphasis>MD5</emphasis> authentication:</para>
            <para>Comment the recently added <emphasis role="italics">trust</emphasis> line and add the following
            line: </para>

<programlisting>
local all postgres md5 sameuser
</programlisting>
            <warning>
            <para>
             The above configuration is not complete by any means. Please
             refer <ulink url="http://www.postgresql.org/docs/8.1/static/admin.html">
			 the PostgreSQL Administrator's Guide</ulink> to configure more parameters.
            </para>
            </warning>
        </sect3>
      </sect2>
    </sect1>
	<sect1 id="email-services" status="complete">
		<title>이메일 서비스</title>
          <para>
            The process of getting an email from one person to another over a network or
			the Internet involves many systems working together.  Each of these systems
			must be correctly configured for the process to work.  The sender uses a <emphasis>Mail
			User Agent</emphasis> (MUA), or email client, to send the message through one or more
			<emphasis>Mail Transfer Agents</emphasis> (MTA), the last of which will hand it off to a 				<emphasis>Mail Delivery Agent</emphasis> (MDA) for delivery to the 
			recipient's mailbox, from which it
			will be retrieved by the recipient's email client, usually via a POP3 or IMAP server.
          </para>
      <sect2 id="postfix" status="complete">
        <title>Postfix</title>
          <para>
            <application>Postfix</application> is the default Mail Transfer Agent (MTA) in Ubuntu. It
            attempts to be fast and easy to administer and secure. It is
            compatible with the MTA <application>sendmail</application>. This section explains how
            to install and configure <application>postfix</application>. It also explains how to
            set it up as an SMTP server using a secure connection (for sending emails securely).
          </para>
        <sect3 id="postfix-installation" status="complete">
          <title>설치</title>
            <para>
            To install <application>postfix</application> with SMTP-AUTH and Transport Layer
            Security (TLS), run the following command:
<screen>
<command>sudo apt-get install postfix</command>
</screen>
		Simply press return when the installation process asks questions, the configuration will be done in greater detail in the next stage.
            </para>
        </sect3>
        <sect3 id="postfix-configuration" status="complete">
          <title>기본적인 설정</title>
            <para>
            To configure <application>postfix</application>, run the following command:
<screen>
<command>sudo dpkg-reconfigure postfix</command>
</screen>
            The user interface will be displayed. On each screen, select the following
            values:
            <itemizedlist spacing="compact">
            <listitem><para>Ok</para></listitem>
            <listitem><para>Internet Site</para></listitem>
            <listitem><para>NONE</para></listitem>
            <listitem><para>mail.example.com</para></listitem>
            <listitem><para>mail.example.com, localhost.localdomain, localhost</para></listitem>
            <listitem><para>No</para></listitem>
            <listitem><para>127.0.0.0/8</para></listitem>
            <listitem><para>Yes</para></listitem>
            <listitem><para>0</para></listitem>
            <listitem><para>+</para></listitem>
            <listitem><para>all</para></listitem>
            </itemizedlist>
            </para>
            <note>
            <para>
            Replace mail.example.com with your mail server hostname.
            </para>
            </note>
	 </sect3>
        <sect3 id="postfix-smtp-authentication" status="complete">
          <title>SMTP 인증</title>
            <para>The next steps are to configure
            <application>postfix</application> to use SASL for SMTP
            AUTH. Rather than editing the configuration file directly, 
	     you can use the <command>postconf</command> command to configure
            all <application>postfix</application> parameters.  The
            configuration parameters will be stored in
            <filename>/etc/postfix/main.cf</filename> file. Later if you
            wish to re-configure a particular parameter, you can either
            run the command or change it manually in the file.</para>
	<procedure>
		<step><para>Configure Postfix to do SMTP AUTH using SASL (saslauthd):
<screen>
postconf -e 'smtpd_sasl_local_domain ='
postconf -e 'smtpd_sasl_auth_enable = yes'
postconf -e 'smtpd_sasl_security_options = noanonymous'
postconf -e 'broken_sasl_auth_clients = yes'
postconf -e 'smtpd_recipient_restrictions = permit_sasl_authenticated,permit_mynetworks,reject_unauth_destination'
postconf -e 'inet_interfaces = all'
echo 'pwcheck_method: saslauthd' &gt;&gt; /etc/postfix/sasl/smtpd.conf
echo 'mech_list: plain login' &gt;&gt; /etc/postfix/sasl/smtpd.conf
</screen>
		</para>
		</step>
		<step><para>Next, configure the digital certificate 
            for TLS. When asked questions, follow the instructions and answer appropriately.
<screen>
openssl genrsa -des3 -rand /etc/hosts -out smtpd.key 1024
chmod 600 smtpd.key
openssl req -new -key smtpd.key -out smtpd.csr
openssl x509 -req -days 3650 -in smtpd.csr -signkey smtpd.key -out smtpd.crt
openssl rsa -in smtpd.key -out smtpd.key.unencrypted
mv -f smtpd.key.unencrypted smtpd.key
openssl req -new -x509 -extensions v3_ca -keyout cakey.pem -out cacert.pem -days 3650
mv smtpd.key /etc/ssl/private/
mv smtpd.crt /etc/ssl/certs/
mv cakey.pem /etc/ssl/private/
mv cacert.pem /etc/ssl/certs/
</screen>
		</para>
		<note><para>You can get the digital
            certificate from a certificate authority. Alternatively, you
            can create the certificate yourself. Refer to 
			<xref linkend="creating-a-self-signed-certificate"/> for more 
			details.</para></note>
		</step>
		<step><para>Configure Postfix to do TLS encryption for both incoming and outgoing mail:
<screen>
postconf -e 'smtpd_tls_auth_only = no'
postconf -e 'smtp_use_tls = yes'
postconf -e 'smtpd_use_tls = yes'
postconf -e 'smtp_tls_note_starttls_offer = yes'
postconf -e 'smtpd_tls_key_file = /etc/ssl/private/smtpd.key'
postconf -e 'smtpd_tls_cert_file = /etc/ssl/certs/smtpd.crt'
postconf -e 'smtpd_tls_CAfile = /etc/ssl/certs/cacert.pem'
postconf -e 'smtpd_tls_loglevel = 1'
postconf -e 'smtpd_tls_received_header = yes'
postconf -e 'smtpd_tls_session_cache_timeout = 3600s'
postconf -e 'tls_random_source = dev:/dev/urandom'
postconf -e 'myhostname = mail.example.com'
</screen>
		</para>
		</step>
		</procedure>
            <note>
            <para>
            After you run all the commands, the SMTP AUTH is configured
            with <application>postfix</application>. The self-signed
            cerficiate is created for TLS and it is configured with
            <application>postfix</application>.
            </para>
            </note>
            <para>
            Now, the file <filename>/etc/postfix/main.cf</filename>
            should look like <ulink url="../sample/postfix_configuration">this</ulink>.
		</para>
		<para>
            The postfix initial configuration is complete. Run
            the following command to start postfix daemon:
            <screen><command>sudo /etc/init.d/postfix start</command></screen>

            Now the <application>postfix</application> daemon is installed, configured and run
            successfully. <application>Postfix</application> supports SMTP AUTH as defined in
            <ulink url="ftp://ftp.isi.edu/in-notes/rfc2554.txt">RFC2554</ulink>.
            It is based on <ulink url="ftp://ftp.isi.edu/in-notes/rfc2222.txt">SASL</ulink>. However it is still necessary to set up SASL authentication before you can use SMTP.
            </para>
	</sect3>
	<sect3 id="sasl">
	  <title>SASL 설정하기</title>
            <para>
            The
            <application>libsasl2</application>,
            <application>sasl2-bin</application> and
            <application>libsasl2-modules</application> are necessary to
            enable SMTP AUTH using SASL. You can install these applications if
            you have not installed them already.
<screen>
<command>apt-get install libsasl2 sasl2-bin</command>
</screen>
	    </para>
	    <para>
		A few changes are necessary to make it work properly. Because <application>Postfix</application> runs chrooted in <filename>/var/spool/postfix</filename>, <application>SASL</application> needs to be configured to run in the false root (<filename>/var/run/saslauthd</filename> becomes <filename>/var/spool/postfix/var/run/saslauthd</filename>):
<screen>
<command>mkdir -p /var/spool/postfix/var/run/saslauthd</command>
<command>rm -rf /var/run/saslauthd</command>
</screen>
	    </para>
	    <para>
            To activate <application>saslauthd</application>, edit the file <filename>/etc/default/saslauthd</filename>, and change or add the START variable. In order to configure <application>saslauthd</application> to run in the false root, add the PWDIR, PIDFILE and PARAMS variables. Finally, configure the MECHANISMS variable to your liking. The file should look like this:

<programlisting>
# This needs to be uncommented before saslauthd will be run
# automatically
START=yes

PWDIR="/var/spool/postfix/var/run/saslauthd"
PARAMS="-m ${PWDIR}"
PIDFILE="${PWDIR}/saslauthd.pid"

# You must specify the authentication mechanisms you wish to use.
# This defaults to "pam" for PAM support, but may also include
# "shadow" or "sasldb", like this:
# MECHANISMS="pam shadow"

MECHANISMS="pam"
</programlisting>
            </para>
<note>
<para>
If you prefer, you can use <emphasis role="strong">shadow</emphasis>
instead of <emphasis role="strong">pam</emphasis>. This will use MD5
hashed password transfer and is perfectly secure. The username and
password needed to authenticate will be those of the users on the system
you are using on the server.
</para>
</note>
        <para>
Next, update the dpkg "state" of <filename>/var/spool/portfix/var/run/saslauthd</filename>. The saslauthd init script uses this setting to create the missing directory with the appropriate permissions and ownership:
<screen>
<command>dpkg-statoverride --force --update --add root sasl 755 /var/spool/postfix/var/run/saslauthd</command>
</screen>
        </para>
        </sect3>
        <sect3 id="postfix-testing" status="complete">
          <title>테스팅</title>
            <para>
          SMTP AUTH configuration is complete. Now it is time to start
          and test the setup. You can run the following command to start
          the SASL daemon:
            <screen><command>sudo /etc/init.d/saslauthd start</command></screen>

          To see if SMTP-AUTH and TLS work properly, run the following
          command:
            <screen><command>telnet mail.example.com 25</command></screen>
          After you have established the connection to the postfix mail
          server, type:
            <screen>ehlo mail.example.com</screen>
          If you see the following lines among others, then everything
          is working perfectly. Type <command>quit</command> to exit.
<programlisting>
250-STARTTLS
250-AUTH LOGIN PLAIN
250-AUTH=LOGIN PLAIN
250 8BITMIME
</programlisting>
        </para>
        </sect3>
      </sect2>
      <sect2 id="exim4" status="complete">
        <title>Exim4</title>
          <para>
            <application>Exim4</application> is is another Message Transfer
            Agent (MTA) developed at the University of Cambridge for use
            on Unix systems connected to the internet. Exim can be
            installed in place of <application>sendmail</application>,
            although the configuration of
            <application>exim</application> is quite different to
            that of <application>sendmail</application>.
          </para>
        <sect3 id="exim4-installation" status="complete">
          <title>설치</title>
            <para>
            To install <application>exim4</application>, run the following command:
<screen>
<command>sudo apt-get install exim4 exim4-base exim4-config</command>
</screen>
            </para>
        </sect3>
        <sect3 id="exim4-configuration" status="complete">
          <title>설정</title>
            <para>
            To configure <application>exim4</application>, run the following command:
<screen>
<command>sudo dpkg-reconfigure exim4-config</command>
</screen>
            The user interface will be displayed. The user interface
            lets you configure many parameters. For example, In
            <application>exim4</application> the configuration files are
            split among multiple files. If you wish to have them in one
            file you can configure accordingly in this user interface.
            </para>

            <para>
            All the parameters you configure in the user interface are
            stored in
            <filename>/etc/exim4/update-exim4.conf.conf</filename> file.
            If you wish to re-configure, either you re-run the
            configuration wizard or manually edit this file
            using your favourite editor. Once you configure, you can run
            the following command to generate the master configuration
            file:
<screen>
<command>sudo update-exim4.conf</command>
</screen>
            The master configuration file, is generated and
            it is stored in
            <filename>/var/lib/exim4/config.autogenerated</filename>. 
            
            <warning>
            <para>
            At any time, you should not edit the master configuration
            file,
            <filename>/var/lib/exim4/config.autogenerated</filename>
            manually. It is updated automatically every time you run
            <command>update-exim4.conf</command>
            </para>
            </warning>
            You can run
            the following command to start
            <application>exim4</application> daemon.
<screen>
<command>sudo /etc/init.d/exim4 start</command>
</screen>
            <emphasis role="strong">TODO:</emphasis> This section should
            cover configuring SMTP AUTH with exim4. 
            </para>
        </sect3>
      </sect2>
      <sect2 id="dovecot-server" status="complete">
        <title>Dovecot 서버</title> 
          <para>
          <application>Dovecot</application> is a Mail Delivery Agent, written with security
          primarily in mind. It supports the major mailbox formats: mbox
          or Maildir. This section explain how to set it up as an imap or
          pop3 server.
          </para>
        <sect3 id="dovecot-installation" status="complete">
          <title>설치</title>
            <para>
            To install <application>dovecot</application>, run the following command in the
            command prompt:
<screen>
<command>sudo apt-get install dovecot-common dovecot-imapd dovecot-pop3d</command>
</screen>
            </para>
        </sect3>
        <sect3 id="dovecot-configuration" status="complete">
          <title>설정</title>
            <para>
            To configure <application>dovecot</application>, you can edit the file
            <filename>/etc/dovecot/dovecot.conf</filename>. You can
            choose the protocol you use. It could be pop3, pop3s (pop3
            secure), imap and imaps (imap secure). A description of these protocols is beyond the scope of this guide. For further information, refer to the wikipedia articles on <ulink url="http://en.wikipedia.org/wiki/POP3">POP3</ulink> and
            <ulink url="http://en.wikipedia.org/wiki/Internet_Message_Access_Protocol">IMAP</ulink>.
            </para>

            <para>
            IMAPS and POP3S are more secure that the simple IMAP and
            POP3 because they use SSL encryption to connect. Once you
            have chosen the protocol, amend the following line in the file
            <filename>/etc/dovecot/dovecot.conf</filename>:
<programlisting>
protocols = pop3 pop3s imap imaps
</programlisting>

            It enables the protocols when <application>dovecot</application> is started. Next, add the following line in pop3 section in the file <filename>/etc/dovecot/dovecot.conf</filename>:
<programlisting>
pop3_uidl_format = %08Xu%08Xv
</programlisting>

            Next, choose the mailbox you use. <application>Dovecot</application> supports
            <emphasis role="strong">maildir</emphasis> and <emphasis role="strong">mbox</emphasis> formats. These are the most
            commonly used mailbox formats. They both have their own
            benefits and they are discussed on <ulink url="http://dovecot.org/doc/configuration.txt">the dovecot website</ulink>.
            </para>
            <para>
            Once you have chosen your mailbox type, edit the file
            <filename>/etc/dovecot/dovecot.conf</filename> and change
            the following line:
<programlisting>
default_mail_env = maildir:~/Maildir # (for maildir)
또는
default_mail_env = mbox:~/mail:INBOX=/var/spool/mail/%u # (for mbox)
</programlisting>
            </para>
<note>
<para>
You should configure your Mail Trasport Agent (MTA) to transfer the
incoming mail to this type of mailbox if it is different from the one
you have configured.
</para>
</note>
          <para>
          Once you have configured dovecot, start the <application>dovecot</application> daemon
          in order to test your setup:

          <screen><command>sudo /etc/init.d/dovecot start</command></screen>

          If you have enabled imap, or pop3, you can also try to log in
          with the commands <command>telnet localhost pop3</command> or
          <command>telnet localhost</command> imap2. If you see
          something like the following, the installation has been
          successful:
<programlisting>
bhuvan@rainbow:~$ telnet localhost pop3
Trying 127.0.0.1...
Connected to localhost.localdomain.
Escape character is '^]'.
+OK Dovecot ready.
</programlisting>
          </para>
        </sect3>
        <sect3 id="dovecot-ssl" status="complete">
          <title>Dovecot SSL 설정</title>
            <para>
            To configure <application>dovecot</application> to use SSL, you can edit the file
            <filename>/etc/dovecot/dovecot.conf</filename> and amend
            following lines:
<programlisting>
ssl_cert_file = /etc/ssl/certs/dovecot.pem
ssl_key_file = /etc/ssl/private/dovecot.pem
ssl_disable = no
disable_plaintext_auth = no
</programlisting>

          The <emphasis role="strong">cert</emphasis> and <emphasis role="strong">key</emphasis> files are created automatically
          by <application>dovecot</application> when you install it. Please note that these keys
          are not signed and will give "bad signature" errors when
          connecting from a client. To avoid this, you can use
          commercial certificates, or even better, you can use your own
          SSL certificates.
          </para>
	</sect3>
	<sect3>
	  <title>이메일 서버를 위한 방화벽 설정</title>
          <para>다른 컴퓨터에서 메일 서버를 접근하려면, 필요한 포트로 서버로의 접속을 허용하도록 방화벽을 반드시 설정해야만 합니다. <itemizedlist>
            <listitem><para>IMAP - 143</para></listitem>
            <listitem><para>IMAPS - 993</para></listitem>
            <listitem><para>POP3 - 110</para></listitem>
            <listitem><para>POP3S - 995</para></listitem>
            </itemizedlist></para>
        </sect3>
      </sect2>
      <sect2 id="mailman" status="complete">
        <title>Mailman</title> 
          <para>
          Mailman is an open source program for managing electronic mail
          discussions and e-newsletter lists. Many open source mailing
          lists (including all the <ulink url="http://lists.ubuntu.com">Ubuntu mailing lists</ulink>) use
          Mailman as their mailing list software. It is powerful and easy
          to install and maintain.
          </para>
        <sect3 id="mailman-installation" status="complete">
          <title>설치</title>
            <para>
            Mailman provides a web interface for the administrators
            and users. So, it requires apache with mod_perl support.
            Mailman uses an external mail server to send and receive 
			emails. It works perfectly with the following mail servers:
            </para>
            <para>
            <itemizedlist spacing="compact">
                <listitem>
                    <para><application>Postfix</application></para>
                </listitem>
                <listitem>
                    <para><application>Exim</application></para>
                </listitem>
                <listitem>
                    <para><application>Sendmail</application></para>
                </listitem>
                <listitem>
                    <para><application>Qmail</application></para>
                </listitem>
            </itemizedlist>
            </para>

            <para>
            We will see how to install mailman, the apache web server 
			and the Exim mail server. If you wish to install mailman
            with a different mail server, please refer to the references
            section. 
            </para>
          <sect4 id="mailman-apache2">
            <title>아파치2</title>
              <para>아파치2를 설치하는 것은 <xref linkend="http-installation"/> 을 참조 하십시오.</para>
          </sect4>
          <sect4 id="mailman-exim4">
            <title>Exim4</title>
              <para>
              To install Exim4 you run the following commands at a terminal prompt:
<screen>
<command>sudo apt-get install exim4</command>
<command>sudo apt-get install exim4-base</command>
<command>sudo apt-get install exim4-config</command>
</screen>

Once exim4 is installed, the configuration files are stored in
the <filename>/etc/exim4</filename> directory. In ubuntu, by default, the exim4 configuration files are
split across different files. You can change this behavior by changing
the following variable in the <filename>/etc/exim4/update-exim4.conf</filename> file:

              <itemizedlist spacing="compact">
              <listitem>
                <para><application>dc_use_split_config='true'</application></para>
              </listitem>
              </itemizedlist>
              </para>
          </sect4>
          <sect4 id="mailman-mailman">
            <title>Mailman</title>
              <para>
              To install <application>Mailman</application>, run following command at a terminal prompt:
<screen>
<command>sudo apt-get install mailman</command> 
</screen>

It copies the installation files in
<application>/var/lib/mailman</application> directory. It installs the
CGI scripts in <application>/usr/lib/cgi-bin/mailman</application>
directory.  It creates <emphasis>list</emphasis> linux
user. It creates the <emphasis>list</emphasis> linux
group. The mailman process will be owned by this user. 
              </para>
          </sect4>
        </sect3>
        <sect3 id="mailman-configuration" status="complete">
          <title>설정</title>
            <para>
            This section assumes you have successfully installed
            <application>mailman</application>,
            <application>apache2</application>, and
            <application>exim4</application>. Now you just need
            to configure them. 
            </para>
          <sect4 id="mailman-conf-apache2">
            <title>아파치2</title>
              <para>
              Once apache2 is installed, you can add the following lines in
              the <filename>/etc/apache2/apache2.conf</filename> file:
<programlisting>
Alias /images/mailman/ "/usr/share/images/mailman/"
Alias /pipermail/ "/var/lib/mailman/archives/public/"
</programlisting>

Mailman uses apache2 to render its CGI scripts. The mailman CGI scripts
are installed in the <application>/usr/lib/cgi-bin/mailman</application>
directory. So, the mailman url will be
http://hostname/cgi-bin/mailman/. You can make changes to the
<filename>/etc/apache2/apache2.conf</filename> file if you wish to
change this behavior.
              </para>
          </sect4>

          <sect4 id="mailman-conf-exim4">
            <title>Exim4</title>
              <para>
              Once Exim4 is installed, you can start the Exim server using the following
              command from a terminal prompt:
<screen>
<command>sudo apt-get /etc/init.d/exim4 start</command>
</screen>

In order to make mailman work with exim4, you need to configure exim4.
As mentioned earlier, by default, exim4 uses multiple configuration
files of different types. For details, please refer to the <ulink url="http://www.exim.org">Exim</ulink> website.  To run mailman, we
should add new a configuration file to the following configuration
types: 
              <itemizedlist spacing="compact">
              <listitem>
                <para>Main</para>
              </listitem>
              <listitem>
                <para>Transport</para>
              </listitem>
              <listitem>
                <para>Router</para>
              </listitem>
              </itemizedlist>
              Exim creates a master configuration file by sorting all
              these mini configuration files. So, the order of these
              configuration files is very important.
              </para>
          </sect4>
          <sect4 id="mailman-conf-main">
            <title>Main</title>
              <para>
              All the configuration files belonging to the main type are
              stored in the
              <filename>/etc/exim4/conf.d/main/</filename> directory. You can add
              the following content to a new file, named <filename>04_exim4-config_mailman</filename>:

<programlisting>
# start
# Home dir for your Mailman installation -- aka Mailman's prefix
# directory.
# On Ubuntu this should be "/var/lib/mailman"
# This is normally the same as ~mailman
MM_HOME=/var/lib/mailman
#
# User and group for Mailman, should match your --with-mail-gid
# switch to Mailman's configure script.  Value is normally "mailman"
MM_UID=list
MM_GID=list
#
# Domains that your lists are in - colon separated list
# you may wish to add these into local_domains as well
domainlist mm_domains=hostname.com
#
# -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
#
# These values are derived from the ones above and should not need
# editing unless you have munged your mailman installation
#
# The path of the Mailman mail wrapper script
MM_WRAP=MM_HOME/mail/mailman
#
# The path of the list config file (used as a required file when
# verifying list addresses)
MM_LISTCHK=MM_HOME/lists/${lc::$local_part}/config.pck
# end
</programlisting>
          </para>
          </sect4>
          <sect4 id="mailman-conf-transport">
            <title>Transport</title>
              <para>
All the configuration files belonging to transport type are stored in
the <filename>/etc/exim4/conf.d/transport/</filename> directory. You
can add the following content to a new file named <filename>
40_exim4-config_mailman</filename>:

<programlisting>
  mailman_transport:
   driver = pipe
   command = MM_WRAP \
               '${if def:local_part_suffix \
                     {${sg{$local_part_suffix}{-(\\w+)(\\+.*)?}{\$1}}} \
                     {post}}' \
               $local_part
    current_directory = MM_HOME
    home_directory = MM_HOME
    user = MM_UID
    group = MM_GID
</programlisting>
              </para>
          </sect4>
          <sect4 id="mailman-conf-router">
            <title>Router</title>
              <para>
All the configuration files belonging to router type are stored in the
<filename>/etc/exim4/conf.d/router/</filename> directory. You can add the following content
in to a new file named <filename>101_exim4-config_mailman</filename>:
<programlisting>
  mailman_router:
   driver = accept
   require_files = MM_HOME/lists/$local_part/config.pck
   local_part_suffix_optional
   local_part_suffix = -bounces : -bounces+* : \
                       -confirm+* : -join : -leave : \
                       -owner : -request : -admin
   transport = mailman_transport
</programlisting>

              </para>
<warning>
<para>
The order of main and transport configuration files can be in any order.
But, the order of router configuration files must be the same.
This particular file must appear before the
<application>200_exim4-config_primary</application> file.
These two configuration files contain same type of information. The
first file takes the precedence. For more details, please refer to the
references section.
</para>
</warning>
          </sect4>
          <sect4 id="mailman-conf-mailman">
            <title>Mailman</title>
              <para>
Once mailman is installed, you can run it using the following command:
<screen>
<command>sudo /etc/init.d/mailman start</command>
</screen>

Once mailman is installed, you should create the default mailing list.
Run the following command to create the mailing list:


<screen>
<command>sudo /usr/sbin/newlist mailman</command>
</screen>

<programlisting>
  Enter the email address of the person running the list: bhuvan at ubuntu.com
  Initial mailman password:
  To finish creating your mailing list, you must edit your <filename>/etc/aliases</filename> (or
  equivalent) file by adding the following lines, and possibly running the
  `newaliases' program:

  ## mailman mailing list
  mailman:              "|/var/lib/mailman/mail/mailman post mailman"
  mailman-admin:        "|/var/lib/mailman/mail/mailman admin mailman"
  mailman-bounces:      "|/var/lib/mailman/mail/mailman bounces mailman"
  mailman-confirm:      "|/var/lib/mailman/mail/mailman confirm mailman"
  mailman-join:         "|/var/lib/mailman/mail/mailman join mailman"
  mailman-leave:        "|/var/lib/mailman/mail/mailman leave mailman"
  mailman-owner:        "|/var/lib/mailman/mail/mailman owner mailman"
  mailman-request:      "|/var/lib/mailman/mail/mailman request mailman"
  mailman-subscribe:    "|/var/lib/mailman/mail/mailman subscribe mailman"
  mailman-unsubscribe:  "|/var/lib/mailman/mail/mailman unsubscribe mailman"

  Hit enter to notify mailman owner...

  # 
</programlisting>

We have configured exim to recognize all emails from mailman. So, it is
not mandatory to make any new entries in
<filename>/etc/aliases</filename>.  If you have made any changes
to the configuration files, please ensure that you restart those
services before continuing to next section.
</para>
          </sect4>
        </sect3>
        <sect3 id="mailman-admin" status="complete">
          <title>관리</title>
<para>
We assume you have a default installation. The
mailman cgi scripts are still in
<application>/usr/lib/cgi-bin/mailman/</application> directory.  Mailman
provides a web based administration facility. To access this page, point
your browser to the following url: 

</para>
<para>http://hostname/cgi-bin/mailman/admin</para>

<para>
The default mailing list, <emphasis>mailman</emphasis>,
will appear in this screen. If you click the mailing list name, it
will ask for your authentication password.  If you enter the correct
password, you will be able to change administrative settings of this
mailing list.

You can create a new mailing list using command line utility
(<command>/usr/sbin/newlist</command>).
Alternatively, you can create a new mailing list using web interface. 
</para>
        </sect3>
        <sect3 id="mailman-users" status="complete">
          <title>사용자</title>
<para>
Mailman provides a web based interface for users. To access this page,
point your browser to the following url:
</para>

<para>http://hostname/cgi-bin/mailman/listinfo</para>

<para>
The default mailing list, <emphasis>mailman</emphasis>,
will appear in this screen. If you
click the mailing list name, it will display the subscription form. You
can enter your email address, name (optional), and password to subscribe.
An email invitation will be sent to you. You can follow the
instructions in the email to subscribe.
</para>
        </sect3>
        <sect3 id="mailman-references" status="complete">
          <title>참조</title>
<para>
<ulink url="http://www.list.org/mailman-install/index.html">GNU Mailman - 설치 매뉴얼</ulink>
</para>
<para>
<ulink url="http://www.exim.org/howto/mailman21.html">하우투 - Exim 4와 Mailman 2.1을 함께 사용하기</ulink>
</para>
        </sect3>
      </sect2>
    </sect1>
	</chapter>
