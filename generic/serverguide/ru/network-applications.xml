<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE chapter PUBLIC "-//OASIS//DTD DocBook XML V4.3//EN" "http://www.oasis-open.org/docbook/xml/4.3/docbookx.dtd" [
<!ENTITY % globalent SYSTEM "../../../libs/global.ent">
<!-- NAMES --><!ENTITY canonical-name "Canonical Ltd.">
<!ENTITY project-name "Ubuntu Documentation Project">
<!ENTITY ubuntu "<phrase>Ubuntu</phrase>">
<!-- VERSIONS --><!ENTITY distro-version "Dapper Drake">
<!ENTITY distro-rev "6.06 LTS">
<!ENTITY distro-release-date "June 2006">
<!ENTITY linux-kernel-version "2.6.15">
<!ENTITY gcc-version "4.0.3">
<!ENTITY glibc-version "2.3.6">
<!ENTITY python-version "2.4.3">
<!-- AUTHORS --><!ENTITY author-ubuntu-documentation-project SYSTEM "../common/authors/ubuntu-documentation-project.xml">
<!ENTITY author-christoph-haas SYSTEM "../common/authors/christoph-haas.xml">
<!ENTITY author-alexander-poslavsky SYSTEM "../common/authors/alexander-poslavsky.xml">
<!ENTITY author-alan-hood SYSTEM "../common/authors/alan-hood.xml">
<!ENTITY author-johnathon-hornbeck SYSTEM "../common/authors/johnathon-hornbeck.xml">
<!ENTITY author-nick-loeve SYSTEM "../common/authors/nick-loeve.xml">
<!ENTITY author-gordon-ingram SYSTEM "../common/authors/gordon-ingram.xml">
<!ENTITY author-sean-wheller SYSTEM "../common/authors/sean-wheller.xml">
<!ENTITY author-enrico-zini SYSTEM "../common/authors/enrico-zini.xml">
<!ENTITY author-kevin-muligan SYSTEM "../common/authors/kevin-muligan.xml">
<!ENTITY author-ari-torhamo SYSTEM "../common/authors/ari-torhamo.xml">
<!ENTITY author-jeff-schering SYSTEM "../common/authors/jeff-schering.xml">
<!ENTITY author-corey-burger SYSTEM "../common/authors/corey-burger.xml">
<!ENTITY author-niel-tallim SYSTEM "../common/authors/niel-tallim.xml">
<!ENTITY author-henry-meyerding SYSTEM "../common/authors/henry-meyerding.xml">
<!ENTITY author-matthew-east SYSTEM "../common/authors/matthew-east.xml">
<!ENTITY author-jerome-gotangco SYSTEM "../common/authors/jerome-gotangco.xml">
<!ENTITY author-johnathan-jesse SYSTEM "../common/authors/johnathan-jesse.xml">
<!ENTITY author-greg-taylor SYSTEM "../common/authors/greg-taylor.xml">
<!ENTITY author-troy-williams SYSTEM "../common/authors/troy-williams.xml">
<!ENTITY author-matt-galvin SYSTEM "../common/authors/matt-galvin.xml">
<!ENTITY author-robert-stoffers SYSTEM "../common/authors/robert-stoffers.xml">
<!ENTITY author-jordan-mantha SYSTEM "../common/authors/jordan-mantha.xml">
<!ENTITY author-venkat-raghavan SYSTEM "../common/authors/venkat-raghavan.xml">
<!ENTITY author-brian-burger SYSTEM "../common/authors/brian-burger.xml">
<!ENTITY author-rocco-stanzione SYSTEM "../common/authors/rocco-stanzione.xml">
<!ENTITY glossary SYSTEM "../common/C/glossary.xml">
<!-- LEGAL URLs --><!ENTITY gpl-url '<ulink url="http://www.gnu.org/licenses/gpl.html">GNU General Public License</ulink>'>
<!ENTITY cc "http://creativecommons.org/">
<!ENTITY cc-attrib '<ulink url="http://creativecommons.org/licenses/by-sa/2.0/">Attribution-ShareAlike 2.0</ulink>'>
<!ENTITY cc-fulldeed-url "http://creativecommons.org/licenses/by-sa/2.0/legalcode/">
<!ENTITY fdl-url '<ulink url="http://www.gnu.org/copyleft/fdl.html">GNU Free Documentation License</ulink>'>
<!ENTITY cc-disclaimer-url "http://creativecommons.org/licenses/disclaimer-popup?lang=en">
<!-- CANONICAL URL RESOURCES --><!ENTITY canonical-url "http://www.canonical.com">
<!-- UBUNTU URL RESOURCES --><!ENTITY ubuntu-packages "http://packages.ubuntu.com">
<!ENTITY ubuntu-dpkgfile "ubuntu5.10.tar">
<!ENTITY ubuntu-web "http://www.ubuntu.com">
<!ENTITY ubuntu-main "http://www.ubuntu.com">
<!ENTITY ubuntu-download "http://www.ubuntu.com/download">
<!ENTITY ubuntu-forums "http://www.ubuntu.com/community/forums">
<!ENTITY ubuntu-components "http://www.ubuntu.com/ubuntu/components">
<!ENTITY ubuntu-lists "http://lists.ubuntu.com">
<!ENTITY ubuntu-wiki "http://wiki.ubuntu.com">
<!ENTITY ubuntu-irc "irc.freenode.net channel #ubuntu">
<!ENTITY ubuntu-bugzilla "https://launchpad.net/distros/ubuntu/+bugs">
<!ENTITY ubuntu-doc-bugs "https://launchpad.net/products/ubuntu-doc/+bugs">
<!ENTITY ubuntu-paidsupport "http://www.ubuntu.com/support/supportoptions/paidsupport">
<!ENTITY ubuntu-freesupport "http://www.ubuntu.com/support/supportoptions/freesupport">
<!ENTITY ubuntu-comments "http://www.ubuntuforums.org/showthread.php?p=21787">
<!ENTITY ubuntu-documentation "http://help.ubuntu.com">
<!ENTITY ubuntu-documentation-repos "https://docteam.ubuntu.com/repos/trunk">
<!ENTITY ubuntu-doc-team "https://wiki.ubuntu.com/DocumentationTeam">
<!ENTITY ubuntu-doc-list "http://lists.ubuntu.com/mailman/listinfo/ubuntu-doc">
<!ENTITY ubuntu-shipit "http://shipit.ubuntu.com">
<!ENTITY ubuntu-launchpad "https://launchpad.ubuntu.com">
<!ENTITY ubuntu-rosetta "https://launchpad.ubuntu.com/rosetta">
<!ENTITY ubuntu-planet "http://planet.ubuntu.com">
<!ENTITY ubuntu-philosophy "http://www.ubuntu.com/ubuntu/philosophy">
<!ENTITY ubuntu-participate "http://www.ubuntu.com/community/participate/">
<!-- UBUNTU WIKI RESOURCES --><!ENTITY wiki-UserDocumentation "https://wiki.ubuntu.com/UserDocumentation">
<!ENTITY restricted-formats "https://wiki.ubuntu.com/RestrictedFormats">
<!ENTITY wiki-RestrictedFormats "https://wiki.ubuntu.com/RestrictedFormats">
<!ENTITY wiki-XChatHowto "https://wiki.ubuntu.com/XChatHowto">
<!ENTITY wiki-RootSudo "https://wiki.ubuntu.com/RootSudo">
<!ENTITY wiki-HowToGetHelp "https://wiki.ubuntu.com/HowToGetHelp">
<!ENTITY transcode "https://wiki.ubuntu.com/DVDRippingandEncoding">
<!ENTITY wiki-Wine "https://wiki.ubuntu.com/Wine">
<!ENTITY wiki-Cedega "https://wiki.ubuntu.com/Cedega">
<!ENTITY wiki-Nano "https://wiki.ubuntu.com/NanoHowto">
<!ENTITY wiki-locoteams "https://wiki.ubuntu.com/LoCoTeamList">
<!ENTITY wiki-BasicCommands "https://wiki.ubuntu.com/BasicCommands">
<!ENTITY wiki-filepermissions "https://wiki.ubuntu.com/FilePermissions">
<!-- KUBUNTU URL RESOURCES --><!ENTITY kubuntu-web "http://www.kubuntu.org">
<!ENTITY kubuntu-main "http://www.kubuntu.org">
<!ENTITY kubuntu-download "http://releases.ubuntu.com/kubuntu/">
<!ENTITY kubuntu-packages "http://packages.ubuntu.com/breezy/">
<!ENTITY kubuntu-cdpackages-nodefault "http://people.ubuntu.com/~cjwatson/seeds/kubuntu-breezy/ship">
<!ENTITY kubuntu-lists "http://lists.ubuntu.com/archives/kubuntu-users/">
<!ENTITY kubuntu-lists-users "http://lists.ubuntu.com/mailman/listinfo/kubuntu-users/">
<!ENTITY kubuntu-lists-devel "http://lists.ubuntu.com/mailman/listinfo/kubuntu-devel/">
<!ENTITY kubuntu-mirrors "http://distrowatch.com/kubuntu">
<!ENTITY kubuntu-forums "http://ubuntuforums.org/forumdisplay.php?f=68">
<!ENTITY kubuntu-forums2 "http://kubuntuforums.net">
<!ENTITY kubuntu-wiki "http://www.ubuntu.com/wiki/Kubuntu">
<!ENTITY kubuntu-irc "irc.freenode.net channel kubuntu">
<!ENTITY kubuntu-documentation-site "http://www.kubuntu.org/documentation.php">
<!ENTITY kubuntu-wiki-UserDocumentation "https://wiki.kubuntu.com/UserDocumentation">
<!-- XUBUNTU URL RESOURCES --><!ENTITY xubuntu-irc "irc.freenode.net channel xubuntu">
<!-- DEBIAN RESOURCES --><!ENTITY debian-apt "http://www.debian.org/doc/user-manuals#apt-howto">
<!-- EXTERNAL URL RESOURCES --><!ENTITY linmodem "http://www.linmodems.org/">
<!ENTITY gnome "http://www.gnome.org/">
<!ENTITY linuxorg "http://www.linux.org/">
<!ENTITY ooo "http://www.openoffice.org/">
<!ENTITY kde "http://www.kde.org/">
<!ENTITY lugww "http://lugww.counter.li.org/">
<!ENTITY ubuntu-watch "http://distrowatch.com/ubuntu/">
<!ENTITY realplayer-download "http://www.real.com/linux/">
<!ENTITY nvu-download "http://www.nvu.com/download.html">
<!ENTITY sunjava-download "http://java.sun.com/j2se/1.5.0/download.jsp">
<!ENTITY xorg "http://www.x.org">
<!ENTITY dyndns "http://www.dyndns.org">
<!ENTITY shoutcast "http://www.shoutcast.com/">
<!ENTITY freedomtoaster "http://www.freedomtoaster.org/">
<!-- ubuntu-screenshots TODO --><!ENTITY kubuntu-screenshots "http://shots.osdir.com/slideshows/slideshow.php?release=306&amp;slide=1">
<!ENTITY mozilla "http://www.mozilla.org/">
<!ENTITY mozilla-firefox "http://www.mozilla.org/products/firefox/">
<!ENTITY gnu "http://www.gnu.org/">
<!ENTITY gnu-philosophy "http://www.gnu.org/philosophy/">
<!ENTITY win4lin "http://www.win4lin.com">
<!ENTITY codeweavers "http://www.codeweavers.com">
<!ENTITY kernel "http://www.kernel.org">
<!ENTITY google "http://www.google.com">
<!ENTITY kdelook " http://www.kde-look.org">
<!ENTITY lulu-store "http://www.lulu.com/ubuntu-doc">
<!-- this entity controls the url for addons--><!ENTITY java-download "http://java.sun.com/j2se/1.5.0/download.jsp">
<!ENTITY skype-deb "skype_1.2.0.17-1_i386.deb">
<!ENTITY skype-download "http://www.skype.com/go/getskype-linux-deb">
<!ENTITY scanmodem-gz "scanModem.gz">
<!ENTITY scanmodem-url "http://linmodems.technion.ac.il/packages/scanModem.gz">
<!ENTITY ext2fs-url "http://www.fs-driver.org/index.html">
<!ENTITY mvb-tar "mvb_1.6.tgz">
<!ENTITY mvb-url "http://www.xscd.com/pub/mvb/&mvb-tar;">
<!-- TLDP --><!ENTITY ldp-pre-install-check "http://tldp.org/HOWTO/Pre-Installation-Checklist/">
<!-- LANGUAGES (sorted by two letter code)--><!ENTITY Afar "aa">
<!ENTITY Abkhazian "ab">
<!ENTITY Afrikaans "af">
<!ENTITY Amharic "af">
<!ENTITY Arabic "ar">
<!ENTITY Assamese "as">
<!ENTITY Aymara "ay">
<!ENTITY Azerbaijani "az">
<!ENTITY Bashkir "ba">
<!ENTITY Byelorussian "be">
<!ENTITY Bulgarian "bg">
<!ENTITY Bihari "bh">
<!ENTITY Bislama "bi">
<!ENTITY Bangla "bn">
<!ENTITY Bengali "bn">
<!ENTITY Tibetan "bo">
<!ENTITY Breton "br">
<!ENTITY Catalan "ca">
<!ENTITY Corsican "co">
<!ENTITY Czech "cs">
<!ENTITY Welsh "cy">
<!ENTITY Danish "da">
<!ENTITY German "de">
<!ENTITY Bhutani "dz">
<!ENTITY Greek "el">
<!-- <!ENTITY EnglishAmerican 'en'> --><!ENTITY EnglishAmerican "C">
<!ENTITY Esperanto "eo">
<!ENTITY Spanish "es">
<!ENTITY Estonian "et">
<!ENTITY Basque "eu">
<!ENTITY Persian "fa">
<!ENTITY Finnish "fi">
<!ENTITY Fiji "fj">
<!ENTITY Faeroese "fo">
<!ENTITY French "fr">
<!ENTITY Frisian "fy">
<!ENTITY Irish "ga">
<!ENTITY Gaelic "gd">
<!ENTITY ScotsGaelic "gd">
<!ENTITY Galician "gl">
<!ENTITY Guarani "gn">
<!ENTITY Gujarati "gu">
<!ENTITY Hausa "ha">
<!ENTITY Hindi "hi">
<!ENTITY Croatian "hr">
<!ENTITY Hungarian "hu">
<!ENTITY Armenian "hy">
<!ENTITY Interlingua "ia">
<!ENTITY Interlingue "ie">
<!ENTITY Inupiak "ik">
<!ENTITY Indonesian "in">
<!ENTITY Icelandic "is">
<!ENTITY Italian "it">
<!ENTITY Hebrew "iw">
<!ENTITY Japanese "ja">
<!ENTITY Yiddish "ji">
<!ENTITY Javanese "jw">
<!ENTITY Georgian "ka">
<!ENTITY Kazakh "kk">
<!ENTITY Greenlandic "kl">
<!ENTITY Cambodian "km">
<!ENTITY Kannada "kn">
<!ENTITY Korean "ko">
<!ENTITY Kashmiri "ks">
<!ENTITY Kurdish "ku">
<!ENTITY Kirghiz "ky">
<!ENTITY Latin "la">
<!ENTITY Lingala "ln">
<!ENTITY Laothian "lo">
<!ENTITY Lithuanian "lt">
<!ENTITY Latvian "lv">
<!ENTITY Lettish "lv">
<!ENTITY Malagasy "mg">
<!ENTITY Maori "mi">
<!ENTITY Macedonian "mk">
<!ENTITY Malayalam "ml">
<!ENTITY Mongolian "mn">
<!ENTITY Moldavian "mo">
<!ENTITY Marathi "mr">
<!ENTITY Malay "ms">
<!ENTITY Maltese "mt">
<!ENTITY Burmese "my">
<!ENTITY Nauru "na">
<!ENTITY Nepali "ne">
<!ENTITY Dutch "nl">
<!ENTITY Norwegian "no">
<!ENTITY Occitan "oc">
<!ENTITY Afan "om">
<!ENTITY Oromo "om">
<!ENTITY Oriya "or">
<!ENTITY Punjabi "pa">
<!ENTITY Polish "pl">
<!ENTITY Pushto "ps">
<!ENTITY Pashto "ps">
<!ENTITY Portuguese "pt">
<!ENTITY Quechua "qu">
<!ENTITY Rhaeto-Romance "rm">
<!ENTITY Kirundi "rn">
<!ENTITY Romanian "ro">
<!ENTITY Russian "ru">
<!ENTITY Kinyarwanda "rw">
<!ENTITY Sanskrit "sa">
<!ENTITY Sindhi "sd">
<!ENTITY Sangro "sg">
<!ENTITY Serbo-Croatian "sh">
<!ENTITY Singhalese "si">
<!ENTITY Slovak "sk">
<!ENTITY Slovenian "sl">
<!ENTITY Samoan "sm">
<!ENTITY Shona "sn">
<!ENTITY Somali "so">
<!ENTITY Albanian "sq">
<!ENTITY Serbian "sr">
<!ENTITY Siswati "ss">
<!ENTITY Sesotho "st">
<!ENTITY Sudanese "su">
<!ENTITY Swedish "sv">
<!ENTITY Swahili "sw">
<!ENTITY Tamil "ta">
<!ENTITY Tegulu "te">
<!ENTITY Tajik "tg">
<!ENTITY Thai "th">
<!ENTITY Tigrinya "ti">
<!ENTITY Turkmen "tk">
<!ENTITY Tagalog "tl">
<!ENTITY Setswana "tn">
<!ENTITY Tonga "to">
<!ENTITY Turkish "tr">
<!ENTITY Tsonga "ts">
<!ENTITY Tatar "tt">
<!ENTITY Twi "tw">
<!ENTITY Ukrainian "uk">
<!ENTITY Urdu "ur">
<!ENTITY Uzbek "uz">
<!ENTITY Vietnamese "vi">
<!ENTITY Volapuk "vo">
<!ENTITY Wolof "wo">
<!ENTITY Xhosa "xh">
<!ENTITY Yoruba "yo">
<!ENTITY Chinese "zh">
<!ENTITY Zulu "zu">
<!ENTITY % genericent SYSTEM "../../libs/generic.ent">
<!ENTITY sg-title "Server Guide">
<!ENTITY secguide-title "Security Guide">
<!ENTITY installguide-rev "0.1">
<!ENTITY % cdo-C SYSTEM "../../../libs/cdo-C.ent">
<!-- COMMON DOC OBJECTS --><!ENTITY copyright SYSTEM "../common/C/copyright.xml">
<!ENTITY conventions SYSTEM "../common/C/conventions.xml">
<!ENTITY feedback SYSTEM "../common/C/feedback.xml">
<!ENTITY publisher SYSTEM "../common/C/publisher.xml">
<!ENTITY legalnotice SYSTEM "../common/C/legalnotice.xml">
<!ENTITY disclaimer SYSTEM "../common/C/disclaimer.xml">
<!ENTITY inline-ubuntu-icon SYSTEM "../common/C/inlinemediaobject-ubuntu-icon.xml">
<!ENTITY inline-ubuntu-icon-header SYSTEM "../common/C/inlinemediaobject-ubuntu-icon-header.xml">
<!ENTITY relative-ubuntu-icon SYSTEM "../common/C/mediaobject-relative-ubuntu-icon.xml">
<!ENTITY ubuntu-icon SYSTEM "../common/C/mediaobject-ubuntu-icon.xml">
<!ENTITY gpl SYSTEM "../common/C/gpl.xml">
<!ENTITY fdl SYSTEM "../common/C/fdl.xml">
<!ENTITY cc-by-sa SYSTEM "../common/C/ccbysa.xml">
<!ENTITY % gnome-menus-C SYSTEM "../../../ubuntu/libs/gnome-menus-C.ent">
<!-- MENUS --><!-- Please keep entries alphabetical, it makes them much easier to find & use --><!ENTITY about-me SYSTEM "../menus/C/about-me.xml">
<!ENTITY accessories SYSTEM "../menus/C/accessories.xml">
<!ENTITY acro-read SYSTEM "../menus/C/acro-read.xml">
<!ENTITY administration SYSTEM "../menus/C/administration.xml">
<!ENTITY amule SYSTEM "../menus/C/amule.xml">
<!ENTITY archive-man SYSTEM "../menus/C/archive-man.xml">
<!ENTITY assistive-technology-preferences SYSTEM "../menus/C/assistive-technology-preferences.xml">
<!ENTITY azureus SYSTEM "../menus/C/azureus.xml">
<!ENTITY blender3d SYSTEM "../menus/C/blender3d.xml">
<!ENTITY boot SYSTEM "../menus/C/boot.xml">
<!ENTITY calculator SYSTEM "../menus/C/calculator.xml">
<!ENTITY character-map SYSTEM "../menus/C/character-map.xml">
<!ENTITY desktop-background SYSTEM "../menus/C/desktop-background.xml">
<!ENTITY desktop-preferences SYSTEM "../menus/C/desktop-preferences.xml">
<!ENTITY device-manager SYSTEM "../menus/C/device-manager.xml">
<!ENTITY dictionary SYSTEM "../menus/C/dictionary.xml">
<!ENTITY disks SYSTEM "../menus/C/disks.xml">
<!ENTITY downloader-x SYSTEM "../menus/C/downloader-x.xml">
<!ENTITY file-management SYSTEM "../menus/C/file-management.xml">
<!ENTITY firefox SYSTEM "../menus/C/firefox.xml">
<!ENTITY firestarter-firewall-tool SYSTEM "../menus/C/firestarter-firewall-tool.xml">
<!ENTITY font SYSTEM "../menus/C/font.xml">
<!ENTITY gaim SYSTEM "../menus/C/gaim.xml">
<!ENTITY games SYSTEM "../menus/C/games.xml">
<!ENTITY gftp SYSTEM "../menus/C/gftp.xml">
<!ENTITY gimp SYSTEM "../menus/C/gimp.xml">
<!ENTITY gnome-app-install SYSTEM "../menus/C/gnomeappinstall.xml">
<!ENTITY gnome-config-editor SYSTEM "../menus/C/gnome-config-editor.xml">
<!ENTITY gparted SYSTEM "../menus/C/gparted.xml">
<!ENTITY graphics SYSTEM "../menus/C/graphics.xml">
<!ENTITY gthumb SYSTEM "../menus/C/gthumb.xml">
<!ENTITY home-folder SYSTEM "../menus/C/home-folder.xml">
<!ENTITY inkscape SYSTEM "../menus/C/inkscape.xml">
<!ENTITY internet SYSTEM "../menus/C/internet.xml">
<!ENTITY keyboard SYSTEM "../menus/C/keyboard.xml">
<!ENTITY keyboard-shortcuts SYSTEM "../menus/C/keyboard-shortcuts.xml">
<!ENTITY limewire SYSTEM "../menus/C/limewire.xml">
<!ENTITY login-screen-setup SYSTEM "../menus/C/login-screen-setup.xml">
<!ENTITY logout SYSTEM "../menus/C/logout.xml">
<!ENTITY menu-editor SYSTEM "../menus/C/menu-editor.xml">
<!ENTITY menus-and-toolbars SYSTEM "../menus/C/menus-and-toolbars.xml">
<!ENTITY mouse SYSTEM "../menus/C/mouse.xml">
<!ENTITY multimedia-systems-selector SYSTEM "../menus/C/multimedia-systems-selector.xml">
<!ENTITY network-proxy SYSTEM "../menus/C/network-proxy.xml">
<!ENTITY networking SYSTEM "../menus/C/networking.xml">
<!ENTITY nvu SYSTEM "../menus/C/nvu.xml">
<!ENTITY open-office SYSTEM "../menus/C/open-office.xml">
<!ENTITY palmos-devices SYSTEM "../menus/C/palmos-devices.xml">
<!ENTITY preferred-applications SYSTEM "../menus/C/preferred-applications.xml">
<!ENTITY printing SYSTEM "../menus/C/printing.xml">
<!ENTITY qtparted SYSTEM "../menus/C/qtparted.xml">
<!ENTITY remote-desktop SYSTEM "../menus/C/remote-desktop.xml">
<!ENTITY removable-drives-and-media SYSTEM "../menus/C/removable-drives-and-media.xml">
<!ENTITY realplayer SYSTEM "../menus/C/realplayer.xml">
<!ENTITY rhythmbox SYSTEM "../menus/C/rhythmbox.xml">
<!ENTITY route-planner SYSTEM "../menus/C/route-planner.xml">
<!ENTITY screen-resolution SYSTEM "../menus/C/screen-resolution.xml">
<!ENTITY screensaver SYSTEM "../menus/C/screensaver.xml">
<!ENTITY scribus SYSTEM "../menus/C/scribus.xml">
<!ENTITY services SYSTEM "../menus/C/services.xml">
<!ENTITY sessions SYSTEM "../menus/C/sessions.xml">
<!ENTITY shared-folders SYSTEM "../menus/C/shared-folders.xml">
<!ENTITY skype SYSTEM "../menus/C/skype.xml">
<!ENTITY software-properties SYSTEM "../menus/C/software-properties.xml">
<!ENTITY sound SYSTEM "../menus/C/sound.xml">
<!ENTITY soundandvideo SYSTEM "../menus/C/soundandvideo.xml">
<!ENTITY synaptic SYSTEM "../menus/C/synaptic.xml">
<!ENTITY systemtools SYSTEM "../menus/C/systemtools.xml">
<!ENTITY terminal SYSTEM "../menus/C/terminal.xml">
<!ENTITY text-editor SYSTEM "../menus/C/text-editor.xml">
<!ENTITY theme SYSTEM "../menus/C/theme.xml">
<!ENTITY time-date SYSTEM "../menus/C/time-date.xml">
<!ENTITY totem SYSTEM "../menus/C/totem.xml">
<!ENTITY ubuntu-update-manager SYSTEM "../menus/C/ubuntu-update-manager.xml">
<!ENTITY users SYSTEM "../menus/C/users.xml">
<!ENTITY users-groups SYSTEM "../menus/C/users-groups.xml">
<!ENTITY windows SYSTEM "../menus/C/windows.xml">
<!ENTITY xchat-gnome SYSTEM "../menus/C/xchat-gnome.xml">
<!ENTITY xine SYSTEM "../menus/C/xine.xml">
<!ENTITY xmms SYSTEM "../menus/C/xmms.xml">
<!ENTITY % xinclude SYSTEM "../../../libs/xinclude.mod">
<!ELEMENT xi:include (xi:fallback)?>
<!ATTLIST xi:include xmlns:xi CDATA #FIXED "http://www.w3.org/2001/XInclude">
<!ATTLIST xi:include href CDATA #REQUIRED>
<!ATTLIST xi:include parse (xml | text) "xml">
<!ATTLIST xi:include xpointer CDATA #IMPLIED>
<!ATTLIST xi:include encoding CDATA #IMPLIED>
<!ATTLIST xi:include accept CDATA #IMPLIED>
<!ATTLIST xi:include accept-charset CDATA #IMPLIED>
<!ATTLIST xi:include accept-language CDATA #IMPLIED>
<!ELEMENT xi:fallback ANY>
<!ATTLIST xi:fallback xmlns:xi CDATA #FIXED "http://www.w3.org/2001/XInclude">
<!ENTITY % local.preface.class "| xi:include">
<!ENTITY % local.part.class "| xi:include">
<!ENTITY % local.chapter.class "| xi:include">
<!ENTITY % local.divcomponent.mix "| xi:include">
<!ENTITY % local.para.char.mix "| xi:include">
<!ENTITY % local.info.class "| xi:include">
<!ENTITY % local.common.attrib "xmlns:xi            CDATA       #FIXED       'http://www.w3.org/2001/XInclude'">
<!ENTITY language "&EnglishAmerican;">
]>
<chapter id="networking" status="complete">
	<title>Работа в сети</title>
  <para>Компьютерные сети состоят из двух и более устройств, таких как компьютерные системы, принтеры, и сопутствующее оборудование, объединеных кабельными или беспроводными соединениями с целью разделения и распределения информации среди подключенных устройств.</para>
  <para>Данный раздел руководства по серверу Ubuntu содержит общие сведения и специфическую информацию относительно работы в сети, включая обзор сетевых концепций и подробное рассмотрение популярных сетевых протоколов и серверных приложений.</para>
	<sect1 id="network-configuration" status="complete">
		<title>Настройка сети</title>
          <para>Ubuntu поставляется с несолькими графическими инструментами для настройки сетевых устройств. Этот документ рассчитан на продвинутых пользователей и фокусируется на управлении сетью с помощью командной строки.</para>
      <sect2 id="ethernet" status="complete">
        <title>Ethernet</title> 
          <para>Большая часть настроек ethernet сконцентрирована в одном файле: <filename>/etc/network/interfaces</filename>. Если у вас нет сетевых устройств, тогда только loopback-интерфейс будет представлен в этом файле, и файл будет выглядеть примерно вот так: <screen>#Этот файл описывает сетевые устройства присутствующие в системе
# и способы их активации. Для более подробной информации см. interfaces(5).

# The loopback interface
auto lo
iface lo inet loopback
address 127.0.0.1
netmask 255.0.0.0</screen> Если в вашей стстеме одно ethernet-устройство, которое получает настроечные данные с сервера DHCP, и оно должно подключаться автоматически при загрузке системы, то для его настройки понадобится всего лишь две строчки дополнительно: <screen>auto eth0
iface eth0 inet dhcp boot</screen> Первая строка говорит о том, что устройство eth0 должно включатся автоматически при загрузке. Вторая строка определяет, что интерфейс (<quote>iface</quote>) eth0 должен работать в пространстве адресов IPv4 (замените <quote>inet</quote> на <quote>inet6</quote> для устройств с адресами IPv6) и получает настроечные данные с сервера DHCP. Подразумевая, что ваша сеть и сервер DHCP настроены и работают правильно, настройки сети данного компьютера  не требуют дальнейшей настройки для работы в сети. Сервер DHCP предоставит адрес основного шлюза (реализованного с помощью команды <application>route</application>), IP-адрес устройства (реализованного с помощью команды <application>ifconfig</application>) и адреса DNS серверов, используемых в сети (реализовано в файле <filename>/etc/resolv.conf</filename>)</para>
		<para>Для настройки вашего устройства ethernet на использование статического IP-адреса и собственных настроек, необходимо иметь больше информации. Допустим, вы хотите присвоить IP-адрес 192.168.0.2 устройству eth1, со стандартной маской сети 255.255.255.0. IP-адрес вашего основного шлюза 192.168.0.1. Тогда ваш файл <filename>/etc/network/interfaces</filename> будет подобен следующему:<screen>iface eth1 inet static
	address 192.168.0.2
	netmask 255.255.255.0
	gateway 192.168.0.1</screen> В этом случае вам также необходимо определить вручную ваши серверы DNS в файле <filename>/etc/resolv.conf</filename>, который будет выглядеть примерно так: which should look something like this: <screen>search mydomain.com
nameserver 192.168.0.1
nameserver 4.2.2.2</screen> Директива <emphasis role="italics">search</emphasis> будет добавлять mydomain.com к запросам имени хоста при попытках разрешить имя в вашей сети. Например, если домен вашей сети mydomain.com и вы попытаетесь послать эхо-запрос хосту <quote>mybox</quote>, запрос DNS на разрешение имен будет модифицирован к виду <quote>mybox.mydomain.com</quote>. Инструкции <emphasis role="italics">nameserver</emphasis> определяют серверы DNS, используемые для разрешения имен хостов в IP-адреса. Если вы используете собственный сервер имен, укажите его здесь. В противном случае, запросите у вашего провайдера услуг Интернет (Internet Service Provider, ISP) адреса основного и вспомогательного серверов DNS, и опишите их в файле <filename>/etc/resolv.conf</filename> как показано выше.</para>
		<para>Существует большое количество возможных вариантов настроек сети, включая модемные интерфейсы PPP, работу в сети по протоколу IPv6, VPN устройства и т.п. Более полная информация и описание поддерживаемых возможностей дано в руководстве <application>man 5 interfaces</application>. Помните, что файл <filename>/etc/network/interfaces</filename> используется скриптами <application>ifup</application>/<application>ifdown</application> в для предоставления схемы настройек более высокого уровня, чем может использоваться в других дистрибутивах Линукс, а также, что традиционные низкоуровневые утилиты такие как <application>ifconfig</application>, <application>route</application> и <application>dhclient</application> также доступны вам для специально подобранных настроек.</para>
      </sect2>
      <sect2 id="managing-dns-entries" status="complete">
          <title>Управление записями DNS</title>
            <para>Данный раздел объясняет как настроить использование существующих серверов имен (name server) при разрешении IP-адресов в имена хостов и обратно. Здесь не объясняется, как настроить систему для работы в качестве сервера имен.</para>
            <para>Для управления списком DNS, вы можете добавлять, изменять или удалять имена DNS в файле <filename>/etc/resolv.conf</filename>. Содержимое <ulink url="../sample/resolv.conf">файла-примера</ulink> представлено ниже:</para>
<programlisting>
search com
nameserver 204.11.126.131
nameserver 64.125.134.133
nameserver 64.125.134.132
nameserver 208.185.179.218
</programlisting>
            
            <para>Ключевое слово <application>search</application> определяет строку, которая будет добавляться к неполным именам хостов. В нашем примере это строка <application>com</application>. То есть, если мы выполним комманду: <command>ping ubuntu</command>, она будет интерпретирована как  <command>ping ubuntu.com</command>.</para> 

            <para>Ключевое слово <application>nameserver</application> определяет IP-адрес сервера имен. Этот адрес будет использован, при разрешении заданного IP-адреса или имени хоста. Данный файл может содержать несколько записей с описанием серверов имен. Серверы имен будут использоваться сетевыми запросами в той же последовательности, как они указаны в файле.</para>

            <warning>
            <para>Если сервера имен DNS доставляются автоматически через DHCP или PPPOE (от вашего ISP). не добавляйте записи для серверов имен в этот файл. Он будет обновлен автоматически.</para>
            </warning>

        </sect2>
        <sect2 id="managing-hosts" status="complete">
          <title>Управление хостами</title>
            <para>Для управления хостами, вы можете добавлять, изменять, удалять хосты в файле <filename>/etc/hosts</filename>. Этот файл содержит IP-адреса и соответствующие им имена хостов. Когда ваша система пытается разрешить название хоста в IP-адрес, сначала происходит обращение к файлу <filename>/etc/hosts</filename> и лишь потом используются серверы имен. Если IP-адрес содержится в файле <filename>/etc/hosts</filename>, серверы имен не используются. Такое поведение может быть изменено настройками в файле <filename>/etc/nsswitch.conf</filename>, на ваш собственный риск.</para>

            <para>Если в вашей сети есть компьютеры, чьи IP-адреса не прописаны в DNS, мы рекомендуем вам добавить их в файл <filename>/etc/hosts</filename>.</para>
        </sect2>
    </sect1>
	<sect1 id="tcpip" status="complete">
		<title>TCP/IP</title>
          <para>Протокол контроля передачи данных и Интернет протокол (The Transmission Control Protocol and Internet Protoco - TCP/IP) - это стандартный набор протоколов, разработанных в конце 70-х годов управлением перспективного планирования оборонных научно-исследовательских работ (DARPA) в качестве средства коммуникации между различными типами компьютеров и компьютерных сетей. Так как сеть Интернет построена на стеке протоколов TCP/IP, они представляют самый популярный набор сетевых протоколов на Земле.</para>
      <sect2 id="tcpip-introduction" status="complete">
        <title>Введение в TCP/IP</title> 
          <para>Две компоненты протокола TCP/IP имеют дело с различными аспектами компьютерных сетей. <emphasis>Интернет протокол</emphasis> (Internet Protocol), "IP" в TCP/IP - это протокол без организации соединения, который обеспечивает лишь пересылку сетевых пакетов, используя <emphasis role="italics">IP датаграммы</emphasis> в качестве единицы представления сетевой информации. IP датаграмма состоит из заголовка, за которым следует тело сообщения. <emphasis>Протокол управления передачей</emphasis>(Transmission Control Protocol), TCP в TCP/IP, обеспечивает хостам сети возможности устанавливать соединения, которые могут быть использованы для обмена потоками данных. TCP обеспечивает гарантированную доставку данных между соединенными системами, а также то, что эти данные доставляются на принимающий хост в том же самом порядке, в котором они были отправлены с другого хоста.</para>
          </sect2>
        <sect2 id="tcpip-configuration" status="complete">
          <title>Настройка TCP/IP</title>
            <para>Настройка протокола TCP/IP состоит из нескольких элементов, которые должны быть указаны в соответствующих файлах конфигураций, или получены с помощью дополнительных служб таких как сервер протокола динамической настройки хостов (Dynamic Host Configuration Protocol, DHCP), который, в свою очередь, может быть настроен для автоматического предоставления правильных настроек TCP/IP клиентам сети. Следующим параметрам настройки должны быть указаны правильные значения, чтобы обеспечить нормальную работу вашей системы Ubuntu в сети.</para>
            <para>Обычные элементы настроек TCP/IP и их назначение таковы: <itemizedlist>
               <listitem>
                  <para><emphasis role="bold">IP адрес</emphasis>. IP адрес - это уникальная идентификационная строка, представленная в виде четырёх десятичных чисел в диапазоне от нуля (0) до двухсот пятидесяти пяти (255), разделённых точками, каждое из четырёх чисел представляет восемь (8) бит адреса, полная длина которого тридцать два (32) бита. Этот формат называют <emphasis>dotted quad notation (четырехкомпонентная система обозначений адресов с точками)</emphasis>.</para>
               </listitem>
               <listitem>
                  <para><emphasis role="bold">Маска сети (Netmask)</emphasis> Маска подсети (или просто, <emphasis>netmask</emphasis>) - это локальная битовая маска, или наборы флагов, отделяющая часть IP-адреса, значимую для сети, от битов, значимых для <emphasis>подсети (subnetwork)</emphasis>. Например, в сети класса C, стандартная маска сети определена как 255.255.255.0, она маскирует первые три байта IP адреса и позволяет последнему байту IP адреса оставаться доступным для обозначения хостов в подсети.</para>
               </listitem>
               <listitem>
                  <para><emphasis role="bold">Адрес сети (Network Address)</emphasis> Адрес сети представляется байтами, включающими в себя сетевую часть IP адреса. К примеру,  хост 12.128.1.2 в сети класса А будет использовать 12.0.0.0 в качестве адреса сети, которая использует двенадцать (12) для представления первого байта IP адреса (сетевая часть), тогда как нули (0) в оставшихся трех байт представляют потенциальные значения для хостов. Хосты сети использующие стандартные закрытые и не маршрутизируемые IP адреса, подобные 192.168.1.100, будут, в свою очередь, использовать в качестве адреса сети 192.168.1.0, которая определяет первые три байта 192.168.1 сети класса C и нуль (0) для всех возможных хостов в сети.</para>
               </listitem>
               <listitem>
                  <para><emphasis role="bold">Широковещательный адрес (Broadcast Address)</emphasis> Широковещательный адрес - это такой IP адрес, который позволяет передать сетевые данные одновременно на все хосты заданной подсети, вместо передачи на конкретный хост. Стандартным общим широковещательным адресом для IP сетей является 255.255.255.255, однако этот адрес не может быть использован для передачи широковещательных сообщений всем хостам сети Интернет, так как роутеры блокируют данный адрес. Более приемлем широковещательный адрес соответствующий конкретной подсети. Например, для популярной закрытой сети класса C, 192.168.1.0, широковещательный адрес должен быть настроен как 192.168.1.255. Широковещательные сообщения обычно рассылаются сетевыми протоколами такими, как протокол разрешения адресов (Address Resolution Protocol или ARP) и информационный протокол маршрутизации (Routing Information Protocol, RIP).</para>
               </listitem>
               <listitem>
                  <para><emphasis role="bold">Адрес шлюза (Gateway Address)</emphasis> Адрес шлюза - это IP адрес, через который некоторая сеть, или хост в сети, могут быть доступны. 
Пусть один сетевой хост желает организовать соединение с другим сетевым хостом, но они расположены в разных сетях, в таких случаях должен использоваться  <emphasis>шлюз (gateway)</emphasis>. Во многих случаях адрес шлюза будет совпадать с адресом маршрутизатора той же сети, который, в свою очередь, будет перенаправлять трафик в другие сети или на другие хосты, такие как хосты Интернет. Адресу шлюза должно быть присвоено правильное значение, в противном случае ваша система не сможет связаться ни с одним хостом, находящимся за пределами вашей сети.</para>
               </listitem>
               <listitem>
                  <para><emphasis role="bold">Адрес сервера имен (Nameserver Address)</emphasis> Адреса серверов имен представляют IP адреса систем службы именования доменов (Domain Name Service, DNS), которые разрешают имена хостов сети в IP адреса. Есть три уровня адресов серверов имен, которые могут быть определены в порядке приоритета: <emphasis> основной (Primary)</emphasis> сервер имен, <emphasis>вспомогательный (Secondary)</emphasis> сервер имен, и  <emphasis>третичный (Tertiary)</emphasis> сервер имен. Для того, чтобы ваша система могла разрешать сетевые имена хостов в соответствующие IP адреса, вы должны определить допустимые адреса серверов имен, которые вам разрешено использовать в настройках TCP/IP вашей системы. Во многих случаях эти адреса будут предоставлены вашим провайдером сетевых услуг, но также существуют свободные и открыто доступные сервера имен, которые можно использовать, такие как серверы Level3 (Verizon) с IP адресами от 4.2.2.1 до 4.2.2.6.</para>
                     <tip>
                        <para>IP адрес, маска сети, адрес сети, широковещательный адрес и адрес шлюза обычно определяются с помощью подходящих инструкций в файле <filename>/etc/network/interfaces</filename>. Адреса серверов имен обычно задаются с помощью директивы <emphasis>nameserver</emphasis> в файле <filename>/etc/resolv.conf</filename>. Для получения более полной информации, смотрите страницы системного руководства для <filename>interfaces</filename> или <filename>resolv.conf</filename>, соответственно, введя следующие команды в терминале:</para>
                     </tip>
                    <para>Обратитесь к соответствующей странице системного руководства о <filename>interfaces</filename> с помощью комманды:</para>
                    <para>
<screen>
<command>man interfaces</command>
</screen>
                    </para>
                    <para>Обратитесь к соответствующей странице системного руководства о <filename>resolv.conf</filename> с помощью комманды:</para>
                    <para>
<screen><command>man resolv.conf</command></screen>
                    </para>
               </listitem>
            </itemizedlist></para>
        </sect2>
        <sect2 id="ip-routing" status="complete">
          <title>IP маршрутизация</title>
            <para>IP маршрутизация (роутинг) - это способы определения и нахождения путей доставки сетевых данных в сети TCP/IP. Маршрутизация использует набор <emphasis>таблиц маршрутизации (routing tables)</emphasis> для управления передачей сетевых пакетов данных от отправителя к получателю, зачастую через множество промежуточных сетевых узлов, именуемых <emphasis>маршрутизаторы (routers)</emphasis>. IP маршрутизация - это основной способ определения путей доставки в сети Интернет. Есть две основных формы IP маршрутизации: <emphasis>статическая маршрутизация (Static Routing)</emphasis> и <emphasis>динамическая маршрутизация (Dynamic Routing)</emphasis>.</para>
            <para>Статическая маршрутизация подразумевает ручное добавление IP маршрутов в таблицу маршрутизации системы, обычно это достигается изменением таблиц маршрутизации с помощью команды <application>route</application>. Статическая маршрутизация имеет множество преимуществ над динамической, таких как простота реализации в небольших сетях, предсказуемость (таблицы маршрутизации рассчитываются заранее, следовательно используемые маршруты остаются постоянным от раза к разу), а также малая нагрузка на другие роутеры и сетевые соединения так как не используется протокол динамической маршрутизации. Однако, у статической маршрутизации есть и свои минусы. Например, ее применение ограничено небольшими сетями, к тому же она плохо масштабируется. Более того,  из-за фиксированности маршрутов, статическая маршрутизация не может адаптироваться к перебоям в работе сети и ошибкам, возникающим на маршрутах доставки.</para>
            <para>Динамическая маршрутизация зависит от больших сетей со множеством возможных IP маршрутов от отправителя к получателю и использует специальные протоколы маршрутизации, такие как протокол маршрутной информации (Router Information Protocol, RIP), который поддерживает автоматические изменения в таблицах маршрутизации, что делает возможным саму динамическую маршрутизацию. Динамический роутинг имеет несколько преимуществ над статическим, в числе которых отличная масштабируемость и возможность подстройки при возникновении сбоев и ошибок на маршрутах доставки данных. В дополнение к этому, при этом способе необходимо меньше ручных настройек таблиц маршрутизации, так как роутеры обмениваются друг с другом информацией о существовании других роутеров и доступных маршрутах. Это также устраняет возможность внесения ошибочной информации в таблицы маршрутов из-за ошибок операторов. Однако, динамический способ маршрутизации тоже несовершенен. Из недостатков мы отметим повышенную сложность и дополнительную нагрузку на сети, связанную с передачей информации между роутерами, которые не дают мгновенных преимуществ пользователю, но в то же время используют часть пропускной способности сети.</para>
        </sect2>
        <sect2 id="tcp-and-udp" status="complete">
          <title>TCP и UDP</title>
            <para>TCP - протокол с установлением соединения, предоставляющий коррекцию ошибок и гарантированную доставку данных через так называемое <emphasis>управление передачей (flow control)</emphasis>. Управление передачей определяет когда поток данных необходимо остановить и заново отправить предыдущие пакеты данных вследствие таких проблем как <emphasis>коллизии (collisions)</emphasis>. TCP обычно используется при обмене важной информацией, такой как транзакции баз данных.</para>
            <para>Протокол пользовательских датаграмм (UDP - User Datagram Protocol), с другой стороны, является протоколом <emphasis>без установления соединения</emphasis>, который редко используется для передачи важных данных, поскольку в нем отсутствует управление передачей или другие способы гарантированной доставкой данных. UDP обычно используется в приложениях для передачи потокового аудио или видео, в которых он является быстрее TCP из-за отсутствия коррекции ошибок и управления передачей, и где потеря нескольких пакетов не является катастрофичной.</para>
        </sect2>
        <sect2 id="icmp" status="complete">
          <title>ICMP</title>
            <para>Протокол управляющих сообщений сети Интернет (Internet Control Messaging Protocol, ICMP) - это расширение Интернет протокола (IP), определенное в документе RFC#792 (Request For Comments), поддерживающее сетевые пакеты, содержащие управляющие и информационные сообщения, а также сообщения об ошибках. ICMP используется сетевыми приложениями, например, утилитой <application>ping</application>, с помощью которой можно определить доступность сетевого хоста или устройства. Например, сообщения об ошибках, возвращаемых ICMP, которые полезны как хостам в сети, так и устройствам типа маршрутизаторов,  включают в себя <emphasis>адресат недоступен (Destination Unreachable)</emphasis> и <emphasis>превышено время ожидания (Time Exceeded)</emphasis>.</para>
        </sect2>
        <sect2 id="daemons" status="complete">
          <title>Демоны</title>
            <para>Демоны - это специальные системные программы, которые, как правило, выполняются постоянно в фоновом режиме и ожидают запросов на функции, которые они предоставляют для других программ. Многие демоны направлены на работу с сетью; то есть, большое число демонов, выполняющихся в фоновом режиме в системе Ubuntu могут предоставлять сетевую финкциональность. В качестве примера таких сетевых демонов можно привести <emphasis>Hyper Text Transport Protocol Daemon</emphasis> (httpd), который предоставляет функции веб-сервера, <emphasis>Secure SHell Daemon</emphasis> (sshd), который предоставляет безопасный удаленный доступ к консоли и возможность передачи файлов и <emphasis>Internet Message Access Protocol Daemon</emphasis> (imapd), который предоставляет службы электронной почты.</para>
        </sect2>
    </sect1>
	<sect1 id="firewall-configuration" status="help">
		<title>Настройка межсетевого экрана (брандмауера)</title>
          <para>Ядро Linux включает подсистему <emphasis>Netfilter</emphasis>, которая используется для регулирования сетевого траффика, входящего на или проходящего через вашу систему. Все современные средства межсетевой защиты Linux используют эту систему для фильтрации пакетов.</para>
        <sect2 id="firewall-introduction" status="help">
          <title>Введение в брандмауер</title>
            <para>Система фильтрации пакетов ядра была бы малопригодной для администраторов без пользовательского интерфейса управления ею. Для этого предназначено приложение iptables. Когда пакет достигает вашего сервера, он передается подсистеме Netfilter для приема, обработки или отклонения, в зависимости от правил, передаваемых ей из рабочего пространства пользователя с помощью iptables. Таким образом, если вы хорошо знакомы с iptables - это все, что вам необходимо для управления межсетевым экраном. Однако, существует множество программ предоставляющих интерфейс для упрощения этой задачи.</para>
        </sect2>
        <sect2 id="ip-masquerading" status="help">
          <title>IP маскировка</title>
            <para>Назначение IP маскировки в том, чтобы позволить машинам в вашей сети с частными, не маршрутизируемыми IP-адресами, иметь доступ в Интернет через машину, осуществляющую маскировку. Трафик из вашей сети, предназначенный для Интернета, должен быть обработан так, чтобы ответы могли вернуться обратно на машину, которая организовала запрос. Чтобы это сделать, ядро должно изменить IP-адрес <emphasis>источника</emphasis> в каждом пакете так, чтобы ответы возвращались на сервер, а не на частный IP-адрес (что невозможно в Интернете), с которого сделан запрос. Linux использует <emphasis>Connection Tracking</emphasis> (conntrack) для хранения записи о том, каким машинам принадлежат соединения, и перенаправляет каждый возвращенный пакет соответствующим образом. Таким образом, трафик, покидающий вашу сеть, "замаскирован", как будто исходит от машины, которая выполняет роль шлюза. В документации Microsoft этот процесс упоминается как технология Internet Connection Sharing.</para>
			<para>Этого можно достичь с помощью простого правила в iptables, которое может слегка варьироваться в зависимости от настроек вашей сети: <screen>sudo iptables -t nat -A POSTROUTING -s 192.168.0.0/16 -o ppp0 -j MASQUERADE</screen> В команде, приведенной выше, предполагается, что вы используете закрытое адресное пространство 192.168.0.0/16, а подключение к Интернет обеспечено через устройство ppp0. Данный синтаксис может быть объяснен так: <itemizedlist>
				  <listitem><para>-t nat -- правило, для обращения к таблице NAT</para></listitem>
				  <listitem><para>-A POSTROUTING -- правило, добавлямое (-A) к цепочке POSTROUTING</para></listitem>
				  <listitem><para>-s 192.168.0.0/16 -- правило применяется для трафика, происходящего из обозначенного адресного пространства</para></listitem>
				  <listitem><para>-o ppp0 -- правило применяется к трафику, который планируется направить через определенное сетевое устройство</para></listitem>
				  <listitem><para>-j MASQUERADE -- трафик попадающий под данное правило должен быть перенаправлен "jump" (-j) с маскировкой (MASQUERADE) для обработки, как описано выше</para></listitem>
			  </itemizedlist></para>
			<para>Любая цепочка правил в таблице фильтрации (это основная таблица, где происходит обработка большинства пакетов) имеет в качестве <emphasis>политики (policy)</emphasis> по умолчанию правило ACCEPT (принимать), но если вы создаете межсетевой экран в дополнение к устройству шлюза, вы можете настроить политики на использование правил DROP (пропустить) или REJECT (отклонить), в этом случае (для работы правила, описанного выше) необходимо разрешить прохождение вашего маскированного трафика через цепочку FORWARD (перенаправить): <screen>sudo iptables -A FORWARD -s 192.168.0.0/16 -o ppp0 -j ACCEPT
sudo iptables -A FORWARD -d 192.168.0.0/16 -m state --state ESTABLISHED,RELATED -i ppp0 -j ACCEPT</screen> Эти команды разрешают все соединения из вашей локальной сети в Интернет, а также позволяют всему трафику, относящемуся к этим соединениям, возвращаться на машины их инициировавшие.</para>
        </sect2>
        <sect2 id="firewall-tools" status="help">
          <title>Инструменты</title>
            <para>Есть большое количество программ, которые помогут вам полностью настроить брандмауэр без необходимости подробного изучения iptables. У тех, кто предпочитает графические оболочки, довольно популярно простое в использовании приложение <application>Firestarter</application>, а также <application>fwbuilder</application> - очень мощный инструмент настройки, который покажется знакомым администраторам, пользовавшимся коммерческими брандмауэрами типа Checkpoint FireWall-1. Для предпочитающих работу в командной строке и простые текстовые файлы настроек, <application>Shorewall</application> - подходящее и мощное решение, которое поможет настроить межсетевой экран любой сложности для любой сети. Если же ваша сеть достаточно простая, или у вас вообще нет локальной сети, утилита <application>ipkungfu</application> предоставит вам работающий "из коробки" (без необходимости настпройки) брандмауэр, а также даст возможность легко настроить более сложный межсетевой экран с помощью редактирования простых и хорошо документированных файлов настроек. Еще одна интересная программа - <application>fireflier</application>, которая разработана как межсетевой экран для настольного ПК. Она состоит из сервера (fireflier-server) и графического клиента на ваш выбор (GTK или QT). Во время работы она ведет себя похоже на многие интерактивные брандмауэры для Windows.</para>
        </sect2>
        <sect2 id="firewall-logs" status="help">
          <title>Журналирование</title>
            <para>Сообщения в журнале брандмаура необходимы для определения атак, поиска проблем в правилах, а также для определения необычной активности в вашей сети. Чтобы активировать журналирование вам необходимо включить соответствующие правила в конфигурацию вашего межсетевого экрана, более того, эти правила должны быть заданы ранее всех применяемых завершающих правил (это правила с целью, которая определяет дальнейшую судьбу пакета, такие как ACCEPT, DROP или REJECT). Например, <screen>sudo iptables -A INPUT -m state --state NEW -p tcp --dport 80 -j LOG --log-prefix "NEW_HTTP_CONN: "</screen> Тогда запрос на порт 80 с локальной машины будет генерировать сообщение в dmesg подобное следующему:</para>
			<para>
			  <programlisting>[4304885.870000] NEW_HTTP_CONN: IN=lo OUT= MAC=00:00:00:00:00:00:00:00:00:00:00:00:08:00 SRC=127.0.0.1 DST=127.0.0.1 LEN=60 TOS=0x00 PREC=0x00 TTL=64 ID=58288 DF PROTO=TCP SPT=53981 DPT=80 WINDOW=32767 RES=0x00 SYN URGP=0</programlisting>
			</para>
			<para>Сообщение выше, будет также записано в файлы <filename>/var/log/messages</filename>, <filename>/var/log/syslog</filename>, и <filename>/var/log/kern.log</filename>. Данное поведение можно изменить соответствующими настройками в файле <filename>/etc/syslog.conf</filename> или с помощью установки и настройки <application>ulogd</application> (при этом нужно использовать цель ULOG вместо LOG). Демон <application>ulogd</application> - это сервер пользовательского рабочего пространства, который ожидает от ядра инструкций для записи в журнал, специфичных для брандмауэров, и может сохранять их в любой файл на ваш вкус, и даже в базу данных <application>PostgreSQL</application> или <application>MySQL</application>. Разобраться в журнале брандмауэра может помочь использование утилит анализа журналов событий, таких как <application>fwanalog</application>, <application> fwlogwatch</application>, или <application>lire</application>.</para>
        </sect2>
    </sect1>
	<sect1 id="openssh-server" status="complete">
		<title>Сервер OpenSSH</title>
      <sect2 id="openssh-introduction">
        <title>Введение</title> 
           <para>Данный раздел документации сервера <phrase>Ubuntu</phrase> представляет мощный набор инструментов <emphasis>OpenSSH</emphasis>, используемый для удаленного управления компьютеров в сети и передачи данных между ними. Вы также узнаете о некоторых возможностях настройки серверного приложения OpenSSH, а также как изменять эти настройки на вашей Ubuntu системе.</para>
          <para>OpenSSH - это свободно доступная версия инструментов, поддерживающих протокол Secure Shell (SSH), для удаленного управления компьютером или передачи файлов между компьютерами. Традиционно использовавшиеся для этих целей инструменты, такие как <application>telnet</application> или <application>rcp</application>, не являются безопасными: они передают пароль пользователя простым текстом во время их использования. OpenSSH предоставляет серверного демона и клиентские программы для обеспечения безопасных и зашифрованных операций удаленного управления и передачи файлов, эффективно заменяя при этом устаревшие программы.</para>
          <para>Серверная компонента OpenSSH, <application>sshd</application>, постоянно ожидает клиентских соединений от любых клиентских программ. Когда приходит запрос на соединение, <application>sshd</application> устанавливает правильный тип соединения, в зависимости от типа подключаемого клиента. Например, если удаленный компьютер пытается подключится с помощью приложния-клиента  <application>ssh</application>, сервер OpenSSH, после авторизации, запустит сеанс удаленного управления. Если же удаленный пользователь подключается с помощью <application>scp</application>, серверный демон OpenSSH, после авторизации, организует безопасное копирование файлов между сервером и клиентом. OpenSSH может использовать множество методов авторизации, включая обычный пароль, использование открытого ключа, и сертификаты <application>Kerberos</application>.</para>
          </sect2>
        <sect2 id="openssh-installation">
        <title>Установка</title>
        <para>Установка клиента и сервера OpenSSH проста. Для установки OpenSSH клиента на вашу систему Ubuntu, используйте следующую команду в строке терминала:</para>
           <para>
<screen>
<command>sudo apt-get install openssh-client</command>
</screen>
           </para>
        <para>Для установки сервера OpenSSH и всех необходимых файлов выполните эту команду в строке терминала:</para>
           <para>
<screen>
<command>sudo apt-get install openssh-server</command>
</screen>
           </para>
        </sect2>
        <sect2 id="openssh-configuration">
          <title>Конфигурация</title>
            <para>Вы можете настроить режим работы по умолчанию серверного приложения OpenSSH, <application>sshd</application>, редактируя файл <filename>/etc/ssh/sshd_config</filename>. Для получения информации об инструкциях настройки, используемых в этом файле, вы можете просмотреть соответствующее руководство с помощью следующей команды, выполенной в командной строке терминала:</para>
               <para>
<screen>
<command>man sshd_config</command>
</screen>
               </para>
            <para>В конфигурационном файле демона <application>sshd</application> существует множество директив, управляющих такими вещами, как настройки соединения и режимы аутентификации. Ниже перечислены примеры директив, значения которых могут быть изменены в файле <filename>/etc/ssh/ssh_config</filename>.</para>
            <tip>
               <para>Перед внесением изменений в файл настроек, вы должны скопировать оригинальный файл и защитить его от записи. Таким образом, вы будите иметь оригинальные настройки для справки или повторного использования, при необходимости.</para>
               <para>Создайте копию файла <filename>/etc/ssh/sshd_config</filename> и защитите его от записи, используя следующую команду, введенную в командной строке терминала:</para>
	    </tip>
               <para>
<screen>
<command>sudo cp /etc/ssh/sshd_config /etc/ssh/sshd_config.original</command>
<command>sudo chmod a-w /etc/ssh/sshd_config.original</command>
</screen>
               </para> 
            <para>Ниже даны примеры инструкций настройки, которые вы можете изменять:</para>
           <itemizedlist>
               <listitem>
               <para>Чтобы настроить демона OpenSSH в режим прослушивания TCP порта 2222, вместо стандартного TCP порта 22, измените директиву Port таким образом:</para>
               <para>Port 2222</para>
               </listitem>
	<listitem>
            <para>Чтобы <application>sshd</application> позволял возможность процедуры идентификации пользователя с использованием данных, основанных на открытом ключе, просто добавьте или измените следующую строку:</para>
               <para>PubkeyAuthentication yes</para>
            <para>в файле <filename>/etc/ssh/sshd_config</filename>, если такая строка уже присутствует в файле, удостоверьтесь, что она раскомментирована.</para>
            </listitem>
            <listitem>
             <para>Чтобы ваш сервер OpenSSH отображал содержимое файла <filename>/etc/issue.net</filename> в качестве сообщения перед логином, просто добавьте или измените следующую строку:</para>
               <para>Banner /etc/issue.net</para>
               <para>в файле <filename>/etc/ssh/sshd_config</filename>.</para>
             </listitem>
             </itemizedlist>
	    <para>После внесения изменений в файл <filename>/etc/ssh/sshd_config</filename>, сохраните его и, чтобы изменения вступили в силу, перезапустите серверное приложение <application>sshd</application>, выполнив следующую команду в терминале:</para>
               <para>
<screen>
<command>sudo /etc/init.d/ssh restart</command>
</screen>
               </para>
		<warning>
                           <para>Доступно большое количество инструкций для <application>sshd</application>, чтобы настроить поведение серверного приложения под ваши нужды. Однако, мы вас предупреждаем: если единственный для вас метод доступа к серверу - с помощью <application>ssh</application> и вы допустите ошибку при настройке <application>sshd</application> с помощью файла <filename>/etc/ssh/sshd_config</filename>, может случится, что вы заблокируете себе доступ к серверу после его перезапуска или что сервер <application>sshd</application> откажется запуститься из-за неправильной директивы настройки, то есть будьте предельно внимательны при редактировании этого файла на удаленном сервере.</para>
                        </warning>
        </sect2>
   <sect2 id="openssh-references" status="complete">
      <title>Ссылки</title>
      <para>
      <ulink url="http://www.openssh.org/">Сайт OpenSSH</ulink>
      </para>
      <para>
      <ulink url="https://wiki.ubuntu.com/AdvancedOpenSSH">Страница Wiki о расширенных настройках OpenSSH</ulink>
      </para>
   </sect2>
     </sect1>
	<sect1 id="ftp-server" status="complete">
        <title>FTP Сервер</title> 
            <para>Протокол передачи файлов (FTP) является TCP-протоколом для передачи файлов между компьютерами. FTP работает по модели клиент-сервер. Серверная часть называется <emphasis>FTP демоном</emphasis>. Он постоянно прослушивает FTP-запросы от удаленных клиентов. Когда запрос получен, он авторизует клиента и устанавливает соединение. На протяжении всей сессии FTP-сервер выполняет любые команды посланные FTP-клиентом.</para>
            <para>Доступ к FTP серверу может быть установлен двумя путями:</para>
            <itemizedlist spacing="compact">
                <listitem>
                    <para>Анонимный</para>
                </listitem>
                <listitem>
                    <para>Авторизованный</para>
                </listitem>
            </itemizedlist>
            <para>В Анонимном режиме, удаленные клиенты могут получить доступ к FTP серверу, используя стандартную учетную запись 'anonymous' или 'ftp' и передававя в качестве пароля свой адрес электронной почты. В Авторизованном режиме пользователь должен иметь учетную запись и пароль. Пользователи получают доступ к файлам и каталогам FTP сервера в соответствии с правами учетной записи, использованной при входе на FTP сервер. Общей нормой является то, что FTP сервер скрывает свою корневую директорию и подставляет вместо нее домашнюю директорию FTP, что позволяет скрыть остальную часть файловой системы от удаленных клиентов.</para>
            <sect2 id="vsftpd-ftp-server-installation" status="complete">
                <title>vsftpd - Установка FTP сервера</title>
                    <para>vsftpd - это FTP демон доступный в Ubuntu. Он прост в установке, настройке и использовании. Для установки <application>vsftpd</application> необходимо выполнить следующую команду: <screen> <command>sudo apt-get install vsftpd</command> </screen></para>

                </sect2>
            <sect2 id="vsftpd-ftp-server-configuration" status="complete">
                <title>vsftpd - Настройка FTP сервера</title>
                <para>Чтобы сменить настройки сервера, с заданных по умолчанию, вы можете отредактировать файл настроек vsftpd: <filename>/etc/vsftpd.conf</filename>. По умолчанию, позволен только анонимный доступ на FTP. Если вы хотите отключить эту опцию, вам нужно изменить строку <programlisting>
anonymous_enable=YES
</programlisting> на <programlisting>
anonymous_enable=NO
</programlisting> По умолчанию, локальным пользователям отключена возможность входа на FTP сервер. Чтобы изменить это, раскомментируйте следующую строку: <programlisting>
#local_enable=YES
</programlisting> Также настройки по-умолчанию, позволяют пользователям только скачивать файлы с FTP сервера, но не разрешают загружать файлы на сервер. Для изменения этого поведения, раскомментируйте строку <programlisting>
#write_enable=YES
</programlisting> Точно так же анонимным пользователям запрещена загрузка файлов на FTP сервер. Для изменения этой настройки раскомментируйте эту строку: <programlisting>
#anon_upload_enable=YES
</programlisting> В конфигурационном файле содержится большое количество параметров настройки. Информация о каждом параметре также дана в файле конфигураци. В качестве альтернативы, для получения более полной информации о каждом параметре, вы можете обратиться к документации: <command>man 5 vsftpd.conf</command>.</para>
                <para>Как только вы настроили <application>vsftpd</application>, вы можете запустить демона. Для запуска воспользуйтесь следующей командой: <screen> <command>sudo /etc/init.d/vsftpd start</command> </screen></para>
				<note><para>Примите во внимание, что настройки, прописанные по умолчанию в файле конфигурации, выбраны именно такими из соображений безопасности. Каждое изменение, из описанных выше, делает вашу систему немного более уязвимой. Вносите эти изменения только если вы действительно нуждаетесь в них.</para></note>
                </sect2>
    </sect1>
	<sect1 id="network-file-system" status="complete">
		<title>Сетевая файловая система (Network File System, NFS)</title>
          <para>NFS позволяет системе предоставлять в общий сетевой доступ каталоги и файлы. Посредством NFS, пользователи и программы могут получать доступ к файлам на удаленных машинах так же легко, как будто это файлы на их локальном компьютере.</para>

          <para>Некоторые из преимуществ, которые может обеспечить NFS:</para>

          <itemizedlist>
          <listitem>
      <para>Рабочие станции используют меньше локального дискового пространства, так как общие данные могут содержаться на одной машине и оставаться доступными по сети для всех остальных.</para>
          </listitem>
          <listitem>
      <para>У пользователей отпадает необходимость в использовании отдельных домашних каталогов на каждой машине, подключенной в сеть. Можно разместить домашние каталоги пользователей на сервере NFS и сделать их доступными с помощью сети.</para>
          </listitem>
          <listitem>

      <para>Устройства хранения информации такие как флоппи дисководы, приводы компакт дисков и USB приводы могут использоваться другими машинами в сети. Это может уменьшить общее число накопителелей со сменными носителями в сети</para>
          </listitem>
          </itemizedlist>

      <sect2 id="nfs-installation" status="complete">
        <title>Установка</title>
      
          <para>Введите следующую команду в терминале для установки NFS сервера:</para>
          <para>
<screen>
<command>sudo apt-get install nfs-kernel-server</command>
</screen>
          </para>
      </sect2>
      <sect2 id="nfs-configuration" status="complete">
        <title>Конфигурация</title>
          <para>Вы можете настроить директории для экспорта добавляя их в файл <filename>/etc/exports</filename>. Например:</para>
          <para>
<screen>
/ubuntu *(ro,sync,no_root_squash)
/home *(rw,sync,no_root_squash)
</screen>
          </para>

          <para>Вы можете заменить * одним из форматов записи имени хоста. Сделайте объявление хоста настолько необычными, насколько это возможно, чтобы нежеланные системы не могли получить доступа к монтированию NFS</para>

          <para>Для запуска NFS сервера выполните следующую команду в терминале:</para>
          <para>
<screen>
<command>sudo /etc/init.d/nfs-kernel-server start</command>
</screen>
          </para>
      </sect2>
      <sect2 id="nfs-client-configuration" status="complete">
        <title>Настройка NFS клиента</title>
          <para>Используйте команду <application>mount</application> для монтирования NFS директории открытой на другой машине. Наберите в терминале команду, схожую со следующим примером.</para>
          <para>
<screen>
<command>sudo mount example.hostname.com:/ubuntu /local/ubuntu</command>
</screen>
</para>
      <warning>
      <para>Точка монтирования <filename>/local/ubuntu</filename> должна существовать. В директории <filename>/local/ubuntu</filename> не должно быть никаких файлов или под-директорий.</para>
      </warning>

      <para>Другой способ монтирования NFS ресурса, открытого на другой машине состоит в добавлении соответствующей строчки в файл <filename>/etc/fstab</filename>. Строчка должна содержать имя хоста NFS сервера, название каталога, открытого на сервере, и название директории на локальной машине, куда будет монтироваться NFS каталог.</para>

      <para>Общий синтаксис строки файла <filename>/etc/fstab</filename> следующий:</para>
      
      <para>
<programlisting>
example.hostname.com:/ubuntu /local/ubuntu nfs rsize=8192,wsize=8192,timeo=14,intr
</programlisting>
      </para>
      </sect2>
      <sect2 id="nfs-references" status="complete">
        <title>Ссылки</title>
				<para><ulink url="http://nfs.sourceforge.net/">Линукс NFS FAQ</ulink></para>
      </sect2>
    </sect1>
	<sect1 id="dhcp" status="complete">
		<title>Протокол динамической настройки хостов (Dynamic Host Configuration Protocol, DHCP)</title>
            <para>DHCP (протокол динамической конфигурации узла) это сетевой сервис, позволяющий компьютерам автоматически получать настройки от сервера, в отличие от ручной настройки каждого компьютера в сети. Компьютеры, настроенные в качестве DHCP клиентов не контролируют параметры, которые они получают от DHCP сервера, и настройка прозрачна для пользователя компьютера.</para>
            <para>В самом общем случае, настройки предоставляемые сервером DHCP его клиентам включают в себя:</para>
            <itemizedlist spacing="compact">
                <listitem>
                    <para>IP адрес и маску сети</para>
                </listitem>
                <listitem>
                    <para>DNS</para>
                </listitem>
                <listitem>
                    <para>WINS</para>
                </listitem>
            </itemizedlist>
            <para>Кроме того, DHCP сервер может дополнительно предоставить параметры настроек такие как:</para>
            <itemizedlist spacing="compact">
                <listitem>
                    <para>Имя хоста</para>
                </listitem>
                <listitem>
                    <para>Имя домена</para>
                </listitem>
                <listitem>
                    <para>Шлюз по умолчанию</para>
                </listitem>
                <listitem>
                    <para>Сервер синхронизации времени</para>
                </listitem>
                <listitem>
                    <para>Сервер печати</para>
                </listitem>
            </itemizedlist>
            <para>Преимущество использования DHCP сервера в сети состоит в том, что изменения настроек сети, например, изменение адреса DNS сервера, должны выполняться только на DHCP сервере. Все остальные компьютеры в сети будут автоматически перенастроены DHCP клиентами во время следующего опроса ими DHCP сервера. Дополнительное преимущество состоит в том, что становится проще подключать в сеть новые компьютеры, так как отпадает необходимость проверять доступность IP адреса. Также сокращается количество конфликтов при назначении IP адресов.</para>
            <para>DHCP сервер может предоставлять конфигурацию двумя способами:</para>
            <variablelist>
                <varlistentry>
                    <term>MAC-адрес</term>
                    <listitem>
                        <para>Данный метод включает в себя использование DHCP для определения уникальных аппаратных адресов каждой сетевой карты, подключенной в сеть, а затем постоянным предоставлением одной и той же конфигурации каждый раз, когда DHCP клиент делает запрос к серверу, используя данное сетевое устройство.</para>
                    </listitem>
                </varlistentry>
                <varlistentry>
                    <term>Пул адресов</term>
                    <listitem>
                        <para>Данный метод подразумевает определение пула (иногда используется термин диапазон) IP адресов, из которых динамически формируются параметры конфигурации для каждого DHCP клиента, обслуживание которых ведется по принципу: первый пришел - первый обслужен. Если DHCP клиент не работает в сети в течение некоторого определенного периода времени, то присвоенная ему конфигурация утрачивает силу и ее адрес возвращается назад в пул адресов для использования другими DHCP клиентами.</para>
                    </listitem>
                </varlistentry>
            </variablelist>
            <para>В поставку Ubuntu входят как DHCP сервер, так и клиент. <application>dhcpd</application> (DHCP демон) - это сервер. Клиент, поставляемый с Ubuntu называется <application>dhclient</application> и должен быть установлен на всех компьютерах, которые необходимо настраивать автоматически. Обе программы легко устанавить и настроить. Они автоматически запускаются в процессе загрузки системы.</para>
      <sect2 id="dhcp-installation" status="complete">
        <title>Установка</title>
          <para>Для установки <application>dhcpd</application> введите следующую команду в терминале:</para>
          <para>
<screen>
<command>sudo apt-get install dhcpd</command>
</screen>
          </para>
          <para>Вы увидите следующий вывод, объясняющий, что делать далее:</para>
          <screen>
↵
Пожулуйста, отметьте, если вы устанавливаете DHCP сервер в первый↵
раз, то его необходимо настроить. Пожалуйста, остановите (/etc/init.d/dhcp↵
stop) DHCP сервер, отредактируйте /etc/dhcpd.conf согласно вашим потребностям↵
в определенной конфигурации, и перезапустите DHCP сервер↵
(/etc/init.d/dhcp start).↵
↵
Необходимо также отредактировать /etc/default/dhcp для указания интерфейсов,↵
которые должен использовать dhcpd. По умолчанию используется eth0.↵
↵
Примечание: сообщения dhcpd's отправляются в syslog. Все диагностические↵
сообщения необходимо смотреть там.↵
↵
Запуск DHCP сервера: Ошибка запуска dhcpd  - для диагностики проверьте syslog.  </screen>
      </sect2>
      <sect2 id="dhcp-configuration" status="complete">
        <title>Конфигурация</title>
            <para>Сообщение об ошибке, с которым заканчивается процесс установки может быть немного непонятным, но приведенные ниже шаги помогут вам настроить службу</para>
            <para>Наиболее вероятно, вы захотите установить случайную раздачу IP адресов. Это может быть выполнено сдледующим образом:</para>
            <screen>
# Sample /etc/dhcpd.conf↵
# (ваши комментарии тут)
default-lease-time 600;
max-lease-time 7200;
option subnet-mask 255.255.255.0;
option broadcast-address 192.168.1.255;
option routers 192.168.1.254;
option domain-name-servers 192.168.1.1, 192.168.1.2;
option domain-name "mydomain.org";

subnet 192.168.1.0 netmask 255.255.255.0 {
range 192.168.1.10 192.168.1.100;
range 192.168.1.150 192.168.1.200;
} </screen>
            <para>Это приведет к тому, что DHCP сервер присвоит клиенту IP адрес из диапазона 192.168.1.10-192.168.1.100 или 192.168.1.150-192.168.1.200. Ip адрес назначается на 600 секунд, если клиент не запросит конкретных временных рамок. В противном случае максимальное (разрешенное) время аренды IP адреса будет 7200 секунд. Сервер также "посоветует" клиенту использовать 255.255.255.0 в качестве маски подсети, 192.168.1.255 в качестве широковещательного адреса, 192.168.1.254 в качестве маршрутизатора/шлюза, а также 192.168.1.1 и 192.168.1.2 в качестве DNS серверов.</para>
            <para>Если вам необходимо задать WINS сервер для вашего Windows клиента, вам нужно включить опцию netbios-name-servers, например</para>
            <screen>
option netbios-name-servers 192.168.1.1; </screen>
            <para>Настройки конфигурации Dhcpd берутся из DHCP мини-HOWTO, которое можно найти <ulink url="http://www.tldp.org/HOWTO/DHCP/index.html">здесь</ulink>.</para>
      </sect2>
      <sect2 id="dhcp-references" status="complete">
        <title>Ссылки</title>
          <para>
            <ulink url="http://www.dhcp-handbook.com/dhcp_faq.html">DHCP FAQ</ulink>
          </para>
      </sect2>
    </sect1>
	<sect1 id="dns" status="complete">
		<title>Служба именования доменов (DNS)</title>
            <para>Служба именования доменов (Domain Name Service, DNS) - это сервис сети Интернет, который устанавливает соответствие между IP адресами и полностью определенными именами доменов (FQDN). DNS частично снимает необходимость в запоминании IP адресов. Компьютеры, которые обслуживают DNS называют <emphasis>серверы имен (name servers)</emphasis>. Ubuntu поставляется с приложением <application>BIND</application> (Berkley Internet Naming Daemon - демон именования для Интернет родом из Беркли), самой распространенной программой, используемой для поддержки сервера имен на GNU/Linux.</para>
            <!-- things to do: IPv6-->
      <sect2 id="dns-installation" status="complete">
        <title>Установка</title>
          <para>Для установки <application>bind</application> наберите в терминале следующую команду:</para>
          <para>
<screen>
<command>sudo apt-get install bind</command>
</screen>
          </para>
      </sect2>
      <sect2 id="dns-configuration" status="complete">
        <title>Конфигурация</title>
          <para>Конфигурационные файлы DNS храняться в директории <filename>/etc/bind</filename>. Главный файл конфигурации <filename>/etc/bind/named.conf</filename>. Ниже представлено содержимое конфигурационного файла по умолчанию:</para>

          <para>
<programlisting>
// Это первоначальный файл конфигурации BIND DNS сервера.
//
// Пожалуйста прочтите /usr/share/doc/bind/README.Debian для получения информации о 
// структуре файлов конфигурации BIND в Debian для BIND версий 8.2.1 
// и выше, *ДО ТОГО* как вы измените этот файл конфигурации.
//

include "/etc/bind/named.conf.options";

// уменьшение многословности лога при неподконтрольных нам проблемах
logging {
	category lame-servers { null; };
	category cname { null; };
};

// загрузить в сервер знания о корневых серверах
zone "." {
        type hint;
        file "/etc/bind/db.root";
};

// быть авторитетным для передней и обратной зон локального хоста, и для
// широковещательных зон как для RFC 1912

zone "localhost" {
        type master;
        file "/etc/bind/db.local";
};

zone "127.in-addr.arpa" {
        type master;
        file "/etc/bind/db.127";
};

zone "0.in-addr.arpa" {
        type master;
        file "/etc/bind/db.0";
};

zone "255.in-addr.arpa" {
        type master;
        file "/etc/bind/db.255";
};

// добавьте сюда определения местных зон
include "/etc/bind/named.conf.local";
</programlisting>
          </para>

          <para>Директива <application>include</application> определяет имя файла, который содержит опции DNS. Директива <application>directory</application> в файле опций говорит DNS где искать эти файлы. Все файлы, которые использует BIND будут относиться к этой директории.</para>

          <para>Файл <filename>/etc/bind/db.root</filename> описывает мировые корневые серверы имен. Серверы со временем изменяются и должны поддерживаться сечас и потом.</para>

          <para>Раздел <application>zone</application> определяет основной сервер, этот раздел сохранен в файле упомянутом напротив тэга file. Файл каждой зоны содержит 3 ресурсных записи (resource records, RRs): SOA RR, NS RR и PTR RR. SOA - сокращение для Start of Authority. "@" - это специальное обозначение, подразумевающее происхождение. NS - это сервер имен (Name Server RR). PTR - указатель доменного имени (Domain Name Pointer). Для запуска DNS сервера, выполните следующую команду в строке терминала:</para>
           <para>
<screen>
<command>sudo /etc/init.d/bind start</command>
</screen>
           </para>
          <para>Для получения детальной информации вы можете обратиться к документации, упоминаемой в разделе ссылок.</para>
      </sect2>
      <sect2 id="dns-references" status="complete">
        <title>Ссылки</title>
          <para>
            <ulink url="http://www.tldp.org/HOWTO/DNS-HOWTO.html">DNS HOWTO</ulink>
          </para>
      </sect2>
    </sect1>
	<sect1 id="cups" status="complete">
		<title>CUPS - сервер печати</title>
          <para><emphasis role="bold">Common UNIX Printing System</emphasis> (CUPS) - это основной механизм печати в Ubuntu и представления служб печати. Данная система печати представляет собой свободно распространямый, переносимый уровень управления печатью, который уже стал новым стандартом печати во многих дистрибутивах GNU/Linux.</para>
          <para>CUPS управляет заданиями на печать и очередями, а также обеспечивает печать по сети, используя стандартный протокол печати Интернет, (Internet Printing Protocol, IPP). В то же время он поддерживает большое количество принтеров, от матричных до лазерных. CUPS также поддерживает описание принтеров PostScript (PostScript Printer Description, PPD) и авто-определение сетевых принтеров, и имеет простой web-ориентированный инструмент настройки и администрирования.</para>
      <sect2 id="cups-installation" status="complete">
        <title>Установка</title>
          <para>Для установки CUPS на ваш компьютер с Ubuntu, просто воспользуйтесь командой <application>sudo</application> вместе с <application>apt-get</application>, передав названия пакетов в качестве первого аргумента. Полная инсталляция CUPS имеет очень много зависимостей, но все они могут быть указаны в одной команде. Введите следующую команду в строке терминала для установки CUPS:</para>
          <para>
<screen>
<command>sudo apt-get install cupsys cupsys-client</command>
</screen>
          </para>
          <para>После аутентификации с помощью вашего пароля, пакеты должны бфть скачаны и установлены без ошибок. По завершении установки, сервер CUPS будет автоматически запущен. Для разрешения проблем, вы можете просматривать лог ошибок сервера CUPS в файле журналирования ошибок: <filename>/var/log/cups/error_log</filename>. Если лог-файл не дает достаточной информации для определения источника вашей проблемы, количество информации записываемой в лог CUPS может быть увеличено изменением директивы <emphasis role="bold">LogLevel</emphasis> в файле настроек (смотри далее) на "debug" или даже "debug2", которая сохраняет все, в отличие от параметра по умолчанию "info". Если вы сделаете эти изменения, не забудьте исправить все обратно, после того, как решите вашу проблему, для предотвращения значительного увеличения размера лог-файла.</para>
      </sect2>
      <sect2 id="cups-configuration" status="complete">
        <title>Конфигурация</title>
          <para>Поведение сервера CUPS настраивается с помощью инструкций, содержащихся в файле <filename>/etc/cups/cupsd.conf</filename>. Файл настроек CUPS использует такой же синтаксис, как и основной файл настроек HTTP сервера Apache, то есть пользователи знакомые с модификацией файлов настроек Apache должны спокойно ориентироваться при работе с настройками CUPS. Примеры некоторых настроек, которые вы возможно захотите изменить с самого начала, будут представлены здесь.</para>
          <tip>
               <para>Перед изменением конфигурационного файла, сделайте копию с оригинала и защитите ее от записи, чтобы использовать файл оригинальных настроек в качестве справки, а также иметь возможность использовать его снова.</para>
               <para>Скопируйте файл <filename>/etc/cups/cupsd.conf</filename> и защитите его от записи с помощью следующих команд, выполненных в командной строке терминала:</para>
               </tip>
               <para>
<screen>
<command>sudo cp /etc/cups/cupsd.conf /etc/cups/cupsd.conf.original</command>
<command>sudo chmod a-w /etc/cups/cupsd.conf.original</command>
</screen>
               </para>
          <itemizedlist>
                <listitem>
                <para><emphasis role="bold">ServerAdmin</emphasis>: Чтобы настроить адрес электронной почты желаемого администратора CUPS сервера, просто отредактируйте файл конфигурации <filename>/etc/cups/cupsd.conf</filename>  в вашем текстовом редакторе, и соответственно измените строку <emphasis role="italics">ServerAdmin</emphasis>. Например, если вы Администратор CUPS сервера, и ваш адрес электронной почты 'bjoy@somebigco.com', тогда измените строку ServerAdmin таким образом:</para>
                <para>
<screen>
ServerAdmin bjoy@somebigco.com
</screen>
                </para>
                </listitem>
          </itemizedlist>
                <para>Если вам необходимо большее количество примеров директив файла конфигурации CUPS сервера, обратитесь к соответствующей странице руководства системы введя следующую команду в терминале:</para>
               <para>
<screen>
<command>man cupsd.conf</command>
</screen>
               </para>
                               <note>
                <para>Если вы внесете изменения в файл конфигурации <filename>/etc/cups/cupsd.conf</filename>, вам будет необходимо перезапустить CUPS сервер, выполнив следующую команду в терминале:</para>
                </note>
                <para>
<screen>
<command>sudo /etc/init.d/cupsys restart</command>
</screen>
                </para>
	<para>Некоторые дополнительные настройки CUPS сервера выполняются в файле <filename>/etc/cups/cups.d/ports.conf</filename>:</para>
          <itemizedlist>
                <listitem>
                <para><emphasis role="bold">Listen</emphasis>: в Ubuntu по умолчанию,  сервер CUPS прослушивает интерфейс обратной связи по IP адресу <emphasis>127.0.0.1</emphasis>. Для настройки сервера CUPS на прослушивание IP адреса конкретного сетевого адаптера, вам нужно указать имя хоста, или IP адрес, или пару IP адрес/порт через дополнение к инструкции Listen. Например, если ваш CUPS сервер находится в вашей локальной сети по IP адресу <emphasis role="italics">192.168.10.250</emphasis> и вы хотите сделать его доступным для других систем в этой подсети, вам нужно отредактировать файл <filename>/etc/cups/cups.d/ports.conf</filename>, добавив инструкцию Listen следующим образом:</para>
                <para>
<screen>
Listen 127.0.0.1:631 # существующий Listen интерфейса loopback 
Listen /var/run/cups/cups.sock # существующий Listen для сокетов
Listen 192.168.10.250:631 # Listen на интерфейсе LAN, Порт 631 (IPP)
</screen>
                </para>
                <para>В вышеприведенном примере вы можете закомментировать или удалить ссылки на loopback адрес (127.0.0.1), если желаете, чтобы <application>cupsd </application> вместо этого интерфейса, использовал только ethernet интерфейсы локальной сети, Для разрешения использования всех интерфейсов, включая loopback, к которым привязано определенное имя хоста, создав запись Listen для имени хоста <emphasis>socrates</emphasis> следующим образом:</para>
                <para>
<screen>
Listen socrates:631 # Listen на всех интерфейсах хоста по имени 'socrates'
</screen>
                </para> 
				<para>или опустив директиву Listen и используя вместо нее <emphasis>Port</emphasis> как в</para>
<para>
<screen>
Порт 631 # Прослушивание на порту 631 на всех интерфейсах
</screen>
</para>
                </listitem>
	</itemizedlist>

      </sect2>
      <sect2 id="cups-references" status="complete">
        <title>Ссылки</title>
        <para>
        <ulink url="http://www.cups.org/">Сайт CUPS</ulink>
        </para>
        </sect2>
    </sect1>
	<sect1 id="httpd" status="complete">
		<title>HTTPD - веб сервер Apache2</title>
      <para>Apache - самый используемый веб-сервер на системах GNU/Linux. Веб-сервера используются для предоставления запрошенных клиентскими компьютерами веб-страниц. Пользователи обычно просматривают вэб-страницы используя веб-браузеры <application>Firefox</application>, <application>Opera</application>, или <application>Mozilla</application>.</para>
      <para>Пользователи вводят ссылку (Uniform Resource Locator (URL)), чтобы указать серверу на запрашиваемый ресурс, используя FQDN (Fully Qualified Domain Name (полное доменное имя)). Например, чтобы увидеть домашнюю страницу сайта <ulink url="http://www.ubuntu.com">Ubuntu</ulink> пользователь должен ввести только FQDN. Для запроса информации о странице <ulink url="http://www.ubuntu.com/support/supportoptions/paidsupport">paid support</ulink> пользователю надо ввести FQDN и полный путь до страницы.</para>
      <para>Самые используемые протоколы для передачи веб страниц - это HTTP (Hyper Text Transfer Protocol). Протокол, подобный HTTP, через Безопасное соединение (HTTPS) и протокол передачи файлов (FTP).</para>
      <para>Веб сервер Apache часто используется в связке с движком баз данных <application>MySQL</application>, скриптовым языком <application>PHP</application> и другими популярными скриптовыми языками - <application>Python</application> и <application>Perl</application>. Данная конфигурация обозначена аббривиатурой LAMP (Linux, Apache, MySQL, Perl/Python/PHP) и формирует собой мощный набор инструментов для разработки и использования веб-приложений.</para>
<sect2 id="http-installation" status="complete">
  <title>Установка</title>
                  <para>Веб сервер Apache2 доступен в Ubuntu Linux. Чтобы установить Apache2:</para>
          <procedure><step>
                	  <para>Введите в терминале следующие команды:<screen>
<command>sudo apt-get install apache2</command>
</screen></para>
			</step>
	    </procedure>
      </sect2>
      <sect2 id="http-configuration" status="complete">
        <title>Конфигурация</title>
          <para>Apache настроен посредством <emphasis>директив</emphasis>, записанных обычным текстом в конфигурационные файлы. Осовной конфигурационный файл назван <filename>apache2.conf</filename>. Кроме того, другие конфигурационные файлы могут добавляться посредством директивы <emphasis>Include</emphasis>; в ней могут использоваться обобщающие символы для подключения нескольких файлов. Любая директива может быть расположена в любом и конфигурационных файлов. Изменения в основном конфигурационном файле принимаются сервером Apache2 только после запуска/перезапуска. На работающий сервер изменения не подействуют.</para>

          <para>Сервер так же читает файл, содержащий mime-тип документа; имя файла устанавливается директивой <emphasis>TypesConfig</emphasis> и по умолчанию оно <filename>mime.types</filename> .</para>

          <para>Файл конфигурации Apache2 по умолчанию: <filename>/etc/apache2/apache2.conf</filename> . Вы можете редактировать его для настройки сервера Apache2. Вы можете настроить номер порта, расположение файлов страниц, модули, лог файлы, виртуальные хости и так далее.</para>
        <sect3 id="http-basic-settings" status="complete">
          <title>Остновные настройки</title>
            <para>Данный раздел описывает основные параметры настройки сервера Apache2. За дополнительной информацией обращайтесь по адресу <ulink url="http://httpd.apache.org/docs/2.0/">Apache2 Documentation</ulink>.</para>

             <itemizedlist>

             <listitem><para>Apache 2 поставляется с удобной для пользователя конфигурацией виртуальных хостов. То есть, сконфигурирован один виртуальный хост по умолчанию (с использованием директивы <emphasis>VirtualHost</emphasis>), настройку которого можно модифицировать или использовать как есть или использовать шаблоны для добавления других виртуальных хостов, если у вас несколько сайтов. Если ничего не менять, указанный по умолчанию виртуальный хост будет отображаться как ваш сайт по умолчанию. Так же этот сайт увидят пользователи, запросы которых не совпадут ни с одним значением директивы <emphasis>ServerName</emphasis> в конфигурационном файле виртуальных хостов. Для изменения виртуального хоста по умолчанию отредактируйте файл <filename>/etc/apache2/sites-available/default</filename>. Если вы хотите настроить новый виртуальный хост или сайт, скопируйте этот файл в тот же каталог с выбранным вами именем. Например: <command>sudo cp /etc/apache2/sites-available/default /etc/apache2/sites-available/mynewsite</command> Отредактируйте новый файл для настройки нового сайта используя директивы, описанные ниже</para></listitem>

             <listitem><para>Директива <emphasis>ServerAdmin</emphasis> определяет почтовый адрес администратора сервера, который будет отображаться пользователям. Значение по умолчанию - webmaster@localhost. Данная переменная должна быть изменена на доступный для вас почтовый адрес (если вы - администратор сервера). Если на вашем сайте возникнут проблемы, Apache2 отобразит ошибку, в которой так же будет отображен указанный почтовый адрес с целью сообщения проблемы. Вы можете найти эту директиву в вашем файле конфигурации сайтов, в каталоге /etc/apache2/sites-available.</para></listitem>

             <listitem><para>Директива <emphasis>Listen</emphasis> определяет порт и, при указании, IP адрес, на котором должен работать Apache2. Если IP адрес не указан, Apache2 работает на всех IP адресах, которые доступны компьютеру, на котором он запущен. Значение директивы по умолчанию - порт 80. Вы можете изменить значение на 127.0.0.1:80 чтобы Apache2 работал только на локальном интерфейсе и не был доступен из вне. Так же можно указать, например, значение 81 для изменения порта сервера или оставить все как есть для работы по умолчанию. Данная директива может быть найдена и изменена в ее собственном файле <filename>/etc/apache2/ports.conf</filename></para></listitem>

			 <listitem><para>Директива <emphasis>ServerName</emphasis> указывает, на какое FQDN (полное доменное имя) должен отвечать ваш сайт. В виртуальном хосте по умолчанию директива ServerName не указана, потому он будет отвечать на любые запросы, несоответствующие директивам ServerName в других виртуальных хостах. Если вы только что приобрели домен ubunturocks.com и хотите его разместить на своем сервере, вам потребуется установить значение директивы ServerName ubunturocks.com в вашем файле конфигурации виртуального хоста. Добавьте эту директиву к новому виртуальному хосту, файл которого вы создали раньше (<filename>/etc/apache2/sites-available/mynewsite</filename>). <tip><para>Возможно вы захотите, чтобы ваш сайт отвечал запросу www.ubunturocks.com, потому что многие пользователели привыкли использовать приставку www. Воспользуйтесь директивой <emphasis>ServerAlias</emphasis> для реализации этой задачи. Вы так же можете воспользоваться обощающим символом (*). Например, при указании значения директивы вида <command>ServerAlias *.ubunturocks.com</command> ваш сайт будет отвечать на любые запросы, оканчивающиеся строкой .ubunturocks.com.</para></tip></para></listitem>

			 <listitem><para>Директива <emphasis>DocumentRoot</emphasis> определяет, где Apache должен искать файлы сайта. Значение по умолчанию /var/www. По этому пути сайта нету, но если вы раскомментируете директиву <emphasis>RedirectMatch</emphasis> в файле <filename>/etc/apache2/apache2.conf</filename>, запросы будут перенаправлены по адресу /var/www/apache2-default, где расположен сайт Apache2 по умолчанию. Измените значение этой директивы в вашем файле конфигурации виртуального хоста и не забудьте создать каталог, если он еще не создан.</para></listitem>
            </itemizedlist>

			<tip><para>Apache2 <emphasis role="bold"> не</emphasis> просматривает каталог /etc/apache2/sites-available. Символические ссылки в /etc/apache2/sites-enabled указывают на доступные сайты. Воспользуйтесь утилитой a2ensite (Apache2 Enable Site) для создания символических ссылок. Например: <command>sudo a2ensite mynewsite</command>, где mynewsite - имя файла конфигурации <filename> /etc/apache2/sites-available/mynewsite</filename>. Так же используйте эту утилиту для выключения активных конфигурации.</para></tip>

        </sect3>
        <sect3 id="default-settings" status="complete">
          <title>Настройки по умолчанию</title>
            <para>Данный раздел описывает настройку параметров Apache2 по умолчанию. Они необходимы, например, если вы добавляете виртуальный хост, настраиваете нужные директивы, а некоторые не указываете. В этом случае используются значения по умолчанию.</para>

            <itemizedlist>
            <listitem>
            <para><emphasis>DirectoryIndex</emphasis> указывает на страницу (файл) по умолчанию, которую отдает пользователю сервер при запросе индекса каталога, указывая слеш (/) в конце имени каталога.</para>

             <para>Например, когда пользователь запрашивает страницу http://www.example.com/this_directory/, он получит ее в случае существования указанного в DirectoryIndex файла, иначе будет отображен сгенерированный сервером каталог, если указана опция Indexes или будет отбражена страница "Доступ запрещен". Сервер попытается найти один из файлов, указанных в директиве DirectoryIndex, просмативая ее значения по порядку и вернет первый существующий файл из списка. Если ни один из перечисленных в директиве файлов не будет найден и для этого каталога будет установлена опция Indexes, сервер сгенерирует список файлов и подкаталогов в html-формате. Значение по умолчанию, которое можно найти в файле <filename>/etc/apache2/apache2.conf</filename> " index.html index.cgi index.pl index.php index.xhtml". Вообщем, если Apache2 найдет в запрошенном каталоге один из файлов, указанных в списке, он его отобразит.</para>
            </listitem>

            <listitem>
            <para>Директива <emphasis>ErrorDocument</emphasis> дает возможность указать файл, который Apache будет возвращать в случае сообщений об ошибке. Например, если пользователь запросит несуществующую страницу, будет вызвана ошибка 404 и Apache вернет файл, указанный в конфигурации по умолчанию - <filename>/usr/share/apache2/error/HTTP_NOT_FOUND.html.var </filename>. Файл не находится внутри каталога, указанного в директиве DocumentRoot, но директива Alias, описанная в файле <filename>/etc/apache2/apache2.conf</filename> перенаправляет запросы к каталогу /error в каталог /usr/share/apache2/error/. Чтобы просмотреть список директив ErrorDocument, воспользуйтесь командой <command>grep ErrorDocument /etc/apache2/apache2.conf</command></para>
            </listitem>


            <listitem>
            <para>По умолчанию, лог запрашиваемых документов сервер пишет в файл /var/log/apache2/access.log. Вы можете указать для каждого виртуального хоста отдельный файл для логов посредством директивы <emphasis>CustomLog</emphasis> или же заменить значение по умолчанию, указанное в файле <filename> /etc/apache2/apache2.conf</filename>. Вы так же можете указать файл для записи ошибок посредством директивы <emphasis>ErrorLog</emphasis> (по умолчанию - <filename>/var/log/apache2/error.log</filename> ). Он записывается отдельно от логов запрашиваемых документов, что упрощает поиск ошибок при каких либо проблемах с сервером Apache2. Так же вы можете указать директивы <emphasis>LogLevel</emphasis> и <emphasis>LogFormat</emphasis> (смотрите файл <filename> /etc/apache2/apache2.conf</filename> для определения настроек по умолчанию).</para>
            </listitem>

            <listitem>
            <para>Некоторые опции указаны для каждого каталога, а не для сервера, опции директив. Строфа Directory заключена в xml-подобные тэги: <screen><command>&lt;Directory /var/www/mynewsite&gt;
				...
			&lt;/Directory&gt;</command></screen> Директива Options внутри строфы Directory может принимать одно или несколько перечисленных далее значений, разделенных пробелом:</para>
            <itemizedlist spacing="compact">
                <listitem>
                    <para>emphasis role="bold"&gt;ExecCGI</para>
                </listitem>
                <listitem>
                    <para><emphasis role="bold">Includes</emphasis> - Разрешить server-side includes. Server-side includes разрешают подключать к html-файлам другие файлы. Это не общая опция. Для дополнительной информации посетите страницу <ulink url="http://httpd.apache.org/docs/2.0/howto/ssi.html">the Apache2 SSI Howto</ulink>.</para>
                </listitem>
                <listitem>
                    <para><emphasis role="bold">IncludesNOEXEC</emphasis> - Разрешить server-side includes, но выключить команды #exec и #include в CGI скриптах.</para>
                </listitem>
                <listitem>
                    <para><emphasis role="bold">Indexes</emphasis> - Отображать список содержимого каталога, если ни одного файла из списка DirectoryIndex не обнаружена в запрошенном каталоге. <caution><para>Из соображений безопасности обычно это не устанавливается и естественно не должно устанавливаться для каталога DocumentRoot. Включайте эту опцию только на отдельные каталоги и только в том случае, если уверены, что хотите, чтобы пользователи могли просматривать все содержимое каталога.</para></caution></para>
                </listitem>
                <listitem>
                    <para><emphasis role="bold">Multiview</emphasis> - Поддержка content-negotiated multiviews; опция выключена по умолчанию в целях безопасности. Посетите <ulink url="http://httpd.apache.org/docs/2.0/mod/mod_negotiation.html#multiviews">Apache2 документацию по этой опции</ulink>.</para>
                </listitem>
                <listitem>
                    <para><emphasis role="bold">SymLinksIfOwnerMatch</emphasis> - Переходить по символическим ссылкам только в случае, если у файла/каталога и ссылки один и тот же владелец.</para>
                </listitem>
            </itemizedlist>

            </listitem>
            </itemizedlist>
        </sect3>
        <sect3 id="virtual-hosts-settings" status="complete">

          <title>Параметры виртуальных хостов</title>
            <para>Виртуальные хосты позволяют вам запускать разные сервера для разных ip-адресов, разные имена хостов или разные порты на одних и тех же компьютерах. Например, вы можете запустить сайты http://www.example.com и http://www.anotherexample.com на одном и том же веб-сервере используя виртуальные хоста. Эта опция соответствует директиве &lt;VirtualHost&gt; для виртуального хоста по умолчанию и виртуального хоста по IP-адресу. Она соответствует директиве &lt;NameVirtualHost&gt; для базированного на имени виртуального хоста.</para>

			<para>Директивы, установленные для виртуального хоста применяются только для  того виртуального хоста, для которого они установлены. Если директива установлена в основной конфигурации сервера и не установлена для конкретного виртуального хоста, то будет использовано значение по умолчанию. Например, вы можете указать адрес электронной почты вебмастера в основном конфигурационном файле сервера и не указывать его для каждого виртуального хоста.</para>
 
 			<para>Установите директиву DocumentRoot для определения каталога, содержащего корневой документ (такой как index.html) для виртуального хоста. Значение директивы DocumentRoot по умолчанию - <filename>/var/www</filename>.</para>

			<para>Директива ServerAdmin внутри строфы VirtualHost - это почтовый адрес, отображаемый внизу на страницах ошибок, если вы выбрали отображение подписей страниц с почтовым адресом на страницах ошибок.</para>

        </sect3>
        <sect3 id="server-settings" status="complete">
          <title>Параметры Сервера</title>
            <para>Данный раздел объясняет, как настроить основные параметры сервера.</para>
                    <para><emphasis role="bold">LockFile</emphasis> - Директива LockFile устанавливает путь к lock-файлу сервера, который используется, если сервер собран с параметрами USE_FCNTL_SERIALIZED_ACCEPT или USE_FLOCK_SERIALIZED_ACCEPT. Он должен располагаться на локальном диске. Значение директивы должно быть оставлено по умолчанию за исключением случая, когда каталог логов находится в разделе NFS. Доступ к файлу должен быть только у суперпользователя (root).</para>

					<para><emphasis role="bold">PidFile</emphasis> - Директива PidFile устанавливает имя файла, в который сервер записывает свой номер поцесса (process ID (pid)). Файл должен читаться только суперпользователем (root). В большинстве случаев следует оставить значение по умолчанию.</para>

<para><emphasis role="bold">User</emphasis> - Директива User определяет userid, под которым сервер отвечает на запросы. Она определяет возможности в доступе для сервера. Любые файлы, недоступные для этого пользователя не будут доступны и для посетителей сайтов. Значение по умолчанию www-data.</para>
            <warning>
            <para>Без полного понимания того, что вы делаете, не устанавливайте директиву User в значение root. Использование суперпользователя (root) как пользователя веб-сервера создаст очень серьезные дыры в безопасности вашего сервера.</para>
            </warning>
 <para>Директива Group по значению сходна с директивой User. Она устанавливает группу, от которой работает веб-сервер. Значение по умолчанию - www-data.</para>

        </sect3>
        <sect3 id="apache-modules" status="complete">
          <title>Модули Apache</title>
              <para>Apache - модульный сервер. Под этим подразумевается, что в основную часть сервера входят только самые базовые функции. Расширеные возможности доступны посредством модулей, которые могут быть загружены в сервер. По умолчанию, базовый набор модулей входит в состав сборки. Если сервер собран с возможностью использования динамически загружаемых модулей, то модули могут собираться отдельно и добавляться в директику LoadModule. Иначе, Apache должен быть пересобран для добавления или удаления каких-либо модулей. В Ubuntu Apache2 собран с поддержкой динамической загрузки модулей. Вы можете устанавливать дополнительные модули Apache2 и использовать их вместе с вашим сервером. Вы можете установить модули Apache2 используя команду <application>apt-get</application>. Например, чтобы установить модуль аутентификации MySQL, вам нужно запустить следующую команду в терминале:</para>
                
                <para>
<screen>
<command>sudo apt-get install libapache2-mod-auth-mysql</command>
</screen>
                </para>
                <para>После установки модуля он будет доступен в каталоге <filename>/etc/apache2/mods-available</filename>. Вы можете использовать команду <application>a2enmod</application> для включения модуля. Вы можете использовать команду <application>a2dismod</application> для выключения модуля. После включения модуля он будет доступен в каталоге <filename>/etc/apache2/mods-enabled</filename>.</para>
        </sect3>
      </sect2>
      <sect2 id="https-configuration" status="complete">
        <title>Конфигурация HTTPS</title>
          <para>Модуль <application>mod_ssl</application> добавляет важную функцию к серверу Apache2 - возможность шифровать передаваемую информацию. Таким образом, когда ваш браузер использует SSL шифрацию, в начале ссылки (Uniform Resource Locator (URL)) используется префикс https:// .</para>

          <para>Модуль <application>mod_ssl</application> доступен в пакете <application>apache2-common</application>. Если данный пакет у вас установлен, вы можете запустить в терминале следующую команду для включения модуля <application>mod_ssl</application>:</para>

          <para>
<screen>
<command>sudo a2enmod ssl</command>
</screen>
          </para>
        <sect3 id="certificates-and-security" status="complete">
          <title>Сертификаты и безопасность</title>
            <para>Для настройки безопасности вашего сервера используйте криптографию с открытым ключем (public key cryptography), чтобы создать пару публичного/частного ключей (public and private key pair). В большинстве случаев, вы посылаете запрос на сертификат, доказательство идентификации вашей компании и оплату в Certificate Authority (CA). CA проверяет ваш запрос на сертификат, вашу идентификацию и затем высылает сертификат для вашего сервера.</para>
             <para>Альтернативный вариант - вы можете создать свой собственный сертификат, подписанный собственоручно. Однако, собственоручно подписанные сертефикаты не могут использоваться на большинстве предприятий. Собственоручно подписанные сертификаты не принимаются браузером автоматически. Пользователям задается вопрос, принимать ли сертификат и создавать ли защищенное соединение.</para>

             <para>Как только у вас будет сертификат (не важно, подписанный в CA или собственоручно), вам нужно установить его на ваш сервер.</para>
        </sect3>
        <sect3 id="types-of-certificates" status="complete">
          <title>Типы сертификатов</title>
            <para>Вам нужен ключ и сертификат для управления вашим безопасным сервером, то есть вам нужно сгенерировать собственно подписанный сертификат или приобрести сертификат подписанный в CA. Подписанный в CA сертификат предоставляет две важные возможности вашему серверу:</para>

            <itemizedlist>
            <listitem>
            <para>Браузеры (обычно) автоматически определяют сертификаты и разрешают безопасные соединения без подтверждения пользователя.</para>
            </listitem>
            <listitem>
            <para>Выданный CA подписанный сертификат является гарантией идентификации организации, предоставляющей веб страницы браузеру.</para>
            </listitem>
            </itemizedlist>

            <para>В большинстве браузеров, поддерживающих SSL, есть список сертификатов CA, который они автоматически принимают. Если у браузера нету в списке сертификата, подписанного CA, браузер задаст вопрос пользователю, устанавливать соединение или нет.</para>
            <para>Вы можете сформировать свой самоподписанный сертификат для вашего безопасного сервера, но надо помить, что самоподписанный сертификат не предоставляет ту же функциональность как сертификат подписанный подписью CA. Самоподписанный сертификат не признается автоматически большинством Веб браузеров, и подобный сертификат не предоставляет никакой гарантии относительно компании, обеспечивающей вебсайт. Сертификат подписанный подписью CA гарантирует оба этих важных критерия для безопасного сервера. Процесс получения сертификата подписанного CA достаточно прост. Далее следует краткий обзор:</para>

            <orderedlist>
            <listitem>
               <para>Создайте пару ключей шифрования, открытый и закрытый</para>
            </listitem>
            <listitem>
                 <para>Создайте запрос сертификата основанный на открытом ключе. Данный запрос содержит в себе информацию о вашем сервере и компании где он размещается.</para>
            </listitem>
            <listitem>
                 <para>Отправьте запрос сертификата вместе с документами подтверждающую вашу личность в CA.
Мы не можем рекомендовать вам, какой тип сертификата выбрать. Ваше решение может основываться на вашем последнем опыте, на опыте ваших друзей и коллег или просто на финансовых факторах</para>

                    <para>Если вы остановились на CA, вам необходимо следовать инструкциям, которые они предоставят для получения их сертификата</para>
            </listitem>
            <listitem>
               <para>Когда CA установит, что вы являетесь тем, за кого себя выдаете, они пришлют вам цифровой сертификат</para>
            </listitem>
            <listitem>
               <para>Установите этот сертификат на свой сервер и начинайте использовать безопасную передачу данных.</para>
            </listitem>
            </orderedlist>

            <para>Получаете вы сертификат от CA или генерируете его собственоручно, первым шагом должно быть создание ключа.</para>
        </sect3>
        <sect3 id="generating-a-csr" status="complete">
          <title>Генерация Certificate Signing Request (CSR)</title>
            <para>Для генерирования Certificate Signing Request (CSR) вам потребуется создать свой собственный ключ. Вы можете запустить описанные далее команды в терминале для создания ключа:</para>

            <para>
<screen>
<command>openssl genrsa -des3 -out server.key 1024</command>
</screen>
            </para>
<programlisting>
Generating RSA private key, 1024 bit long modulus
.....................++++++
.................++++++
unable to write 'random state'
e is 65537 (0x10001)
Enter pass phrase for server.key:
</programlisting>

        <para>Теперь вы можете ввести ваш пароль. Для наилучшей безопасности он должен содержать не менее восьми символов. Минимальная длинна - четыре символа. Пароль должен содержать цифры и/или специальные символы и не являться словом из словаря. Запомните то, что вы введете.</para>

        <para>Повторите пароль для достоверности. После правильного повтора пароля сервер сгенерирует ключ и запишет его в файл <filename>server.key</filename>.</para>

        <warning>
        <para>Вы так же можете запустить защищенный веб сервер без паспорт-пароля. Это удобно потому, что вам не нужно будет вводить пароль каждый раз при запуске защищенного сервера. Но это очень небезопасно.</para>
        </warning>

        <para>В любом случае, вы можете запускать ваш сервер и без паспорт-пароля не указывая параметр -des3 при генерации паспорта или указав следующую команду в терминале:</para>

        <para>
<screen>
<command>openssl rsa -in server.key -out server.key.insecure</command>
</screen>
        </para>
        <para>Запустив вышеуказанную команду сервер сохранит небезопасный ключ в файле <filename>server.key.insecure</filename>. Вы можете использовать этот файл для генерации CSR без паспорт-пароля.</para>

        <para>Для создания CSR, выполните следующую команду в терминале:</para>

        <para>
<screen>
<command>openssl req -new -key server.key -out server.csr</command>
</screen>
        </para>

        <para>Будет выдано приглашение ввести ключевую фразу. Если вы ввели правильную ключевую фразу, вам будет предложено ввести название компании, название сайта, адрес эл. почты и т.д. После того как вы введете эти параметры, ваш CSR будет создан и сохранен в файле <filename>server.csr</filename>. Вы можете отправить данный CSR в CA для обработки. CAN использует данный CSR для выпуска сертификата. С другой стороны вы можете создать самоподписанный сертификат используя этот CSR</para>

        </sect3>
        <sect3 id="creating-a-self-signed-certificate" status="complete">
          <title>Создание сертификата со своей подписью</title>
            <para>Для того, чтобы создать сертификат со своей подписью исполните следующую комманду в терминале:</para>

            <para>
<screen>
<command>openssl x509 -req -days 365 -in server.csr -signkey server.key -out server.crt</command>
</screen>
            </para>

            <para>Вышеприведенная команда предложит ввести ключевую фразу. При вводе правильной ключевой фразы, ваш сертификат будет создан и сохранен в файле <filename>server.crt</filename>.</para>
        <warning>
        <para>Если ваш защищенный сервер будет использован в коммерческих целях, вам скорее всего необходим сертификат подписанный CA. В данном случае не рекомендуется использовать самоподписанный сертификат.</para>
        </warning>
        </sect3>
        <sect3 id="installing-the-certificate" status="complete">
          <title>Установка сертификата</title>

            <para>Вы можете установить файл ключа <filename>server.key</filename> и файл сертификата <filename>server.crt</filename> или сертификат, предоставленный вам CA, следующей командой в терминале:</para>
            <para>
<screen>
<command>sudo cp server.crt /etc/ssl/certs</command>
<command>sudo cp server.key /etc/ssl/private</command>
</screen>
            </para>
            <para>Вы должны добавить следующие четыре строки в файл <filename>/etc/apache2/sites-available/default</filename> или в конфигурационный файл вашего виртуального хоста. Вы должны расположить их в разделе <emphasis>VirtualHost</emphasis>. И они должны идти после строки <emphasis>DocumentRoot</emphasis>:</para>
<programlisting>
SSLEngine on

SSLOptions +FakeBasicAuth +ExportCertData +CompatEnvVars +StrictRequire

SSLCertificateFile /etc/ssl/certs/server.crt
SSLCertificateKeyFile /etc/ssl/private/server.key
</programlisting>
          
            <para>Протокол HTTPS должен быть привязан к порту 443. Вам нужно добавить следующую строку в конфигурационный файл <filename>/etc/apache2/ports.conf</filename> :</para>
<programlisting>
Listen 443
</programlisting>

        </sect3>
        <sect3 id="accessing-the-server" status="complete">
          <title>Доступ к Серверу</title>
            <para>После установки сертификата вам нужно перезапустить сервер. Вы можете перезапустить сервер следующей командой в терминале:</para>
            <para>
<screen>            
<command>sudo /etc/init.d/apache2 restart</command>
</screen>
            </para>
        <note><para>Вам нужно запомнить и вводить паспорт-пароль каждый раз при запуске вашего безопасного сервера.</para></note>

            <para>У вас будет запрошен паспор-пароль. После ввода правильного пароля сервер будет запущен. Вы сможете посетить страницы на безопасном сервере указав ссылку https://your_hostname/url/ в адресной строке браузера.</para>

        </sect3>
      </sect2>
      <sect2 id="http-references" status="complete">
        <title>Ссылки</title>
          <para>
          <ulink url="http://httpd.apache.org/docs/2.0/">Документация Apache2</ulink>
          </para>
          <para>
          <ulink url="http://www.modssl.org/docs/">Документация Mod SSL</ulink>
          </para>
      </sect2>
    </sect1>
	
	<sect1 id="squid" status="complete">
		<title>Прокси-сервер Squid</title>
          <para>Squid - полноценное приложение веб прокси кеш сервера, предоставляющее прокси и кэширование сервисов для HTTP, FTP и других популярных протоколов. Squid может обеспечить кэширование и посредничество SSL запросов и кэширование DNS обзоров; так же выполнять прозрачное кэширование. Squid поддерживает широкий спектр кэширующих протоколов, такие как Internet Cache Protocol (ICP), Hyper Text Caching Protocol (HTCP), Cache Array Routing Protocol (CARP) и Web Cache Coordination Protocol (WCCP).</para>
          <para>Прокси/кеш сервер Squid - великолепное решения для разных задач, в которых требуется использование прокси или кэширования. Его применение варьируется от малых офисов до серьезных многоуровневых сетей, которые предоставляют обширные системы управления доступом и наблюдение за критическими параметрами через Simple Network Management Protocol (SNMP). При выборе компьютера для выделенного сервера под Squid убедитесь, что он оснащен большим количеством оперативной памяти, так как Squid кэширует данные в оперативную память для повышения производительности.</para>
      <sect2 id="squid-installation" status="complete">
        <title>Установка</title>
          <para>В строке терминала введите следующую команду для установки сервера Squid:</para>
          <para>
<screen>
<command>sudo apt-get install squid squid-common</command>
</screen>
          </para>
      </sect2>
      <sect2 id="squid-configuration" status="complete">
        <title>Конфигурация</title>
          <para>Squid настраивается посредством редактирования значений директив в файле <filename>/etc/squid/squid.conf</filename> . Следующие примеры показывают несколько директив, которые могут быть изменены для влияния на поведение Squid сервера. Для более детальной настройки Squid смотрите раздел Справка.</para>
             <tip>
               <para>Перед редактированием конфигурационного файла сделайте копию оригинала с целью востановления каких-либо значений, если это потребуется или просто для справки.</para>
               <para>Скопируйте файл <filename>/etc/squid/squid.conf</filename> и защитите от записи следующей командой:</para>
	     </tip>
               <para>
<screen>
<command>sudo cp /etc/squid/squid.conf /etc/squid/squid.conf.original</command>
<command>sudo chmod a-w /etc/squid/squid.conf.original</command>
</screen>
               </para> 
	        <para>
           <itemizedlist>
               <listitem>
                  <para>Для того, чтобы настроить порт, на котором будет работать сервер Squid, на 8888 (по умолчанию 3128), вам нужно изменить значение директивы http_port следующим образом:</para>
                  <para>http_port 8888</para>
               </listitem>
	            <listitem>
                  <para>Измените директиву visible_hostname для указания имени серверу Squid. Не обязательно, чтобы имя сервера Squid совпадало с именем компьютера. В данном примере оно установлено как <emphasis>weezie</emphasis></para>
                  <para>visible_hostname weezie</para>
               </listitem>
               <listitem>
                  <para>Опять же, используя контроль доступа Squid-a, вы можете настроить доступ к ресурсам интернета только для пользователей с определенными ip-адресами. Например, мы продемонстрируем доступ пользователям только из подсети 192.168.42.0/24 :</para>
                  <para>Добавьте следующее в <emphasis role="bold">конец</emphasis> секции ACL в вашем файле <filename>/etc/squid/squid.conf</filename> :</para>
                  <para>acl fortytwo_network src 192.168.42.0/24</para>
                  <para>Потом, добавьте следующее в <emphasis role="bold">начало</emphasis> секции http_access в вашем файле <filename>/etc/squid/squid.conf</filename> :</para>
                  <para>http_access allow fortytwo_network</para>
               </listitem>
               <listitem>
                  <para>Используя отличные возможности разграничения доступа в Squid, вы можете разрешить доступ к ресурсам Интернет только в рабочие часы. Напрмер, мы продемонстрируем доступ с 9:00 до 17:00, с понедельника по пятницу, для подсети 10.1.42.0/24:</para>
                  <para>Добавьте следующее в <emphasis role="bold">конец</emphasis> секции ACL в вашем файле <filename>/etc/squid/squid.conf</filename> :</para>
                  <para>acl biz_network src 10.1.42.0/24 acl biz_hours time M T W T F 9:00-17:00</para>
                  <para>Потом, добавьте следующее в <emphasis role="bold">начало</emphasis> секции http_access в вашем файле <filename>/etc/squid/squid.conf</filename> :</para>
                  <para>http_access allow biz_network biz_hours</para>
               </listitem>
          </itemizedlist>
          </para>
          <note>
	  <para>После внесения изменений в файл <filename>/etc/squid/squid.conf</filename>, сохраните его и, набрав в терминале следующую команду, перезапустите <application>squid</application> сервер, чтобы изменения вступили в силу.</para>
          </note>
          <para>
<screen>
<command>sudo /etc/init.d/squid restart</command>
</screen>
          </para>
      </sect2>
      <sect2 id="squid-references" status="complete">
      <title>Ссылки</title>
      <para>
      <ulink url="http://www.squid-cache.org/">Squid Интернет-сайт</ulink>
      </para>
      </sect2>
    </sect1>
	<sect1 id="version-control-system" status="complete">
		<title>Система контроля версий</title>
          <para>Контроль версий - это искусство управления изменениями в информации. Данный инструмент издавна был важен для программистов, которые обычно вносят небольшие изменения в программы, а затем, на следующий день, отменяют эти изменения. Однако, польза от систем контроля версий простирается далеко за границы мира разработки программного обеспечения. Место для систем контроля версий есть везде, где люди используют компьютеры для управления часто изменяющейся информацией</para>
<para>
          </para>
      <sect2 id="subversion" status="complete">
        <title>Subversion</title>
          <para>Subversion - это система контроля версий с открытым исходным кодом. Используя Subversion вы можете сохранять историю изменений файлов и документов. Дерево файлов и папок хранится в центральном репозитории похожем на обыкновенный файловый архив, за исключеним того, что сохраняются любые их модификации.</para>
        <sect3 id="subversion-installation" status="complete">
          <title>Установка</title>
            <para>Для доступа к репозиторию Subversion, посредством HTTP протокола, вы должны установить и настроить веб сервер. Apache2 гарантированно работает с Subversion. Для установки и настройки сервера Apache2, обратитесь к подразделу HTTP раздела Apache2. Для доступа к репозиторию Subversion, посредством HTTPS протокола, вы должны установить и настроить цифровой сертификат в веб сервере Apache2. Для установки и настройки цифрового сертификата, обратитесь к подразделу HTTPS раздела Apache2.</para>
						<para>Для установки Subversion выполните следующую команду в терминале:</para>
	    <para>
<screen>
<command>sudo apt-get install subversion libapache2-svn</command>
</screen>
	    </para>

        </sect3>
        <sect3 id="subversion-configuration" status="complete">
          <title>Конфигурация сервера</title>
            <para>Данный шаг подразумевает, что вы установили в систему пакеты, отмеченные выше. Данная секция объясняет как создать репозиторий Subversion и получить доступ к проекту</para>
			<sect4 id="create-svn-repos" status="complete">
				<title>Создания репоизитория Subversion</title>
<para>Репозиторий Subversion может быть создан используя следующую команду:</para>

        <para>
<screen>
<command>svnadmin create /path/to/repos/project</command>
</screen>
        </para>
			</sect4>

        </sect3>
        <sect3 id="access-methods" status="complete">
          <title>Методы доступа</title>
<para>Репозиторий Subversion может быть доступен разными способами - на локальном диске или через разные сетевые протоколы. В любом случае, расположение репозитория всегда ссылка (URL). Таблица объясняет разные схемы ссылок в доступных методах доступа.</para>
				<table><title>Методы доступа</title>

					<tgroup cols="2">
						<colspec colname="1"/>
						<colspec colname="2"/>
						<thead>
							<row>
								<entry><para>Схема</para></entry>
								<entry><para>Метод доступа</para></entry>
							</row>
						</thead>
						<tbody>
							<row>
								<entry><para>file://</para></entry>
								<entry><para>прямой доступ к репозиторию (на локальном диске)</para></entry>
							</row>
							<row>
								<entry><para>http://</para></entry>
								<entry><para>Доступ по протоколу WebDAV к вебсерверу Apache2, умеющему работать с системой Subversion</para></entry>
							</row>
							<row>
								<entry><para>https://</para></entry>
								<entry><para>То же самое, что и http://, но с SSL шифрованием</para></entry>
							</row>
							<row>
								<entry><para>svn://</para></entry>
								<entry><para>Доступ через выборочный протокол к серверу svnserve</para></entry>
							</row>
							<row>
								<entry><para>svn+ssh://</para></entry>
								<entry><para>То же самое, что и svn://, но через SSH тунель</para></entry>
							</row>
						</tbody>
					</tgroup>
				</table>

				<para>В этой секции объясняется как настроить Subversion для всех этих методов доступа. Здесь мы описываем основы. Для более детального описания, обратитесь к <ulink url="http://svnbook.red-bean.com/">книге svn</ulink>.</para>
			<sect4 id="direct-repos-access" status="complete">
				<title>Прямой доступ к репозиторию (file://)</title>
<para>Это самый простой из всех методов доступа. Он не требует запуска никакого процесса сервера Subversion. Этот метод доступа используется для доступа к Subversion с той же машины. Синтакс команды, введенной в строке терминала, следующий:</para>

        <para>
<screen>
<command>svn co file:///path/to/repos/project</command>
</screen>
        </para>
  <para>или</para>
	<para>
<screen>
<command>svn co file://localhost/path/to/repos/project</command>
</screen>
        </para>
	<note>
		<para>Если вы не указали имя хоста, используйте три слэша (///) - два для протокола (в данном случае - файл) плюс первый слэш в пути. Если вы указали имя хоста, используйте два слеша (//).</para>
	</note>
		<para>Права доступа к репозиторию зависят от прав доступа к файловой системе. Если пользователь обладает правами на чтение/запись - он может производить отладку и вносить изменения в репозиторий</para>
			</sect4>
			<sect4 id="access-via-webdav" status="complete">
				<title>Доступ через протокол WebDAV (http://)</title>
<para>Для доступа к репозиторию Subversion через протокол WebDAV необходимо сконфигурировать сервер Apache 2. Добавьте этот фрагмент в файл <filename>/etc/apache2/apache2.conf</filename>:</para>

	<programlisting> &lt;Location /svn&gt;
  DAV svn
  SVNPath /путь/к/репозиторию
  AuthType Basic
  AuthName "Название репозитория"
  AuthUserFile /etc/subversion/passwd
  &lt;LimitExcept GET PROPFIND OPTIONS REPORT&gt;
  Require valid-user
  &lt;/LimitExcept&gt;
  &lt;/Location&gt; </programlisting>
  <para>Следующим шагом необходимо создать файл <filename>/etc/subversion/passwd</filename>. Этот файл содержит настройки идетнификации. Для добавления записи, например новго пользователя, Вы можете запустить эту команду из окна терминала:</para>
	<para>
<screen>
<command>htpasswd2 /etc/subversion/passwd имя_пользователя</command>
</screen>
        </para>
	<para>Команда запросит ввести пароль. Как только пароль будет введён - пользователь будет добавлен. Теперь что бы получить доступ к репозиторию Вам необходимо выполнить эту команду:</para>
        <screen><command>svn co http://имясервера/svn</command></screen>
	<warning>
		<para>Передача пароля происходит открытым текстом. Если Вы не хотите, что бы пароль был перехвачен используйте шифрование траффика с применением SSL. Дополнительные сведения Вы можете найти в следующей секции.</para>
	</warning>
			</sect4>
			<sect4 id="access-via-webdav-with-ssl" status="complete">
				<title>Доступ к протоколу WebDAV с применением SSL (https://)</title>
					<para>Доступ к репозиторию Subversion через протокол WebDAV с применением SSL (https://) похож на http://, за исключением того, что в веб сервере Apache 2 необходимо установить и сконфигурировать цифровой сертификат.</para>

					<para>Можно установить цифровой сертификат выданный такой организацией, как Verisign или сертификат, подписанный Вами.</para>
					<para>Этот шаг подразумевает, что у вас есть установленный и сконфигурированный цифровой сертификат в веб сервере Apache 2. Для доступа к репозиторию Subversion, обязательно ознакомьтесь с предыдущей секцией! Спобобы доступа такие же, за исключением протокола. Необходимо использовать https:// для доступа к репозиторию Subversion.</para>

			</sect4>
			<sect4 id="access-via-custom-protocol" status="complete">
				<title>Доступ с использованием своего протокола (svn://)</title>
					<para>Как только репозиторий Subversion будет создан, можно будет сконфигурировать контроль доступа. Для изменения контроля доступа измените файл <filename> /путь/к/репозиторию/проект/conf/svnserve.conf</filename>. Например, для включения аутентификации, уберите комментарий на следующих строчках:</para>
					<programlisting># [general]
# password-db = passwd</programlisting>

					<para>Как только Вы раскомментируете вышеуказанные строки, Вы можете использовать список пользователей из файла passwd. Редактировать необходимо файл <filename>passwd </filename>, находящийся в той же директории и добавьте нового ползователя.</para>
					<programlisting>username = password</programlisting>
					<para>Что бы получить больше информации посмотрите файл.</para>

					<para>Теперь что бы получить доступ к Subversion через свой протокол svn:// с того же или с другого компьютера, Вы можете запустить сервер Subversion используя комманду svnserve. Синтаксис:</para>
					<programlisting>$ svnserve -d --foreground -r /путь/к/репозиторию
# -d -- daemon режим сервиса (невидимый)
# --foreground -- запустить на консоль (полезно для отладки)
# -r -- корень репозитория

Для подробного описания использования команды выполните команду:
$ svnserve --help</programlisting>

					<para>После запуска этой команды Subversion будет запущен на порту 3690. Для того, что бы сменить  репозиторий, необходимо выполнить команду:</para>
					<para>
<screen>
<command>svn co svn://имяхотса/проект проект --username имя_пользователя</command>
</screen>
                                        </para>
					<para>Если в кониге указано, будет запрошен пароль. После аутентификации, будет проверен код из репозитория Subversion. Для синхронизации локальной копии и репозитория проекта можно выполнить под-команду <command>update</command>. Синтакс введённой команды следующий.</para>
					<para>
<screen>
<command>cd директория_проекта ; svn update</command>
</screen>
                                        </para>
					<para>Вы можете обратиться к инструкции пользователя, если вас интересует детали использования каждой под-команды Subversion. На пример, что бы узнать больше про комманду "co", запустите эту команду:</para>
                    <para><screen><command>svn co help</command></screen></para>

			</sect4>
			<sect4 id="access-via-custom-protocol-with-ssl" status="complete">
				<title>Доступ используя нестандартный протокол с поддержкой SSL (svn+ssh://)</title>
					<para>Конфигурация и процесс сервера такие же как и в случае с svn://. Более подробно описано в предыдущей секции. На этом этапе подразумевается что Вы выполнили предыдущие шаги и запустили сервер Subversion, используя комманду <application>svnserve</application></para>

					<para>Так же подразумевается, что на том же компьютере запущен сервер SSH и на него разрешены входящие соединения. Что бы проверить, попробуйте подключиться к этому компьютеру используя SSH. Если вы зашли в этот компьютер, значит всё замечательно. Если вы не можете войти в этот компьютер, решите эту проблему перед тем, как приступать к дальнейшим шагам.</para>

					<para>Протокол svn+ssh:// используется если необходимо подключиться к репозиторию Subversion используя SSL. В этом случае все передаваемые данные будут зашифрованы. Для доступа к репозиторию проекта необходимо использовать следующую комманду:</para>
                                        <para>
<screen>
<command>svn co svn+ssh://hostname/var/svn/репозиторий/проект</command>
</screen>
                                        </para>

					<note><para>Что бы получить доступ к репозиторию Subversion используя этот метод, необходимо ввести полный путь (/путь/к/репозиторию/проекту).</para></note>
					<para>Если в указано в настройках будет запрошен пароль. Необходимо ввести пароль, используемый при подключении через SSH. Если пароль верный, будет проверен код из репозитория Subversion.</para>
			</sect4>
			</sect3>

      </sect2>
      <sect2 id="cvs-server" status="complete">
        <title>Сервер CVS</title> 
          <para>CVS - система контроля версий. Её можно использовать для записи истории исходных файлов.</para>
        <sect3 id="cvs-installation" status="complete">
          <title>Установка</title>
            <para>Введите следующую команду в окне термниала для установки
<application>cvs</application>: <screen>
<command>sudo apt-get install cvs</command>
</screen> После того, как вы установите <application>cvs</application>, необходимо установить <application>xinetd</application> для запуска/останова сервера CVS. При запросе введите следующую команду для установки <application>xinetd</application>: <screen>
<command>sudo apt-get install xinetd</command>
</screen></para>
        </sect3>
        <sect3 id="cvs-configuration" status="complete">
          <title>Конфигурация</title>
            <para>Репозиторий будет инициализирован автоматически после установки cvs. По умолчанию репозиторий находится в директории <application>/var/lib/cvs</application>. Этот путь можно изменить при помощи команды: <screen>
<command>cvs -d /ваш/новый/cvs/репозиторий init</command>
</screen> Для запуска CVS сервера после изменения настроек репозитория Вы можете сконфигурировать <application>xinetd</application>. Можно скопировать приведённые строки в файл <filename> /etc/xinetd/cvspserver</filename>.
<programlisting>
сервис cvspserver
{
     порт = 2401
     тип_сокета= stream
     протокол = tcp
     пользователь = root
     ждать = no
     тип = UNLISTED
     сервер = /usr/bin/cvs
     аргументы_сервера = -f --allow-root /var/lib/cvs pserver
     отключить = no
}
</programlisting><note>
<para>Если была изменена директория по умолчанию (<application>/var/lib/cvs</application>), то необходимо будет изменить репозиторий.</para>
</note>После конфигурирования <application>xinetd</application> Вы можете запустить CVS сервер используя команду command: <screen>
<command>sudo /etc/init.d/xinetd start</command>
</screen></para>
            <para>Для проверки запущен ли CVS сервер можно использовать команду:</para>

            <para>
<screen>
<command>sudo netstat -tap | grep cvs</command>
</screen>
            </para>

            <para>После того, Вы запустите эту команду, Вы должны увидеть нечто похоже:</para>

<programlisting>
tcp 0 0 *:cvspserver *:* LISTEN 
</programlisting>

        <para>После этого можно добавлять новых пользвателей, новые проекты и управлять сервером CVS.</para>
        <warning>
<para>CVS позволяет добавлять новых пользователй независимо от установленной у них ОС. Вероятно самый лёгкий путь использовать Linux Users для CVS</para>
        </warning>

        </sect3>
        <sect3 id="cvs-add-projects" status="complete">
          <title>Добавление проектов</title>
            <para>Эта секция объясняет как добавить новый проект в репозиторий CVS. Создать директорию, добавить необходимые документы и исходные тексты в эту директорию. Что бы добавить проект в репозиторий CVS запустите эту команду:screen&gt;
<command>cd путь/к проекту</command>
<command>cvs import -d :pserver:имяпользователя@имяхоста.com:/var/lib/cvs -m "Импортирование моих проектов в репозиторий CVS". новый_проект начало</command>
</para>
        </sect3>
      </sect2>
      <sect2 id="version-control-ref" status="complete">
        <title>Ссылки</title> 
				<para><ulink url="http://subversion.tigris.org/">Домашняя страница Subversion</ulink></para>
				<para><ulink url="http://svnbook.red-bean.com/">Книга Subversion</ulink></para>
				<para><ulink url="http://ximbiot.com/cvs/manual/cvs-1.11.21/cvs_toc.html">Инструкция по CVS</ulink></para>
      </sect2>
    </sect1>
	<sect1 id="databases" status="complete">
		<title>Базы данных</title>
          <para>Поставка Ubuntu включает два сервера баз данных. Это <itemizedlist spacing="compact">
                <listitem>
                    <para><application><trademark>MySQL</trademark></application></para>
                </listitem>
                <listitem>
                    <para><application>PostgreSQL</application></para>
                </listitem>
            </itemizedlist>. Они так же доступны в главном репозитории. В этой секции описано как установить и настроить эти сервера баз данных.</para>
      <sect2 id="mysql" status="complete">
        <title>MySQL</title>
          <para>MySQL это быстрый, многопоточный, многопользовательский и надёжный SQL сервер. Он предназначен как для критически важных производственных систем с большой загруженностью, так и для встраивания в большую часть приложений.</para>

        <sect3 id="mysql-installation" status="complete">
          <title>Установка</title>
            <para>Выполните эту команду в окне терминала для устнановки MySQL:</para>

            <para>
<screen>
<command>sudo apt-get install mysql-server mysql-client</command>
</screen>
            </para>

            <para>Как только установка будет оконченна, сервер MySQL должен будет автоматически запущен. Для того, что бы проверить запущен ли сервер MySQL или нет можно воспользоваться коммандой:</para>

            <para>
<screen>
<command>sudo netstat -tap | grep mysql</command>
</screen>
            </para>

            <para>После того, Вы запустите эту команду, Вы должны увидеть нечто похоже:</para>

<programlisting>
tcp 0 0 localhost.localdomain:mysql *:* LISTEN -
</programlisting>
	<para>Если сервер не был запущен, то для запуска можно попробовать эту команду:</para>
            <para>
<screen>
<command>sudo /etc/init.d/mysql restart</command>
</screen>
        </para>

        </sect3>
        <sect3 id="mysql-configuration" status="complete">
          <title>Конфигурация</title>
            <para>По умолчанию пароль администратора не установлен. Первое, что необходимо сделать сразу же после установки - это установить этот пароль. Воспользуйтесь этой командой:</para>
            <para>
<screen>
<command>sudo mysqladmin -u root (пароль) (новыйпароль) ( (пароль) - вероятно имеется ввиду текущий - прим. переводчика)</command>
</screen>
            </para>
            <para>
<screen>
<command>sudo mysqladmin -u root -h localhost (пароль) (новыйпароль)</command>
</screen>
            </para>

            <para>Для установки базовых настроек можно отредактировать файл <filename>/etc/mysql/my.cnf</filename> -- лог файл, номер порта и тп. Если хотите узнать больше - посмотрите содержимое файла <filename>/etc/mysql/my.cnf</filename>.</para>
        </sect3>
      </sect2>
      <sect2 id="postgresql" status="complete">
        <title>PostgreSQL</title> 
          <para>PostgreSQL - это объектно-ориентированная база данных, которая имеет характерные черты классических коммерческих баз данных с расширенными возможностями, которые могут быть найдены в системах DBMS следующего поколения. (DBMS - DataBase Management System - система управления базой данных - прим. переводчика).</para>
        <sect3 id="postgresql-installation" status="complete">
          <title>Установка</title>
            <para>Для того, что бы установить PostgreSQL, необходимо выполнить следующую команду:</para>

            <para>
<screen>
<command>sudo apt-get install postgresql</command>
</screen>
            </para>

            <para>После окнчания установки вы можете настроить сервер PostgreSQL под свои нужды.</para>
            
        </sect3>
        <sect3 id="postgresql-configuration" status="complete">
          <title>Конфигурация</title>
            <para>По умолчанию соединение через протокол TCP/IP отключено. PostgreSQL имеет поддержку нескольких методов аутентификации клиентов. По умолчанию используется метод аутентификации IDENT. Подробную информацию вы найдёте в этой инструкции: : <ulink url="http://www.postgresql.org/docs/8.1/static/admin.html"> the PostgreSQL Administrator's Guide</ulink>.</para>
            
            <para>В приведённых ниже инструкциях подразумается, что выбрано подключение с использованием TCP/IP и аутентификацией клиентов по алгоритму MD5. Конфигурационные файлы PostgreSQL находятся в <filename>/etc/postgresql/&lt;version&gt;/main</filename>. Например, если вы установили PostgreSQL 7.4, конфигурационные файлы будут сохранены в <filename>/etc/postgresql/7.4/main</filename>.</para>
            
            <tip>
            <para>Для настройки аутентификации с использованием <application>ident</application> отдредактируйте <filename>/etc/postgresql/7.4/main/pg_ident.conf</filename>.</para>
            </tip>

            <para>Для включения TCP/IP соединений отредактируйте файл <filename>/etc/postgresql/7.4/main/postgresql.conf</filename></para>

            <para>Найдите строку <emphasis>#tcpip_socket = false</emphasis> и измените ее на <emphasis>tcpip_socket = true</emphasis>. Вы так же можете отредактировать все остальные параметры, если вы знаете, что нужно делать! Для подробностей, обратитесь к конфигурационному файлу или документации PostgreSQL.</para>

            <para>По умолчанию, пользовательские документы не установлены в <emphasis>MD5</emphasis> аутентификацию. Потому, в первую очередь необходимо настроить сервер PostgreSQL для использования <emphasis>доверительной</emphasis> аутентификации клиента, соединения с базой данных, настроить пароль и вернуть настройки назад для использования аутентификации <emphasis>MD5</emphasis>. Для включения <emphasis>доверительной</emphasis> аутентификации клиента отредактируйте файл <filename>/etc/postgresql/7.4/main/pg_hba.conf</filename></para>

            <para>Закоментируйте все существующие строки, которые используют <emphasis>ident</emphasis> и <emphasis>MD5</emphasis> аутентификацию и добавьте следующую строку:</para>
<programlisting>
local all postgres trust sameuser
</programlisting>

            <para>Тогда запустите сервер PostgreSQL следующей командой:</para>
            <para>
<screen>
<command>sudo /etc/init.d/postgresql start</command>
</screen>
            </para>
            <para>Как только PostgreSQL сервер будет успешно запущен, для подключения к примеру базы данных PostgreSQL в терминале наберите следующую команду</para>

            <para>
<screen>
<command>psql -U postgres -d template1</command>
</screen>
            </para>
            <para>Вышеуказанная команда соединяет с базой данных PostgreSQL <emphasis>template1</emphasis> как пользователя <emphasis>postgres</emphasis>. Соединившись с сервером PostgreSQL, вы попадаете в строку ввода SQL запросов. Вы можете выполнить следующую команду SQL в строке <application>psql</application> для настройки пароля пользователя <emphasis role="italics">postgres</emphasis>.</para>

            <para>
<screen>
<command>template1=# ИЗМЕНИТЕ ПОЛЬЗОВАТЕЛЯ postgres зашифрованным паролем 'ваш_пароль';</command>
</screen>
            </para>
            <para>После настройки пароля, отредактируйте файл <filename>/etc/postgresql/7.4/main/pg_hba.conf</filename> для использования <emphasis>MD5</emphasis> аутентификации:</para>
            <para>Закомментируйте недавно добавленную <emphasis role="italics">trust</emphasis>  строку и добавьте:</para>

<programlisting>
↵
local all postgres md5 sameuser↵
</programlisting>
            <warning>
            <para>Приведенная выше конфигурация ни в коем случае не является законченой. Для настройки дополнительных параметров, пожалуйста, обратитесь  к <ulink url="http://www.postgresql.org/docs/8.1/static/admin.html"> Руководству администратора PostgreSQL </ulink>.</para>
            </warning>
        </sect3>
      </sect2>
    </sect1>
	<sect1 id="email-services" status="complete">
		<title>Сервисы электронной почты</title>
          <para>Процесс доставки электронных писем от одного человека к другому через локальную сеть или Интернет включает в себя взаимодействие множества систем. Каждая из этих систем должна быть правильно настроена, чтобы выполнять свою работу. Оправитель использует <emphasis>почтовый агент пользователя</emphasis> (Mail User Agent, MUA) или клиент электронной почты, чтобы отправлять сообщения через один или несколько <emphasis>агентов передачи почты</emphasis> (Mail Transfer Agents, MTA), последний из которых передаст сообщение <emphasis>агенту доставки почты</emphasis> (Mail Delivery Agent, MDA) для доставки почты в почтовый ящик получателя, откуда оно может быть доставлено получателю с помощью его почтового клиента, обычно через сервер POP3 или IMAP.</para>
      <sect2 id="postfix" status="complete">
        <title>Postfix</title>
          <para>В Ubuntu агент передачи почты (Mail Transfer Agent (MTA)) по умолчанию - <application>Postfix</application>. Он считается безопасным, быстрым и легким в администрировании. Он совместим с MTA <application>sendmail</application>. Данный раздел объяснит, как установить и настроить <application>postfix</application>. Так же будет описано, как настроить SMTP сервер с использованием безопасного соединения (для безопасной передачи почты).</para>
        <sect3 id="postfix-installation" status="complete">
          <title>Установка</title>
            <para>Для устрановки <application>postfix</application> вместе с SMTP-AUTH и Transport Layer Security (TLS) запустите следующую команду: <screen>
<command>sudo apt-get install postfix</command>
</screen> Просто нажимайте enter когда установщик будет задавать вопросы, настройки будут описаны более подробно в следующем шаге.</para>
        </sect3>
        <sect3 id="postfix-configuration" status="complete">
          <title>Базовая конфигурация</title>
            <para>Для настройки приложения <application>postfix</application>, выполните следующую команду: <screen>
<command>sudo dpkg-reconfigure postfix</command>
</screen> Будет запущен пользовательский интерфейс. На каждом экране выберите следующие значения: <itemizedlist spacing="compact">
            <listitem><para>Ok</para></listitem>
            <listitem><para>Сайт в интернете</para></listitem>
            <listitem><para>NONE</para></listitem>
            <listitem><para>mail.example.com</para></listitem>
            <listitem><para>mail.example.com, localhost.localdomain, localhost</para></listitem>
            <listitem><para>No</para></listitem>
            <listitem><para>127.0.0.0/8</para></listitem>
            <listitem><para>Yes</para></listitem>
            <listitem><para>0</para></listitem>
            <listitem><para>+</para></listitem>
            <listitem><para>все</para></listitem>
            </itemizedlist></para>
            <note>
            <para>Замените mail.example.com именем хостав вашего почтового сервера</para>
            </note>
	 </sect3>
        <sect3 id="postfix-smtp-authentication" status="complete">
          <title>Аутентификация SMTP</title>
            <para>Следующие шаги настраивают <application>postfix</application> для использования SASL для SMTP AUTH. Вместо правки файла настроек напрямую, вы можете использовать команду <command>postconf</command> для настройки всех параметров <application>postfix</application>. Параметры настройки будут сохранены в файле <filename>/etc/postfix/main.cf</filename>. Позже если вы пожелаете перенастроить определенный параметр, вы можете либо выполнить команду или вручную изменить файл.</para>
	<procedure>
		<step><para>Настройте Postfix для выполнения SMTP AUTH используя SASL (saslauthd): <screen>↵
postconf -e 'smtpd_sasl_local_domain ='↵
postconf -e 'smtpd_sasl_auth_enable = yes'↵
postconf -e 'smtpd_sasl_security_options = noanonymous'↵
postconf -e 'broken_sasl_auth_clients = yes'↵
postconf -e 'smtpd_recipient_restrictions = permit_sasl_authenticated,permit_mynetworks,reject_unauth_destination'↵
postconf -e 'inet_interfaces = all'↵
echo 'pwcheck_method: saslauthd' &gt;&gt; /etc/postfix/sasl/smtpd.conf↵
echo 'mech_list: plain login' &gt;&gt; /etc/postfix/sasl/smtpd.conf↵
</screen></para>
		</step>
		<step><para>Далее, настройте цифровой сертификат TLS. При ответе на задаваемые вопросы, следуйте инструкциям, и выбирайте подходящие ответы <screen>↵
openssl genrsa -des3 -rand /etc/hosts -out smtpd.key 1024↵
chmod 600 smtpd.key↵
openssl req -new -key smtpd.key -out smtpd.csr↵
openssl x509 -req -days 3650 -in smtpd.csr -signkey smtpd.key -out smtpd.crt↵
openssl rsa -in smtpd.key -out smtpd.key.unencrypted↵
mv -f smtpd.key.unencrypted smtpd.key↵
openssl req -new -x509 -extensions v3_ca -keyout cakey.pem -out cacert.pem -days 3650↵
mv smtpd.key /etc/ssl/private/↵
mv smtpd.crt /etc/ssl/certs/↵
mv cakey.pem /etc/ssl/private/↵
mv cacert.pem /etc/ssl/certs/↵
</screen></para>
		<note><para>Вы можете получить цифровой сертификат в компании сертификации или создать сертификат самостоятельно. За подробностями обращайтесь к документу <xref linkend="creating-a-self-signed-certificate"/></para></note>
		</step>
		<step><para>Настройте Postfix для выполнения TLS шифрования, как для входящей, так и для исходящей почты: <screen>↵
postconf -e 'smtpd_tls_auth_only = no'↵
postconf -e 'smtp_use_tls = yes'↵
postconf -e 'smtpd_use_tls = yes'↵
postconf -e 'smtp_tls_note_starttls_offer = yes'↵
postconf -e 'smtpd_tls_key_file = /etc/ssl/private/smtpd.key'↵
postconf -e 'smtpd_tls_cert_file = /etc/ssl/certs/smtpd.crt'↵
postconf -e 'smtpd_tls_CAfile = /etc/ssl/certs/cacert.pem'↵
postconf -e 'smtpd_tls_loglevel = 1'↵
postconf -e 'smtpd_tls_received_header = yes'↵
postconf -e 'smtpd_tls_session_cache_timeout = 3600s'↵
postconf -e 'tls_random_source = dev:/dev/urandom'↵
postconf -e 'myhostname = mail.example.com'↵
</screen></para>
		</step>
		</procedure>
            <note>
            <para>SMTP AUTH для with <application>postfix</application> будет настроена после того, как вы запустите все команды. Собственный сертификат создан для TLS и настроен для использования с <application>postfix</application>.</para>
            </note>
            <para>Теперь, файл <filename>/etc/postfix/main.cf</filename> должен выглядеть <ulink url="../sample/postfix_configuration">подобным</ulink> образом.</para>
		<para>Началная настройка postfix завершена. Вы можете запустить демона postfix с помощью следующей команды: <screen><command>sudo /etc/init.d/postfix start</command></screen> Теперь демон <application>postfix</application> установлен, настроен и удачно запущен. <application>Postfix</application> поддерживает SMTP AUTH как определено в документе <ulink url="ftp://ftp.isi.edu/in-notes/rfc2554.txt">RFC2554</ulink>, который основан на <ulink url="ftp://ftp.isi.edu/in-notes/rfc2222.txt">SASL</ulink>. Однако, аутентификацию SASL все таки необходимо настроить до того, как вы сможете использовать SMTP.</para>
	</sect3>
	<sect3 id="sasl">
	  <title>Настройка SASL</title>
            <para><application>libsasl2</application>, <application>sasl2-bin</application> и <application>libsasl2-modules</application> необходимы для включения SMTP AUTH используя SASL. Вы можете установить эти приложения, если ещё этого не сделали. <screen>
<command>apt-get install libsasl2 sasl2-bin</command>
</screen></para>
	    <para>Некоторые изменения необходимы для корректной работы. Из-за того, тчто <application>Postfix</application> запускается в окружении с измененным корнем (с помощью chroot) в <filename>/var/spool/postfix</filename>, необходимо сконфигурировать <application>SASL</application> для запуска в "поддельном" root-окружении (<filename>/var/run/saslauthd</filename> становится <filename>/var/spool/postfix/var/run/saslauthd</filename>): <screen>
<command>mkdir -p /var/spool/postfix/var/run/saslauthd</command>
<command>rm -rf /var/run/saslauthd</command>
</screen></para>
	    <para>Для активации <application>saslauthd</application> отредактируйте файл <filename>/etc/default/saslauthd</filename>, изменив или добавив в него переменную START. Для настройки запуска <application>saslauthd</application> в "поддельном" root-окружении, добавьте параметры PWDIR, PIDFILE и PARAMS. Напоследок, измените переменную MECHANISMS на подходящую для вашего случая. Файл должен выглядеть примерно вот так: <programlisting>
# This needs to be uncommented before saslauthd will be run
# automatically
START=yes

PWDIR="/var/spool/postfix/var/run/saslauthd"
PARAMS="-m ${PWDIR}"
PIDFILE="${PWDIR}/saslauthd.pid"

# You must specify the authentication mechanisms you wish to use.
# This defaults to "pam" for PAM support, but may also include
# "shadow" or "sasldb", like this:
# MECHANISMS="pam shadow"

MECHANISMS="pam"
</programlisting></para>
<note>
<para>Если хотите, вы можете использовать <emphasis role="strong">shadow</emphasis> вместо <emphasis role="strong">pam</emphasis>. Этот способ будет использовать передачу паролей хешированных с помощью MD5, что является полностью безопасным. Имя пользователя и пароль, необходимые для авторизации, будут такими же, как и у пользователей на системе, которую вы используете под сервер.</para>
</note>
        <para>Теперь обновите "состояние" dpkg  для <filename>/var/spool/portfix/var/run/saslauthd</filename>. Инициализационный скрипт saslauthd воспользуется заданными настройками, чтобы создать недостающие каталоги с соответствующими правами доступа и владения: <screen>
<command>dpkg-statoverride --force --update --add root sasl 755 /var/spool/postfix/var/run/saslauthd</command>
</screen></para>
        </sect3>
        <sect3 id="postfix-testing" status="complete">
          <title>Тестирование</title>
            <para>Настройка SMTP AUTH завершена. Теперь самое время для проверочного запуска и тестирования установок. Вы можете запустить демон SASL с помощью следующей команды: <screen><command>sudo /etc/init.d/saslauthd start</command></screen> Чтобы проверить правильно ли работают SMTP-AUTH и TLS, выполните следующую команду: <screen><command>telnet mail.example.com 25</command></screen> После установки соединения с почтовым сервером postfix, введите: <screen>ehlo mail.example.com</screen> Все работает правильно, если в представленном выводе вы увидите в том числе и строки представленные ниже: <programlisting>
250-STARTTLS
250-AUTH LOGIN PLAIN
250-AUTH=LOGIN PLAIN
250 8BITMIME
</programlisting> Введите команду <command>quit</command> для завершения сеанса.</para>
        </sect3>
      </sect2>
      <sect2 id="exim4" status="complete">
        <title>Exim4</title>
          <para><application>Exim4</application> - это другой агент передачи сообщений (Message Transfer Agent, MTA), разработанный в Кембриджском университете (University of Cambridge) для использования на Unix-системах, подключенных к сети Интернет. Можно установить Exim как замену <application>sendmail</application>, однако настройка <application>exim</application> довольно сильно отличается от настройки <application>sendmail</application>.</para>
        <sect3 id="exim4-installation" status="complete">
          <title>Установка</title>
            <para>Для установки <application>exim4</application>, выполните следующую команду: <screen>
<command>sudo apt-get install exim4 exim4-base exim4-config</command>
</screen></para>
        </sect3>
        <sect3 id="exim4-configuration" status="complete">
          <title>Конфигурация</title>
            <para>Для настройки <application>exim4</application>,  выполните следующую команду: <screen>
<command>sudo dpkg-reconfigure exim4-config</command>
</screen> Отобразится пользовательский интерфейс. Он позволяет настроить многие параметры. Например, в <application>exim4</application> файлы настроек разбиты на множество файлов. Если вы желаете иметь настройки в одном файле вы можете настроить это в пользовательском интерфейсе.</para>

            <para>Все параметры, котрые вы настраиваете с помощью пользовательского интерфейса, хранятся в файле <filename>/etc/exim4/update-exim4.conf.conf</filename>. Если вы хотите изменить настройки, то вы можете: либо запустить еще раз мастер настройки, либо отредактировать данный файл вручную в вашем любимом текстовом редакторе. После завершения настройки, выполните следуующую команду, чтобы создать основной конфигурационный файл: <screen>
<command>sudo update-exim4.conf</command>
</screen> Основной файл конфигурации будет создан и сохранен под именем <filename>/var/lib/exim4/config.autogenerated</filename>. <warning>
            <para>Вы не должны, ни при каких обстоятельствах, редактировать вручную основной файл настроек <filename>/var/lib/exim4/config.autogenerated</filename>. Он обновляется автоматически каждый раз, когда вы запускаете команду  <command>update-exim4.conf</command></para>
            </warning> Для запуска демона <application>exim4</application> воспользуйтесь следующей командой: <screen>
<command>sudo /etc/init.d/exim4 start</command>
</screen>

<emphasis role="strong">TODO:</emphasis> This section should cover configuring SMTP AUTH with exim4.</para>
        </sect3>
      </sect2>
      <sect2 id="dovecot-server" status="complete">
        <title>Dovecot Server</title> 
          <para><application>Dovecot</application> - это агент доставки почты, написанный с упором на безопасность. Он поддерживает основные форматы почтовых ящиков: mbox или Maildir. Этот раздел рассказывает о том, как настроить его в качестве сервера imap или pop3.</para>
        <sect3 id="dovecot-installation" status="complete">
          <title>Установка</title>
            <para>Для установки <application>dovecot</application>, выпоните следующую команду в командной строке: <screen>
<command>sudo apt-get install dovecot-common dovecot-imapd dovecot-pop3d</command>
</screen></para>
        </sect3>
        <sect3 id="dovecot-configuration" status="complete">
          <title>Конфигурация</title>
            <para>Для настройки <application>dovecot</application> вы можете отредактировать файл <filename>/etc/dovecot/dovecot.conf</filename>. Вы можете выбрать протокол, который будете использовать. Возможные варианты: pop3, pop3s (pop3 secure), imap и imaps (imap secure). Описание этих протоколов выходит за пределы данного руководства. Для дальнейшей информации посетите статьи в википедиа ulink url="http://en.wikipedia.org/wiki/POP3"&gt;POP3</para>

            <para>IMAPS и POP3S более безопасны, чем IMAP и POP3, так как они используют шифрование SSL для установки соединения. После того, как вы определились с протоколом, внесите изменения в следующую строку файла <filename>/etc/dovecot/dovecot.conf</filename>: <programlisting>
protocols = pop3 pop3s imap imaps
</programlisting> Она включает протоколы при старте <application>dovecot</application>. Далее, добавьте следующую строку в раздел pop3 файла <filename>/etc/dovecot/dovecot.conf</filename>: <programlisting>
pop3_uidl_format = %08Xu%08Xv
</programlisting> Затем выберите используемый почтовый ящик. <application>Dovecot</application> поддерживает форматы <emphasis role="strong">maildir</emphasis> и <emphasis role="strong">mbox</emphasis>. Это наиболее часто используемые форматы почтовых ящиков. Каждый из этих форматов имеет свои преимущества, которые обсуждены на <ulink url="http://dovecot.org/doc/configuration.txt">веб-сайте dovecot</ulink>.</para>
            <para>Выбрав тип почтового ящика, отредактируйте файл <filename>/etc/dovecot/dovecot.conf</filename> и измените следующую линию:<programlisting>
default_mail_env = maildir:~/Maildir # (для maildir)
или
default_mail_env = mbox:~/mail:INBOX=/var/spool/mail/%u # (для mbox)
</programlisting></para>
<note>
<para>Вам следует настроить ваш Mail Trasport Agent (MTA) для передачи входящей почты этому типу почтового ящика если он отличается от того, которого вы настроили.</para>
</note>
          <para>По окончании настройки dovecot, запустите демона <application>dovecot</application>, чтобы проверить работу ваших установок: <screen><command>sudo /etc/init.d/dovecot start</command></screen> Если вы активировали imap или pop3, вы можете также попробовать войти на сервер при помощи команд <command>telnet localhost pop3</command> или <command>telnet localhost imap2</command> Установка выполнена успешно, если вы видите вывод, подобный следующему: <programlisting>
bhuvan@rainbow:~$ telnet localhost pop3
Пытаемся 127.0.0.1...
Соединился с localhost.localdomain.
Клавиша возврата '^]'.
+OK Dovecot готов.
</programlisting></para>
        </sect3>
        <sect3 id="dovecot-ssl" status="complete">
          <title>Dovecot: Настройка SSL</title>
            <para>Для настройки использования SSL в <application>dovecot</application>, вы можете отредактировать файл<filename>/etc/dovecot/dovecot.conf</filename>, изменив следующие строки: <programlisting>
ssl_cert_file = /etc/ssl/certs/dovecot.pem
ssl_key_file = /etc/ssl/private/dovecot.pem
ssl_disable = no
disable_plaintext_auth = no
</programlisting> Файлы <emphasis role="strong">cert</emphasis> и <emphasis role="strong">key</emphasis> создаются автоматически при установке <application>dovecot</application>. Пожалуйста, обратите внимание, что данные ключи не подписаны и их использование будет давать ошибки вида "bad signature" (плохая подпись) при подключении клиентов. Чтобы избежать этого, вы можете воспользоваться коммерческими сертификатами, или, что еще лучше, вы можете использовать свои собственные сертификаты SSL.</para>
	</sect3>
	<sect3>
	  <title>Настройка брандмауэра для почтового сервера</title>
          <para>Для доступа к вашему почтовому серверу с другого компьютера вы должны настроить брандмауер на разрешение соединений по необходимым портам. <itemizedlist>
            <listitem><para>IMAP - 143</para></listitem>
            <listitem><para>IMAPS - 993</para></listitem>
            <listitem><para>POP3 - 110</para></listitem>
            <listitem><para>POP3S - 995</para></listitem>
            </itemizedlist></para>
        </sect3>
      </sect2>
      <sect2 id="mailman" status="complete">
        <title>Mailman</title> 
          <para>Mailman - это программа с открытыми кодами для управления дискуссиями, ведущимися через электронную почту, и рассылками электронных новостных сообщений. Многие открытые списки рассылок (включая все на <ulink url="http://lists.ubuntu.com">Ubuntu mailing lists</ulink>) используют Mailman, в качестве программы управления почтовыми списками. Это мощное приложение, при этом его легко установить и поддерживать.</para>
        <sect3 id="mailman-installation" status="complete">
          <title>Установка</title>
            <para>Mailman предоставляет веб-интерфейс для администраторов и пользователей. То есть, ему необходим сервер Апач (apache) с поддержкой mod_perl. Mailman использует внешний почтовый сервер для отправки и получения электронной почты. Он отлично взаимодействует со следующими почтовыми серверами:</para>
            <para>
            <itemizedlist spacing="compact">
                <listitem>
                    <para><application>Postfix</application></para>
                </listitem>
                <listitem>
                    <para><application>Exim</application></para>
                </listitem>
                <listitem>
                    <para><application>Sendmail</application></para>
                </listitem>
                <listitem>
                    <para><application>Qmail</application></para>
                </listitem>
            </itemizedlist>
            </para>

            <para>Мы рассмотрим как установить mailman, веб-сервер apache и почтовый сервер Exim. Если вы хотите установить mailman для другого почтового сервера, пожалуйста, обратитесь к разделу ссылки.</para>
          <sect4 id="mailman-apache2">
            <title>Apache2</title>
              <para>Для описания установки apache2 смотрите <xref linkend="http-installation"/>.</para>
          </sect4>
          <sect4 id="mailman-exim4">
            <title>Exim4</title>
              <para>Для установки Exim4 выполните следующие команды в строке терминала: <screen>
<command>sudo apt-get install exim4</command>
<command>sudo apt-get install exim4-base</command>
<command>sudo apt-get install exim4-config</command>
</screen> После установки exim4, файлы настроек сохраняются в каталоге <filename>/etc/exim4</filename>. В Ubuntu, по умолчанию, настройки exim4 распределены среди различных файлов. Вы можете изменить это поведение изменив следующую переменную в файле <filename>/etc/exim4/update-exim4.conf</filename>: <itemizedlist spacing="compact">
              <listitem>
                <para><application>dc_use_split_config='true'</application></para>
              </listitem>
              </itemizedlist></para>
          </sect4>
          <sect4 id="mailman-mailman">
            <title>Mailman</title>
              <para>Для инсталляции <application>Mailman</application> выполните следующую команду в строке терминала: <screen>
<command>sudo apt-get install mailman</command> 
</screen> Она копирует файлы, необходимые для установки, в каталог <application>/var/lib/mailman</application>. Плюс, устанавливает скрипты CGI в каталог <application>/usr/lib/cgi-bin/mailman</application>. А также создает линукс пользователя <emphasis>list</emphasis> и линукс группу <emphasis>list</emphasis>. Этот пользователь будет владельцем процесса mailman.</para>
          </sect4>
        </sect3>
        <sect3 id="mailman-configuration" status="complete">
          <title>Конфигурация</title>
            <para>Данный раздел подразумевает, что у вас уже установлены: <application>mailman</application>, <application>apache2</application> и <application>exim4</application>. Теперь вам нужно только настроить их.</para>
          <sect4 id="mailman-conf-apache2">
            <title>Apache2</title>
              <para>После установки apache2, добавьте следующие строки в файл <filename>/etc/apache2/apache2.conf</filename>: <programlisting>
Alias /images/mailman/ "/usr/share/images/mailman/"
Alias /pipermail/ "/var/lib/mailman/archives/public/"
</programlisting> Mailman использует apache2 для исполнения своих CGI-скриптов. CGI скрипты mailman-а установлены в каталоге <application>/usr/lib/cgi-bin/mailman</application>. То есть его url-адрес будет http://hostname/cgi-bin/mailman/. Чтобы изменить это, вы можете отредактировать файл <filename>/etc/apache2/apache2.conf</filename>.</para>
          </sect4>

          <sect4 id="mailman-conf-exim4">
            <title>Exim4</title>
              <para>После установки Exim4, сервер Exim может быть запущен из командной строки терминала при помощи: <screen>
<command>sudo /etc/init.d/exim4 start</command>
</screen> Для того, чтобы mailman работал с exim4, вам необходимо настроить exim4. Как замечено ранее, по умолчанию exim4 использует множество конфигурационных файлов различных типов. Для получения более подробной информации, обратитесь к <ulink url="http://www.exim.org">веб-странице Exim</ulink>. Для запуска mailman, нам нужно добавить новый файл настроек к следующим типам конфигураций: <itemizedlist spacing="compact">
              <listitem>
                <para>Основное</para>
              </listitem>
              <listitem>
                <para>Передача почты</para>
              </listitem>
              <listitem>
                <para>Маршрутизатор</para>
              </listitem>
              </itemizedlist> Exim создает основной файл настроек, разбирая все эти настроечные мини-файлы. То есть порядок, в котором идут эти файлы настроек, очень важен.</para>
          </sect4>
          <sect4 id="mailman-conf-main">
            <title>Основное</title>
              <para>Все настроечные файлы основного типа хранятся в каталоге <filename>/etc/exim4/conf.d/main/</filename>. Создайте новый файл <filename>04_exim4-config_mailman</filename> и добавьте в него следующее: <programlisting>
# start
# Home dir for your Mailman installation -- aka Mailman's prefix
# directory.
# On Ubuntu this should be "/var/lib/mailman"
# This is normally the same as ~mailman
MM_HOME=/var/lib/mailman
#
# User and group for Mailman, should match your --with-mail-gid
# switch to Mailman's configure script. Value is normally "mailman"
MM_UID=list
MM_GID=list
#
# Domains that your lists are in - colon separated list
# you may wish to add these into local_domains as well
domainlist mm_domains=hostname.com
#
# -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
#
# These values are derived from the ones above and should not need
# editing unless you have munged your mailman installation
#
# The path of the Mailman mail wrapper script
MM_WRAP=MM_HOME/mail/mailman
#
# The path of the list config file (used as a required file when
# verifying list addresses)
MM_LISTCHK=MM_HOME/lists/${lc::$local_part}/config.pck
# end
</programlisting></para>
          </sect4>
          <sect4 id="mailman-conf-transport">
            <title>Передача почты</title>
              <para>Все настроечные файлы, принадлежащие к типу транспортировка, хранятся в каталоге <filename>/etc/exim4/conf.d/transport/</filename>. Создайте новый файл <filename> 40_exim4-config_mailman</filename> и добавьте в него следующее: <programlisting>
  mailman_transport:
   driver = pipe
   command = MM_WRAP \
               '${if def:local_part_suffix \
                     {${sg{$local_part_suffix}{-(\\w+)(\\+.*)?}{\$1}}} \
                     {post}}' \
               $local_part
    current_directory = MM_HOME
    home_directory = MM_HOME
    user = MM_UID
    group = MM_GID
</programlisting></para>
          </sect4>
          <sect4 id="mailman-conf-router">
            <title>Маршрутизатор</title>
              <para>Все настроечные файлы, принадлежащие к типу роутер, хранятся в каталоге <filename>/etc/exim4/conf.d/router/</filename>. Создайте новый файл <filename>101_exim4-config_mailman</filename> и добавьте в него следующее: <programlisting>
  mailman_router
   driver = accept
   require_files = MM_HOME/lists/$local_part/config.pck
   local_part_suffix_optional
   local_part_suffix = -bounces : -bounces+* : \
                       -confirm+* : -join : -leave : \
                       -owner : -request : -admin
   transport = mailman_transport
</programlisting></para>
<warning>
<para>Порядок основных и транспортных файлов настроек не важен. Однако, порядок файлов настроек роутера должен быть сохранен. Конкретно этот файл по порядку должен быть до файла <application>200_exim4-config_primary</application>. Оба этих файла содержат одинаковый тип информации. Первый из них будет определен как предшественник. Для получкения более полной информации, обратитесь к секции ссылки.</para>
</warning>
          </sect4>
          <sect4 id="mailman-conf-mailman">
            <title>Mailman</title>
              <para>После установки mailman, для его запуска воспользуйтесь командой: <screen>
<command>sudo /etc/init.d/mailman start</command>
</screen> Теперь вам нужно создать основной список рассылки. Воспользуйтесь для этого следующей командой: <screen>
<command>sudo /usr/sbin/newlist mailman</command>
</screen><programlisting>
  Enter the email address of the person running the list: bhuvan at ubuntu.com
  Initial mailman password:
  To finish creating your mailing list, you must edit your <filename>/etc/aliases</filename> (or
  equivalent) file by adding the following lines, and possibly running the
  `newaliases' program:
  mailman: "|/var/lib/mailman/mail/mailman post mailman"
  mailman-admin: "|/var/lib/mailman/mail/mailman admin mailman"
  mailman-bounces: "|/var/lib/mailman/mail/mailman bounces mailman"
  mailman-confirm: "|/var/lib/mailman/mail/mailman confirm mailman"
  mailman-join: "|/var/lib/mailman/mail/mailman join mailman"
  mailman-leave: "|/var/lib/mailman/mail/mailman leave mailman"
  mailman-owner: "|/var/lib/mailman/mail/mailman owner mailman"
  mailman-request: "|/var/lib/mailman/mail/mailman request mailman"
  mailman-subscribe: "|/var/lib/mailman/mail/mailman subscribe mailman"
  mailman-unsubscribe: "|/var/lib/mailman/mail/mailman unsubscribe mailman"

  Hit enter to notify mailman owner...

  # 
</programlisting> Мы настроили exim на распознавание всех сообщений от mailman. Таким образом, не обязательно создавать новые записи в файле <filename>/etc/aliases</filename>. Если вы внесли какие-либо изменения в конфигурационные файлы, пожалуйста, удостоверьтесь, что вы перезапустили соответствующие службы до того, как перейдете к следующему разделу.</para>
          </sect4>
        </sect3>
        <sect3 id="mailman-admin" status="complete">
          <title>Администрирование</title>
<para>Поразумевается, что у вас установка по умолчанию. CGI-скрипты mailman все еще находятся в каталоге <application>/usr/lib/cgi-bin/mailman/</application>. Mailman предоставляет легких веб-интерфейс для администрирования. Для доступа к его страницам укажите следующую ссылку в вашем браузере:</para>
<para>http://hostname/cgi-bin/mailman/admin</para>

<para>Список по умолчанию, <emphasis>mailman</emphasis>, появится на экране. Если вы щелкните по имени списка рассылки, появится запрос для аутентификации с помощью пароля. После ввода правильного пароля, вы получите возможность изменять административные настройки для данного списка. Для создания нового списка вы можете воспользоваться утилитой командной строки (<command>/usr/sbin/newlist</command>). В качестве альтернативы, вы можете использовать для создания нового списка веб-интерфейс.</para>
        </sect3>
        <sect3 id="mailman-users" status="complete">
          <title>Пользователи</title>
<para>Mailman предоставляет пользователю веб-интерфейс. Для доступа к этой странице, перейдите в браузере на следующий url:</para>

<para>http://hostname/cgi-bin/mailman/listinfo</para>

<para>На этом экране появится созданный при установке список рассылки "<emphasis>mailman</emphasis>". Если щёлкнуть на на названии списка рассылки, появится форма регистрации. Для подписки на этот список можно ввести Ваш почтовый адрес, имя (не обязательно) и пароль. После этого Вам будет отправленно электронной почтой приглашение. Чтобы подписаться на список рассылки, следуйте инструкциям, содержащимся в этом приглашении.</para>
        </sect3>
        <sect3 id="mailman-references" status="complete">
          <title>Ссылки</title>
<para>
<ulink url="http://www.list.org/mailman-install/index.html">GNU Mailman - руководство по установке</ulink>
</para>
<para>
<ulink url="http://www.exim.org/howto/mailman21.html">HOWTO - Совместное использование Exim 4 и Mailman 2.1</ulink>
</para>
        </sect3>
      </sect2>
    </sect1>
	</chapter>
