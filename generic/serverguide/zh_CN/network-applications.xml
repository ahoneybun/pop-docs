<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE chapter PUBLIC "-//OASIS//DTD DocBook XML V4.3//EN" "http://www.oasis-open.org/docbook/xml/4.3/docbookx.dtd" [
<!ENTITY % globalent SYSTEM "../../../libs/global.ent">
<!-- NAMES --><!ENTITY canonical-name "Canonical Ltd.">
<!ENTITY project-name "Ubuntu Documentation Project">
<!ENTITY ubuntu "<phrase>Ubuntu</phrase>">
<!-- VERSIONS --><!ENTITY distro-version "Dapper Drake">
<!ENTITY distro-rev "6.06">
<!ENTITY distro-release-date "June 2006">
<!ENTITY linux-kernel-version "2.6.15">
<!ENTITY gcc-version "4.0.3">
<!ENTITY glibc-version "2.3.6">
<!ENTITY python-version "2.4.3">
<!-- AUTHORS --><!ENTITY author-ubuntu-documentation-project SYSTEM "../common/authors/ubuntu-documentation-project.xml">
<!ENTITY author-christoph-haas SYSTEM "../common/authors/christoph-haas.xml">
<!ENTITY author-alexander-poslavsky SYSTEM "../common/authors/alexander-poslavsky.xml">
<!ENTITY author-alan-hood SYSTEM "../common/authors/alan-hood.xml">
<!ENTITY author-johnathon-hornbeck SYSTEM "../common/authors/johnathon-hornbeck.xml">
<!ENTITY author-nick-loeve SYSTEM "../common/authors/nick-loeve.xml">
<!ENTITY author-gordon-ingram SYSTEM "../common/authors/gordon-ingram.xml">
<!ENTITY author-sean-wheller SYSTEM "../common/authors/sean-wheller.xml">
<!ENTITY author-enrico-zini SYSTEM "../common/authors/enrico-zini.xml">
<!ENTITY author-kevin-muligan SYSTEM "../common/authors/kevin-muligan.xml">
<!ENTITY author-ari-torhamo SYSTEM "../common/authors/ari-torhamo.xml">
<!ENTITY author-jeff-schering SYSTEM "../common/authors/jeff-schering.xml">
<!ENTITY author-corey-burger SYSTEM "../common/authors/corey-burger.xml">
<!ENTITY author-niel-tallim SYSTEM "../common/authors/niel-tallim.xml">
<!ENTITY author-henry-meyerding SYSTEM "../common/authors/henry-meyerding.xml">
<!ENTITY author-matthew-east SYSTEM "../common/authors/matthew-east.xml">
<!ENTITY author-jerome-gotangco SYSTEM "../common/authors/jerome-gotangco.xml">
<!ENTITY author-johnathan-jesse SYSTEM "../common/authors/johnathan-jesse.xml">
<!ENTITY author-greg-taylor SYSTEM "../common/authors/greg-taylor.xml">
<!ENTITY author-troy-williams SYSTEM "../common/authors/troy-williams.xml">
<!ENTITY author-matt-galvin SYSTEM "../common/authors/matt-galvin.xml">
<!ENTITY author-robert-stoffers SYSTEM "../common/authors/robert-stoffers.xml">
<!ENTITY author-jordan-mantha SYSTEM "../common/authors/jordan-mantha.xml">
<!ENTITY author-venkat-raghavan SYSTEM "../common/authors/venkat-raghavan.xml">
<!ENTITY author-brian-burger SYSTEM "../common/authors/brian-burger.xml">
<!ENTITY author-rocco-stanzione SYSTEM "../common/authors/rocco-stanzione.xml">
<!ENTITY glossary SYSTEM "../common/C/glossary.xml">
<!-- LEGAL URLs --><!ENTITY gpl-url '<ulink url="http://www.gnu.org/licenses/gpl.html">GNU General Public License</ulink>'>
<!ENTITY cc "http://creativecommons.org/">
<!ENTITY cc-attrib '<ulink url="http://creativecommons.org/licenses/by-sa/2.0/">Attribution-ShareAlike 2.0</ulink>'>
<!ENTITY cc-fulldeed-url "http://creativecommons.org/licenses/by-sa/2.0/legalcode/">
<!ENTITY fdl-url '<ulink url="http://www.gnu.org/copyleft/fdl.html">GNU Free Documentation License</ulink>'>
<!ENTITY cc-disclaimer-url "http://creativecommons.org/licenses/disclaimer-popup?lang=en">
<!-- CANONICAL URL RESOURCES --><!ENTITY canonical-url "http://www.canonical.com">
<!-- UBUNTU URL RESOURCES --><!ENTITY ubuntu-packages "http://packages.ubuntu.com">
<!ENTITY ubuntu-dpkgfile "ubuntu5.10.tar">
<!ENTITY ubuntu-web "http://www.ubuntu.com">
<!ENTITY ubuntu-main "http://www.ubuntu.com">
<!ENTITY ubuntu-download "http://www.ubuntu.com/download">
<!ENTITY ubuntu-forums "http://www.ubuntu.com/community/forums">
<!ENTITY ubuntu-components "http://www.ubuntu.com/ubuntu/components">
<!ENTITY ubuntu-lists "http://lists.ubuntu.com">
<!ENTITY ubuntu-wiki "http://wiki.ubuntu.com">
<!ENTITY ubuntu-irc "irc.freenode.net channel #ubuntu">
<!ENTITY ubuntu-bugzilla "https://launchpad.net/distros/ubuntu/+bugs">
<!ENTITY ubuntu-doc-bugs "https://launchpad.net/products/ubuntu-doc/+bugs">
<!ENTITY ubuntu-paidsupport "http://www.ubuntu.com/support/supportoptions/paidsupport">
<!ENTITY ubuntu-freesupport "http://www.ubuntu.com/support/supportoptions/freesupport">
<!ENTITY ubuntu-comments "http://www.ubuntuforums.org/showthread.php?p=21787">
<!ENTITY ubuntu-documentation "http://help.ubuntu.com">
<!ENTITY ubuntu-documentation-repos "https://docteam.ubuntu.com/repos/trunk">
<!ENTITY ubuntu-doc-team "https://wiki.ubuntu.com/DocumentationTeam">
<!ENTITY ubuntu-doc-list "http://lists.ubuntu.com/mailman/listinfo/ubuntu-doc">
<!ENTITY ubuntu-shipit "http://shipit.ubuntu.com">
<!ENTITY ubuntu-launchpad "https://launchpad.ubuntu.com">
<!ENTITY ubuntu-rosetta "https://launchpad.ubuntu.com/rosetta">
<!ENTITY ubuntu-planet "http://planet.ubuntu.com">
<!ENTITY ubuntu-philosophy "http://www.ubuntu.com/ubuntu/philosophy">
<!ENTITY ubuntu-participate "http://www.ubuntu.com/community/participate/">
<!-- UBUNTU WIKI RESOURCES --><!ENTITY wiki-UserDocumentation "https://wiki.ubuntu.com/UserDocumentation">
<!ENTITY restricted-formats "https://wiki.ubuntu.com/RestrictedFormats">
<!ENTITY wiki-RestrictedFormats "https://wiki.ubuntu.com/RestrictedFormats">
<!ENTITY wiki-XChatHowto "https://wiki.ubuntu.com/XChatHowto">
<!ENTITY wiki-RootSudo "https://wiki.ubuntu.com/RootSudo">
<!ENTITY wiki-HowToGetHelp "https://wiki.ubuntu.com/HowToGetHelp">
<!ENTITY transcode "https://wiki.ubuntu.com/DVDRippingandEncoding">
<!ENTITY wiki-Wine "https://wiki.ubuntu.com/Wine">
<!ENTITY wiki-Cedega "https://wiki.ubuntu.com/Cedega">
<!ENTITY wiki-Nano "https://wiki.ubuntu.com/NanoHowto">
<!ENTITY wiki-locoteams "https://wiki.ubuntu.com/LoCoTeamList">
<!ENTITY wiki-BasicCommands "https://wiki.ubuntu.com/BasicCommands">
<!ENTITY wiki-filepermissions "https://wiki.ubuntu.com/FilePermissions">
<!-- KUBUNTU URL RESOURCES --><!ENTITY kubuntu-web "http://www.kubuntu.org">
<!ENTITY kubuntu-main "http://www.kubuntu.org">
<!ENTITY kubuntu-download "http://releases.ubuntu.com/kubuntu/">
<!ENTITY kubuntu-packages "http://packages.ubuntu.com/breezy/">
<!ENTITY kubuntu-cdpackages-nodefault "http://people.ubuntu.com/~cjwatson/seeds/kubuntu-breezy/ship">
<!ENTITY kubuntu-lists "http://lists.ubuntu.com/archives/kubuntu-users/">
<!ENTITY kubuntu-lists-users "http://lists.ubuntu.com/mailman/listinfo/kubuntu-users/">
<!ENTITY kubuntu-lists-devel "http://lists.ubuntu.com/mailman/listinfo/kubuntu-devel/">
<!ENTITY kubuntu-mirrors "http://distrowatch.com/kubuntu">
<!ENTITY kubuntu-forums "http://ubuntuforums.org/forumdisplay.php?f=68">
<!ENTITY kubuntu-forums2 "http://kubuntuforums.net">
<!ENTITY kubuntu-wiki "http://www.ubuntu.com/wiki/Kubuntu">
<!ENTITY kubuntu-irc "irc.freenode.net channel kubuntu">
<!ENTITY kubuntu-documentation-site "http://www.kubuntu.org/documentation.php">
<!ENTITY kubuntu-wiki-UserDocumentation "https://wiki.kubuntu.com/UserDocumentation">
<!-- XUBUNTU URL RESOURCES --><!ENTITY xubuntu-irc "irc.freenode.net channel xubuntu">
<!-- DEBIAN RESOURCES --><!ENTITY debian-apt "http://www.debian.org/doc/user-manuals#apt-howto">
<!-- EXTERNAL URL RESOURCES --><!ENTITY linmodem "http://www.linmodems.org/">
<!ENTITY gnome "http://www.gnome.org/">
<!ENTITY linuxorg "http://www.linux.org/">
<!ENTITY ooo "http://www.openoffice.org/">
<!ENTITY kde "http://www.kde.org/">
<!ENTITY lugww "http://lugww.counter.li.org/">
<!ENTITY ubuntu-watch "http://distrowatch.com/ubuntu/">
<!ENTITY realplayer-download "http://www.real.com/linux/">
<!ENTITY nvu-download "http://www.nvu.com/download.html">
<!ENTITY sunjava-download "http://java.sun.com/j2se/1.5.0/download.jsp">
<!ENTITY xorg "http://www.x.org">
<!ENTITY dyndns "http://www.dyndns.org">
<!ENTITY shoutcast "http://www.shoutcast.com/">
<!ENTITY freedomtoaster "http://www.freedomtoaster.org/">
<!-- ubuntu-screenshots TODO --><!ENTITY kubuntu-screenshots "http://shots.osdir.com/slideshows/slideshow.php?release=306&amp;slide=1">
<!ENTITY mozilla "http://www.mozilla.org/">
<!ENTITY mozilla-firefox "http://www.mozilla.org/products/firefox/">
<!ENTITY gnu "http://www.gnu.org/">
<!ENTITY gnu-philosophy "http://www.gnu.org/philosophy/">
<!ENTITY win4lin "http://www.win4lin.com">
<!ENTITY codeweavers "http://www.codeweavers.com">
<!ENTITY kernel "http://www.kernel.org">
<!ENTITY google "http://www.google.com">
<!ENTITY kdelook " http://www.kde-look.org">
<!-- this entity controls the url for addons--><!ENTITY java-download "http://java.sun.com/j2se/1.5.0/download.jsp">
<!ENTITY skype-deb "skype_1.2.0.17-1_i386.deb">
<!ENTITY skype-download "http://www.skype.com/go/getskype-linux-deb">
<!ENTITY scanmodem-gz "scanModem.gz">
<!ENTITY scanmodem-url "http://linmodems.technion.ac.il/packages/scanModem.gz">
<!ENTITY ext2fs-url "http://www.fs-driver.org/index.html">
<!ENTITY mvb-tar "mvb_1.6.tgz">
<!ENTITY mvb-url "http://www.xscd.com/pub/mvb/&mvb-tar;">
<!-- TLDP --><!ENTITY ldp-pre-install-check "http://tldp.org/HOWTO/Pre-Installation-Checklist/">
<!-- LANGUAGES (sorted by two letter code)--><!ENTITY Afar "aa">
<!ENTITY Abkhazian "ab">
<!ENTITY Afrikaans "af">
<!ENTITY Amharic "af">
<!ENTITY Arabic "ar">
<!ENTITY Assamese "as">
<!ENTITY Aymara "ay">
<!ENTITY Azerbaijani "az">
<!ENTITY Bashkir "ba">
<!ENTITY Byelorussian "be">
<!ENTITY Bulgarian "bg">
<!ENTITY Bihari "bh">
<!ENTITY Bislama "bi">
<!ENTITY Bangla "bn">
<!ENTITY Bengali "bn">
<!ENTITY Tibetan "bo">
<!ENTITY Breton "br">
<!ENTITY Catalan "ca">
<!ENTITY Corsican "co">
<!ENTITY Czech "cs">
<!ENTITY Welsh "cy">
<!ENTITY Danish "da">
<!ENTITY German "de">
<!ENTITY Bhutani "dz">
<!ENTITY Greek "el">
<!-- <!ENTITY EnglishAmerican 'en'> --><!ENTITY EnglishAmerican "C">
<!ENTITY Esperanto "eo">
<!ENTITY Spanish "es">
<!ENTITY Estonian "et">
<!ENTITY Basque "eu">
<!ENTITY Persian "fa">
<!ENTITY Finnish "fi">
<!ENTITY Fiji "fj">
<!ENTITY Faeroese "fo">
<!ENTITY French "fr">
<!ENTITY Frisian "fy">
<!ENTITY Irish "ga">
<!ENTITY Gaelic "gd">
<!ENTITY ScotsGaelic "gd">
<!ENTITY Galician "gl">
<!ENTITY Guarani "gn">
<!ENTITY Gujarati "gu">
<!ENTITY Hausa "ha">
<!ENTITY Hindi "hi">
<!ENTITY Croatian "hr">
<!ENTITY Hungarian "hu">
<!ENTITY Armenian "hy">
<!ENTITY Interlingua "ia">
<!ENTITY Interlingue "ie">
<!ENTITY Inupiak "ik">
<!ENTITY Indonesian "in">
<!ENTITY Icelandic "is">
<!ENTITY Italian "it">
<!ENTITY Hebrew "iw">
<!ENTITY Japanese "ja">
<!ENTITY Yiddish "ji">
<!ENTITY Javanese "jw">
<!ENTITY Georgian "ka">
<!ENTITY Kazakh "kk">
<!ENTITY Greenlandic "kl">
<!ENTITY Cambodian "km">
<!ENTITY Kannada "kn">
<!ENTITY Korean "ko">
<!ENTITY Kashmiri "ks">
<!ENTITY Kurdish "ku">
<!ENTITY Kirghiz "ky">
<!ENTITY Latin "la">
<!ENTITY Lingala "ln">
<!ENTITY Laothian "lo">
<!ENTITY Lithuanian "lt">
<!ENTITY Latvian "lv">
<!ENTITY Lettish "lv">
<!ENTITY Malagasy "mg">
<!ENTITY Maori "mi">
<!ENTITY Macedonian "mk">
<!ENTITY Malayalam "ml">
<!ENTITY Mongolian "mn">
<!ENTITY Moldavian "mo">
<!ENTITY Marathi "mr">
<!ENTITY Malay "ms">
<!ENTITY Maltese "mt">
<!ENTITY Burmese "my">
<!ENTITY Nauru "na">
<!ENTITY Nepali "ne">
<!ENTITY Dutch "nl">
<!ENTITY Norwegian "no">
<!ENTITY Occitan "oc">
<!ENTITY Afan "om">
<!ENTITY Oromo "om">
<!ENTITY Oriya "or">
<!ENTITY Punjabi "pa">
<!ENTITY Polish "pl">
<!ENTITY Pushto "ps">
<!ENTITY Pashto "ps">
<!ENTITY Portuguese "pt">
<!ENTITY Quechua "qu">
<!ENTITY Rhaeto-Romance "rm">
<!ENTITY Kirundi "rn">
<!ENTITY Romanian "ro">
<!ENTITY Russian "ru">
<!ENTITY Kinyarwanda "rw">
<!ENTITY Sanskrit "sa">
<!ENTITY Sindhi "sd">
<!ENTITY Sangro "sg">
<!ENTITY Serbo-Croatian "sh">
<!ENTITY Singhalese "si">
<!ENTITY Slovak "sk">
<!ENTITY Slovenian "sl">
<!ENTITY Samoan "sm">
<!ENTITY Shona "sn">
<!ENTITY Somali "so">
<!ENTITY Albanian "sq">
<!ENTITY Serbian "sr">
<!ENTITY Siswati "ss">
<!ENTITY Sesotho "st">
<!ENTITY Sudanese "su">
<!ENTITY Swedish "sv">
<!ENTITY Swahili "sw">
<!ENTITY Tamil "ta">
<!ENTITY Tegulu "te">
<!ENTITY Tajik "tg">
<!ENTITY Thai "th">
<!ENTITY Tigrinya "ti">
<!ENTITY Turkmen "tk">
<!ENTITY Tagalog "tl">
<!ENTITY Setswana "tn">
<!ENTITY Tonga "to">
<!ENTITY Turkish "tr">
<!ENTITY Tsonga "ts">
<!ENTITY Tatar "tt">
<!ENTITY Twi "tw">
<!ENTITY Ukrainian "uk">
<!ENTITY Urdu "ur">
<!ENTITY Uzbek "uz">
<!ENTITY Vietnamese "vi">
<!ENTITY Volapuk "vo">
<!ENTITY Wolof "wo">
<!ENTITY Xhosa "xh">
<!ENTITY Yoruba "yo">
<!ENTITY Chinese "zh">
<!ENTITY Zulu "zu">
<!ENTITY % genericent SYSTEM "../../libs/generic.ent">
<!ENTITY sg-title "Server Guide">
<!ENTITY secguide-title "Security Guide">
<!ENTITY installguide-rev "0.1">
<!ENTITY % cdo-C SYSTEM "../../../libs/cdo-C.ent">
<!-- COMMON DOC OBJECTS --><!ENTITY copyright SYSTEM "../common/C/copyright.xml">
<!ENTITY conventions SYSTEM "../common/C/conventions.xml">
<!ENTITY feedback SYSTEM "../common/C/feedback.xml">
<!ENTITY publisher SYSTEM "../common/C/publisher.xml">
<!ENTITY legalnotice SYSTEM "../common/C/legalnotice.xml">
<!ENTITY disclaimer SYSTEM "../common/C/disclaimer.xml">
<!ENTITY inline-ubuntu-icon SYSTEM "../common/C/inlinemediaobject-ubuntu-icon.xml">
<!ENTITY inline-ubuntu-icon-header SYSTEM "../common/C/inlinemediaobject-ubuntu-icon-header.xml">
<!ENTITY relative-ubuntu-icon SYSTEM "../common/C/mediaobject-relative-ubuntu-icon.xml">
<!ENTITY ubuntu-icon SYSTEM "../common/C/mediaobject-ubuntu-icon.xml">
<!ENTITY gpl SYSTEM "../common/C/gpl.xml">
<!ENTITY fdl SYSTEM "../common/C/fdl.xml">
<!ENTITY cc-by-sa SYSTEM "../common/C/ccbysa.xml">
<!ENTITY % gnome-menus-C SYSTEM "../../../ubuntu/libs/gnome-menus-C.ent">
<!-- MENUS --><!-- Please keep entries alphabetical, it makes them much easier to find & use --><!ENTITY about-me SYSTEM "../menus/C/about-me.xml">
<!ENTITY accessories SYSTEM "../menus/C/accessories.xml">
<!ENTITY acro-read SYSTEM "../menus/C/acro-read.xml">
<!ENTITY administration SYSTEM "../menus/C/administration.xml">
<!ENTITY amule SYSTEM "../menus/C/amule.xml">
<!ENTITY archive-man SYSTEM "../menus/C/archive-man.xml">
<!ENTITY assistive-technology-preferences SYSTEM "../menus/C/assistive-technology-preferences.xml">
<!ENTITY azureus SYSTEM "../menus/C/azureus.xml">
<!ENTITY blender3d SYSTEM "../menus/C/blender3d.xml">
<!ENTITY boot SYSTEM "../menus/C/boot.xml">
<!ENTITY calculator SYSTEM "../menus/C/calculator.xml">
<!ENTITY character-map SYSTEM "../menus/C/character-map.xml">
<!ENTITY desktop-background SYSTEM "../menus/C/desktop-background.xml">
<!ENTITY desktop-preferences SYSTEM "../menus/C/desktop-preferences.xml">
<!ENTITY device-manager SYSTEM "../menus/C/device-manager.xml">
<!ENTITY dictionary SYSTEM "../menus/C/dictionary.xml">
<!ENTITY disks SYSTEM "../menus/C/disks.xml">
<!ENTITY downloader-x SYSTEM "../menus/C/downloader-x.xml">
<!ENTITY file-management SYSTEM "../menus/C/file-management.xml">
<!ENTITY firefox SYSTEM "../menus/C/firefox.xml">
<!ENTITY firestarter-firewall-tool SYSTEM "../menus/C/firestarter-firewall-tool.xml">
<!ENTITY font SYSTEM "../menus/C/font.xml">
<!ENTITY gaim SYSTEM "../menus/C/gaim.xml">
<!ENTITY games SYSTEM "../menus/C/games.xml">
<!ENTITY gftp SYSTEM "../menus/C/gftp.xml">
<!ENTITY gimp SYSTEM "../menus/C/gimp.xml">
<!ENTITY gnome-app-install SYSTEM "../menus/C/gnomeappinstall.xml">
<!ENTITY gnome-config-editor SYSTEM "../menus/C/gnome-config-editor.xml">
<!ENTITY gparted SYSTEM "../menus/C/gparted.xml">
<!ENTITY graphics SYSTEM "../menus/C/graphics.xml">
<!ENTITY gthumb SYSTEM "../menus/C/gthumb.xml">
<!ENTITY home-folder SYSTEM "../menus/C/home-folder.xml">
<!ENTITY inkscape SYSTEM "../menus/C/inkscape.xml">
<!ENTITY internet SYSTEM "../menus/C/internet.xml">
<!ENTITY keyboard SYSTEM "../menus/C/keyboard.xml">
<!ENTITY keyboard-shortcuts SYSTEM "../menus/C/keyboard-shortcuts.xml">
<!ENTITY limewire SYSTEM "../menus/C/limewire.xml">
<!ENTITY login-screen-setup SYSTEM "../menus/C/login-screen-setup.xml">
<!ENTITY logout SYSTEM "../menus/C/logout.xml">
<!ENTITY menu-editor SYSTEM "../menus/C/menu-editor.xml">
<!ENTITY menus-and-toolbars SYSTEM "../menus/C/menus-and-toolbars.xml">
<!ENTITY mouse SYSTEM "../menus/C/mouse.xml">
<!ENTITY multimedia-systems-selector SYSTEM "../menus/C/multimedia-systems-selector.xml">
<!ENTITY network-proxy SYSTEM "../menus/C/network-proxy.xml">
<!ENTITY networking SYSTEM "../menus/C/networking.xml">
<!ENTITY nvu SYSTEM "../menus/C/nvu.xml">
<!ENTITY open-office SYSTEM "../menus/C/open-office.xml">
<!ENTITY palmos-devices SYSTEM "../menus/C/palmos-devices.xml">
<!ENTITY preferred-applications SYSTEM "../menus/C/preferred-applications.xml">
<!ENTITY printing SYSTEM "../menus/C/printing.xml">
<!ENTITY qtparted SYSTEM "../menus/C/qtparted.xml">
<!ENTITY remote-desktop SYSTEM "../menus/C/remote-desktop.xml">
<!ENTITY removable-drives-and-media SYSTEM "../menus/C/removable-drives-and-media.xml">
<!ENTITY realplayer SYSTEM "../menus/C/realplayer.xml">
<!ENTITY rhythmbox SYSTEM "../menus/C/rhythmbox.xml">
<!ENTITY route-planner SYSTEM "../menus/C/route-planner.xml">
<!ENTITY screen-resolution SYSTEM "../menus/C/screen-resolution.xml">
<!ENTITY screensaver SYSTEM "../menus/C/screensaver.xml">
<!ENTITY scribus SYSTEM "../menus/C/scribus.xml">
<!ENTITY services SYSTEM "../menus/C/services.xml">
<!ENTITY sessions SYSTEM "../menus/C/sessions.xml">
<!ENTITY shared-folders SYSTEM "../menus/C/shared-folders.xml">
<!ENTITY skype SYSTEM "../menus/C/skype.xml">
<!ENTITY software-properties SYSTEM "../menus/C/software-properties.xml">
<!ENTITY sound SYSTEM "../menus/C/sound.xml">
<!ENTITY soundandvideo SYSTEM "../menus/C/soundandvideo.xml">
<!ENTITY synaptic SYSTEM "../menus/C/synaptic.xml">
<!ENTITY systemtools SYSTEM "../menus/C/systemtools.xml">
<!ENTITY terminal SYSTEM "../menus/C/terminal.xml">
<!ENTITY text-editor SYSTEM "../menus/C/text-editor.xml">
<!ENTITY theme SYSTEM "../menus/C/theme.xml">
<!ENTITY time-date SYSTEM "../menus/C/time-date.xml">
<!ENTITY totem SYSTEM "../menus/C/totem.xml">
<!ENTITY ubuntu-update-manager SYSTEM "../menus/C/ubuntu-update-manager.xml">
<!ENTITY users SYSTEM "../menus/C/users.xml">
<!ENTITY users-groups SYSTEM "../menus/C/users-groups.xml">
<!ENTITY windows SYSTEM "../menus/C/windows.xml">
<!ENTITY xchat-gnome SYSTEM "../menus/C/xchat-gnome.xml">
<!ENTITY xine SYSTEM "../menus/C/xine.xml">
<!ENTITY xmms SYSTEM "../menus/C/xmms.xml">
<!ENTITY % xinclude SYSTEM "../../../libs/xinclude.mod">
<!ELEMENT xi:include (xi:fallback)?>
<!ATTLIST xi:include xmlns:xi CDATA #FIXED "http://www.w3.org/2001/XInclude">
<!ATTLIST xi:include href CDATA #REQUIRED>
<!ATTLIST xi:include parse (xml | text) "xml">
<!ATTLIST xi:include xpointer CDATA #IMPLIED>
<!ATTLIST xi:include encoding CDATA #IMPLIED>
<!ATTLIST xi:include accept CDATA #IMPLIED>
<!ATTLIST xi:include accept-charset CDATA #IMPLIED>
<!ATTLIST xi:include accept-language CDATA #IMPLIED>
<!ELEMENT xi:fallback ANY>
<!ATTLIST xi:fallback xmlns:xi CDATA #FIXED "http://www.w3.org/2001/XInclude">
<!ENTITY % local.preface.class "| xi:include">
<!ENTITY % local.part.class "| xi:include">
<!ENTITY % local.chapter.class "| xi:include">
<!ENTITY % local.divcomponent.mix "| xi:include">
<!ENTITY % local.para.char.mix "| xi:include">
<!ENTITY % local.info.class "| xi:include">
<!ENTITY % local.common.attrib "xmlns:xi            CDATA       #FIXED       'http://www.w3.org/2001/XInclude'">
<!ENTITY language "&EnglishAmerican;">
]>
<chapter id="networking" status="complete">
	<title>联网</title>
  <para>网络是由两个或两个以上的设备通过物理线缆或无线连接而成并在连接设备之间共享和分发信息。这些设备包括计算机系统、打印机或用有线或无线连接起来的其它相关设备。</para>
  <para>Ubuntu 服务器版指南的这部分提供与联网相关的一般和特定信息，包括网络概念的简介以及对常用网络协议及服务器应用程序的详细讨论。</para>
	<sect1 id="network-configuration" status="complete">
		<title>网络配置</title>
          <para>Ubuntu 提供了许多图形化工具来配制您的网络设备。本文适用于服务器管理员并聚焦在命令行中管理您的网络。</para>
      <sect2 id="ethernet" status="complete">
        <title>以太网</title> 
          <para>
		  Most ethernet configuration is centralized in a single file,
		  <filename>/etc/network/interfaces</filename>.  If you have no ethernet devices, only
		  the loopback interface will appear in this file, and it will look something like
		  this:
		  <screen># This file describes the network interfaces available on your system
# and how to activate them. For more information, see interfaces(5).

# The loopback network interface
auto lo
iface lo inet loopback
address 127.0.0.1
netmask 255.0.0.0</screen>
		If you have only one ethernet device, eth0, and it gets its configuration from a DHCP server,
		and it should come up automatically at boot, only two additional lines are required:
		<screen>auto eth0
iface eth0 inet dhcp</screen>
		The first line specifies that the eth0 device should come up automatically when you boot.
		The second line means that interface (<quote>iface</quote>) eth0 should have an IPv4 address
		space (replace <quote>inet</quote> with <quote>inet6</quote> for an IPv6 device) and that
		it should get its configuration automatically from DHCP.  Assuming your network and DHCP
		server are properly configured, this machine's network should need no further configuration to
		operate properly.  The DHCP server will provide the default gateway (implemented via the
		<application>route</application> command), the device's IP address (implemented via the 
		<application>ifconfig</application> command), and and DNS servers used on the network
		(implemented in the <filename>/etc/resolv.conf</filename> file.)</para>
		<para>To configure your ethernet device with a static IP address and custom configuration,
		some more information will be required.  Suppose you want to assign the IP address
		192.168.0.2 to the device eth1, with the typical netmask of 255.255.255.0.  Your default
		gateway's IP address is 192.168.0.1.  You would enter something like this into
		<filename>/etc/network/interfaces</filename>:
		<screen>iface eth1 inet static
	address 192.168.0.2
	netmask 255.255.255.0
	gateway 192.168.0.1</screen>
		In this case, you will need to specify your DNS servers manually in
		<filename>/etc/resolv.conf</filename>, which should look something like this:
		<screen>search mydomain.com
nameserver 192.168.0.1
nameserver 4.2.2.2</screen>
		The <emphasis role="italics">search</emphasis> directive will append mydomain.com
		to hostname queries in an attempt to resolve names to your network.  For example,
		if your network's domain is mydomain.com and you try to ping the host
		<quote>mybox</quote>, the DNS query will be modified to <quote>mybox.mydomain.com</quote>
		for resolution.  The <emphasis role="italics">nameserver</emphasis> directives
		specifiy DNS servers to be used to resolve hostnames to IP addresses.  If you use
		your own nameserver, enter it here.  Otherwise, ask your Internet Service Provider
		for the primary and secondary DNS servers to use, and enter them into
		<filename>/etc/resolv.conf</filename> as shown above.</para>
		<para>Many more configurations are possible, including dialup PPP interfaces, IPv6
		networking, VPN devices, etc.  Refer to <application>man 5 interfaces</application>
		for more information and supported options.  Remember that
		<filename>/etc/network/interfaces</filename> is used by the 
		<application>ifup</application>/<application>ifdown</application> scripts as a
		higher level configuration scheme than may be used in some other Linux distributions,
		and that the traditional, lower level utilities such as <application>ifconfig</application>,
		<application>route</application>, and <application>dhclient</application> are still
		available to you for ad hoc configurations.
		</para>
      </sect2>
      <sect2 id="managing-dns-entries" status="complete">
          <title>管理 DNS 记录</title>
            <para>本部分说明如何配置用来将IP地址解析成主机名或相反功能的名称服务，而不是说如何将整个系统配置成一个名称服务器。</para>
            <para>要管理 DNS 记录，您可以从 <filename>/etc/resolv.conf</filename> 文件中添加、编辑或删除 DNS 名。</para>
<programlisting>
search com
nameserver 204.11.126.131
nameserver 64.125.134.133
nameserver 64.125.134.132
nameserver 208.185.179.218
</programlisting>
            
            <para><application>search</application> 关键字指字为未完成主机名添加的字符串，在这里我们使用<application>com</application>。因此当我们运行：<command>ping ubuntu</command> 时它被理解成 <command>ping ubuntu.com</command>。</para> 

            <para><application>nameserver</application> 关键字指定名称服务器的 IP 地址，它将被用来解析 IP 地址或主机名。该文件可以有多个名称服务器记录。名称服务器将按相同顺序进行网络查询。</para>

            <warning>
            <para>如果 DNS 服务器名称是通过 DHCP 或 PPPOE 动态取回的(从您 ISP 取回)，那么不要在该文件中添加名称服务器记录。它将被自动更新。</para>
            </warning>

        </sect2>
        <sect2 id="managing-hosts" status="complete">
          <title>管理主机</title>
            <para>要管理主机，您可以在 <filename>/etc/hosts</filename> 文件中添加、编辑或删除主机。该文件包括 IP 地址和相对应的主机名。当您的系统要解析一个主机到 IP 地址或从一个 IP 地址获取主机名时，它将在使用名称服务器之前参考 <filename>/etc/hosts</filename> 文件。如果该 IP 地址已经在 <filename>/etc/hosts</filename> 文件中被列出，那么将不再使用名称服务器。这一动作可以通过编辑 <filename> /etc/nsswitch.conf</filename> 来改变，不过后果自负。</para>

            <para>如果您网络所包含计算机的 IP 地址没有在 DNS 中列出，建议您将它们加入到 <filename>/etc/hosts</filename> 文件中。</para>
        </sect2>
    </sect1>
	<sect1 id="tcpip" status="complete">
		<title>TCP/IP</title>
          <para>传输控制协议和网际协议 (TCP/IP) 是在 20世纪70年代被美国国防部高级研究规划局 (DARPA)作为在不同类型计算机及计算机网络之间的通信手段而被开发的一个标准协议簇。TCP/IP 是 Internet 的驱动力，因此它是全球最流行的网络协议簇。</para>
      <sect2 id="tcpip-introduction" status="complete">
        <title>TCP/IP 介绍</title> 
          <para>TCP/IP 的两个协议组件处理计算机网络的不同方面。<emphasis>网际协议</emphasis>，TCP/IP 中的 "IP" 是一个连接协议，只处理使用 <emphasis role="italics">IP 数据报</emphasis> 作为网络信息基本单元的网络包路由。IP 数据报由报头和其后的消息组成。<emphasis>传输控制协议</emphasis> 是 TCP/IP 中的 "TCP"，可以使网络主机之间建立用于交换数据流的连接。TCP 也保证连接之间的数据传送以及其在网络主机上的接收顺序与其从另一台网络主机上的发送顺序一致。</para>
          </sect2>
        <sect2 id="tcpip-configuration" status="complete">
          <title>TCP/IP 配置</title>
            <para>TCP/IP 协议配置由必须设置的几个元素组成，可以通过编辑相应的配置文件或配置方案如动态主机配置协议 (DHCP) 来设置，它可以配置成提供适当的 TCP/IP 配置来自动设置网络客户机。这些配置值必须正确设置，以便于您的 Ubuntu 系统进行相应网络操作。</para>
            <para>TCP/IP 常用配置元素及其作用如下所示：<itemizedlist>
               <listitem>
                  <para><emphasis role="bold">IP 地址</emphasis> IP 地址是唯一标识字符串，它由四部分由点号分隔的，范围从 0 到 255 的十进制数组成。 每部分由8个比特表示，整个地址总长为32个比特。这种格式被称为 <emphasis>dotted quad notation</emphasis>。</para>
                     <para>IP 地址根据组成地址的位数用类来定义相应的网络和主机范围。有四个主要地址类：A、B、C 和 D。A 类 IP 地址通常用于非常大的组织，其格式为 <emphasis>网络.主机.主机.主机</emphasis> 而更常用的 C 类地址则可用于较小的组织，经常被 Internet 服务供应商用于特别的主机用户。C 类地址类似 <emphasis>网络.网络.网络.主机</emphasis> D 类地址是特殊的，被称为 <emphasis>组播</emphasis> 地址。合法 IP 地址的例子如 127.0.0.1 和 82.211.81.166。</para>
               </listitem>
               <listitem>
                  <para><emphasis role="bold">掩码</emphasis> 子网掩码 (或简称<emphasis>掩码</emphasis>) 是一个局部位掩码，或用指定的 <emphasis>子网掩码</emphasis> 来将IP 地址中的网络分隔出来的一组标识。举个例子，在 C 类网络中，标准的掩码是 255.255.255.0 屏蔽了 IP 地址的前三个字节，并允许 IP 地址的最后一个字节指定子网中的主机。</para>
               </listitem>
               <listitem>
                  <para><emphasis role="bold">网络地址</emphasis> 网络地址表示包括IP 地址网络部分的字节。 例如， 一个 A 类网络的主机 12.128.1.2 将使用 12.0.0.0 作为网络地址，使用 12 来表示 IP 地址的第一个字节 (网络部分)， 余下的三个为 0 的字节表示可能的主机值的。网络主机使用象 192.168.1.100 这样非常普遍的不可路由的私有 IP 地址将使用 192.168.1.0 网络地址，用前三个字节来指定 C 类 192.168.1 网络，而用一个 0 来表示网络上所有可能的主机。</para>
               </listitem>
               <listitem>
                  <para><emphasis role="bold">广播地址</emphasis> 广播地址是一个允许向给定子网中的所有主机而不是一台特定的网络主机同时发送网络数据的 IP 地址。一般标准 IP 网络的地址是 255.255.255.255，但这个广播地址不能用来为 Internet 网上的每台主机发送一个广播消息，因为路由器会阻止它。更适当的广播地址设置是匹配特定子网的。例如，在流行的私有 C 类 IP 网 192.168.1.0 中，广播地址应该设为 192.168.1.255。广播消息一般都是由网络协议产生的，如地址识别协议 (ARP) 和路由信息协议 (RIP)。</para>
               </listitem>
               <listitem>
                  <para><emphasis role="bold">网关地址</emphasis> 网关地址是一个通过该地址可能会到达指定网络或网络主机的 IP 地址。如果一台网络主机希望与另一台网络主机通讯，而该机并不在同一网络中，而是要传输到另一个网络或主机上，如 Internet 主机。网关地址设置必须正确，否则您的系统将不能到达不在同一网络中的任何主机。</para>
               </listitem>
               <listitem>
                  <para><emphasis role="bold">名称服务器地址</emphasis> 名称服务器地址表示域名服务 (DNS) 系统的 IP 地址。该系统将网络主机名解析成 IP 地址。可以按顺序来指定三个不同优先级的名称服务器地址：<emphasis>主</emphasis> 名称服务器，<emphasis>次</emphasis> 名称服务器，和 <emphasis>第三</emphasis> 名称服务器。按顺序为您系统将网络主机名解析成相应的 IP 地址，你必须指定合法的名称服务器地址，该地址应该在您系统的 TCP/IP 配置中被授权使用。在许多情况下这些地址可以也应该被您的网络服务供应商提供，但也可以使用许多免费的、可供公众访问的名称服务器，如 IP 从 4.2.2.1 到 4.2.2.6 的 Level3 (Verizon) 服务器。</para>
                     <tip>
                        <para>IP 地址、掩码、网络地址、广播地址以及网关地址一般都是在文件 <filename>/etc/network/interfaces</filename> 中通过相应的语句来指定的。名称服务器地址一般是在文件 <filename>/etc/resolv.conf</filename> 中通过 <emphasis>nameserver</emphasis> 语句来指定的。更多详情，请分别查阅 <filename>interfaces</filename> 或 <filename>resolv.conf</filename> 的系统手册页。</para>
                     </tip>
                    <para>查阅 <filename>interfaces</filename> 系统手册页，可用以下命令：</para>
                    <para>
<screen>
<command>man interfaces</command>
</screen>
                    </para>
                    <para>查阅 <filename>resolv.conf</filename> 系统手册页，用以下命令：</para>
                    <para>
<screen><command>man resolv.conf</command></screen>
                    </para>
               </listitem>
            </itemizedlist></para>
        </sect2>
        <sect2 id="ip-routing" status="complete">
          <title>IP 路由</title>
            <para>IP 路由是在 TCP/IP 网络上为可能发送的网络数据指明或发现路径。路由使用一组<emphasis>路由表</emphasis>来指示网络数据包从源地址转发到目的地，经常是通过许多叫做路由器的网络节点做中转。IP 路由是 Internet 上路径发现的主要方式。IP 路由分为两种形式：<emphasis>静态路由</emphasis> 和 <emphasis>动态路由</emphasis>。</para>
            <para>静态路由包含向系统路由表中手工添加的 IP 路由，一般是通过 <application>route</application> 命令来向路由表手工添加的。静态路由与动态路由相比有许多优点，如在小网络中实施简单，有可预测性 (路由表总是事先算好，因此路由在每次使用时都相当一致)，在其它路由器和网络链路处理上比动态路由协议开销小。然而，静态路由也有一些缺点。如静态路由只限于小网络而且不能很好地进行调整。静态路由由于路由固定的特性，因此根本无法根据路由来适应网络中断和故障。</para>
            <para>动态路由有赖于从一个源到目的有多条可用 IP 路由的大型网络，利用特定的路由协议，如路由信息协议 (RIP)，可以自动调整路由表以生成可能的动态路由。动态路由相对静态路由有几个优点,如拥有较大的伸缩性和能根据网络路由来适应网络中断和故障。另外，几乎无须手工配置路由表，因为路由器可以相互学到其他已有并且可用的路由器。这一特性也消除了由于人为错误而在路由表中引入错误的可能。然而，动态路由也并不完美，其表现出来的缺点如相当复杂以及由于路由器通讯所带来的额外的网络开销，并不能使最终用户由此获益，并却一直消耗着网络带宽。</para>
        </sect2>
        <sect2 id="tcp-and-udp" status="complete">
          <title>TCP 和 UDP</title>
            <para>TCP 是一个基于连接的协议，提供纠错并通过 <emphasis>流量控制</emphasis> 来传输数据。流量控制决定什么时间一个数据流需要停止，例如在出现诸如 <emphasis>冲突</emphasis> 等问题时重发先前发送的数据包，以确保完整和准确的数据传输。TCP 常用于重要信息的交换，如数据库传输。</para>
            <para>另一方面，用户数据报协议 (UDP) 是一个 <emphasis>无连接</emphasis> 协议，很少用于重要数据的传输，因为缺乏流量控制或其他一些确保可靠数据传输的方法。UDP 常用在如音视频流这样的应用程序，由于它缺少纠错和流控，因此相对于 TCP 来说更快，而且丢失少量包通常也不会造成灾难性的后果。</para>
        </sect2>
        <sect2 id="icmp" status="complete">
          <title>ICMP</title>
            <para>Internet 控制消息协议是在Request For Comments (RFC) #792 中定义的，是对网际协议 (IP) 的一个扩充。支持的网络包包括控制、错误和信息的消息。ICMP 常被用在诸如判断一台网络主机或设备可用性的 <application>ping</application> 工具这样的网络应用程序。在网络主机和设备如路由器之间使用 ICMP 所返回的错误消息示例包括 <emphasis>Destination Unreachable</emphasis> 和 <emphasis>Time Exceeded</emphasis>。</para>
        </sect2>
        <sect2 id="daemons" status="complete">
          <title>守护程序</title>
            <para>守护程序是特殊的系统应用程序，一般常驻在后台并等待来自其他应用程序请求其所提供的功能。许多守护程序都是网络中心；在 Ubuntu 系统后台执行的许多守护程序都可以提供网络的相关功能。这些网络守护程序包括 <emphasis>超文本传输协议守护程序</emphasis> (httpd)，用于提供网站服务器功能；<emphasis>Secure SHell 守护程序</emphasis> (sshd)，用于提供安全远程登录 shell 和文件传输功能；<emphasis>Internet Message Access Protocol 守护程序</emphasis> (imapd)，用于提供 E-Mail 服务。</para>
        </sect2>
    </sect1>
	<sect1 id="firewall-configuration" status="help">
		<title>防火墙配置</title>
          <para>Linux 内核包括 <emphasis>Netfilter</emphasis> 子系统，用来处理或决定网络传输头部进入或穿过你的服务器，目前所有的 Linux 防火墙都用该系统来做包过滤。</para>
        <sect2 id="firewall-introduction" status="help">
          <title>防火墙介绍</title>
            <para>内核的包过滤系统如果没有一个用户态 (userspace) 界面来管理它的话对管理员来说几乎没有用。这正是 iptables 的目的。当一个包到达您的服务器，它从用户态 (userspace) 通过 iptables 传给 Netfilter 子系统，然后基于提供的规则去接受、操作或拒绝。因此，如果你能熟悉它的话，那么 iptables 就是您管理您防火墙所需的全部。</para>
        </sect2>
        <sect2 id="ip-masquerading" status="help">
          <title>IP 伪装</title>
            <para>IP 伪装的目的是为了允许您网络上那些有着私有的、不可路由的 IP 地址的机器可以通过做伪装的机器访问 Internet。来自您私有网络并要访问 Internet 的传输必须是可以操作的，也就是说回复要可以被路由回来以送到发出请求的机器上。要做到这一点，内核必须修改每个包 <emphasis>源</emphasis> IP 地址以便回复能被路由回它这里，而不是发出请求的私有 IP 地址，因为它们对于 Internet 来说是不存在的。Linux 使用 <emphasis>Connection Tracking</emphasis> (conntrack) 来保持那个连接是属于哪个机器的，并相应地对每个返回包重新做路由。发自您私有网络的流量就这样被伪装成源于您的网关机器。这一过程在 Microsoft 文档中被称为 Internet 连接共享。</para>
			<para>这可以用单条 iptables 规则来完成，也许基于您网络配置来说会有一些小的差异：<screen>sudo iptables -t nat -A POSTROUTING -s 192.168.0.0/16 -o ppp0 -j MASQUERADE</screen> 上述命令假设您的私有地址空间是192.168.0.0/16，您与 Internet 相连的设备是 ppp0。语法分解如下所示：<itemizedlist>
				  <listitem><para>-t nat -- 该规则将进入 nat 表</para></listitem>
				  <listitem><para>-A POSTROUTING -- 该规则将被追加 (-A) 到 POSTROUTING 链</para></listitem>
				  <listitem><para>-s 192.168.0.0/16 -- 该规则将被应用在源自指定地址空间的流量上</para></listitem>
				  <listitem><para>-o ppp0 -- 该规则应用于计划通过指定网络设备的流量。</para></listitem>
				  <listitem><para>-j MASQUERADE -- 匹配该规则的流量将如上所述 "跳转" (-j) 到 MASQUERADE (伪装) 目标。</para></listitem>
			  </itemizedlist></para>
			<para>在过滤表 (缺省表，在那里有着大多数或全部包过滤指令) 中的每条链 (chain) 都有一个默认的 ACCEPT <emphasis>策略</emphasis>，但如果您还在网关设备上设置防火墙，那么您也许还要设置 DROP 或 REJECT 策略，这时您被伪装过的流量还需要被 FORWARD 链 (chain) 中的规则允许才能正常工作：<screen>sudo iptables -A FORWARD -s 192.168.0.0/16 -o ppp0 -j ACCEPT
sudo iptables -A FORWARD -d 192.168.0.0/16 -m state --state ESTABLISHED,RELATED -i ppp0 -j ACCEPT</screen> 上述命令将允许通过从您局域网到 Internet 的所有连接，这些连接所有的相关流量也都返回到发起它们的机器。</para>
        </sect2>
        <sect2 id="firewall-tools" status="help">
          <title>工具</title>
            <para>有很多工具可以帮助您构建一个完整的防火墙，而不需要 iptables 的专业知识。偏好图形界面的，<application>Firestarter</application> 非常流行也易于使用，<application>fwbuilder</application> 则非常强大而且其界面对于用过诸如 Checkpoint FireWall-1 商业防火墙工具的管理员来说相当熟悉。如果您偏好有着纯文本配置文档的命令行工具，<application>Shorewall</application> 是个非常强大的解决方案，可以帮您为任何网络配置一个高级防火墙。如果您的网络相对简单，或如果您没有网络，那么 <application>ipkungfu</application> 将给您一个无需配置就可以工作的防火墙，也允许您通过编辑简单友好的配置文件来轻松设置更高级的防火墙。另一个感兴趣的工具就是<application>fireflier</application>，被设计成桌面防火墙应用程序。它由一个服务器 (fireflier-server) 和可选的 GUI 客户端 (GTK 或 QT) 组成，操作就象 Windows 中许多流行的交互式防火墙应用程序一样。</para>
        </sect2>
        <sect2 id="firewall-logs" status="help">
          <title>日志</title>
            <para>防火墙日志主要是为了确认攻击、找出并解决您防火墙规则的问题以及注意您网络中不正常的活动。您必须在您防火墙中包含这些日志规则以便生成相应日志，虽然，日志规则必须优先于任何可应用的最终规则 (那些决定其目的包命运的规则，如ACCEPT、DROP 或 REJECT) 。<screen>sudo iptables -A INPUT -m state --state NEW -p tcp --dport 80 -j LOG --log-prefix "NEW_HTTP_CONN: "</screen> 一个从本机发起的对 80 端口的请求将会在 dmesg 中生成一条日志，如下所示：</para>
			<para>
			  <programlisting>[4304885.870000] NEW_HTTP_CONN: IN=lo OUT= MAC=00:00:00:00:00:00:00:00:00:00:00:00:08:00 SRC=127.0.0.1 DST=127.0.0.1 LEN=60 TOS=0x00 PREC=0x00 TTL=64 ID=58288 DF PROTO=TCP SPT=53981 DPT=80 WINDOW=32767 RES=0x00 SYN URGP=0</programlisting>
			</para>
			<para>上面的日志也会出现在<filename>/var/log/messages</filename>、<filename>/var/log/syslog</filename> 和 <filename>/var/log/kern.log</filename> 中。这一过程可以通过适当编辑 <filename>/etc/syslog.conf</filename> 或安装配置 <application>ulogd</application> 并用 ULOG 代替 LOG 来进行改变。<application>ulogd</application> 守护程序是一种用户态服务器可以监听来自内核的防火墙日志指令，并且能够将其写到任何您希望的文件中，甚至是 <application>PostgreSQL</application> 或 <application>MySQL</application> 数据库。使用诸如 <application>fwanalog</application>、<application>fwlogwatch</application> 或 <application>lire</application> 日志分析工具将会很轻松地弄懂您的防火墙日志。</para>
        </sect2>
    </sect1>
	<sect1 id="openssh-server" status="complete">
		<title>OpenSSH 服务器</title>
      <sect2 id="openssh-introduction">
        <title>介绍</title> 
           <para><phrase>Ubuntu</phrase> 服务器版指南的这部分内容介绍一个强大的远程控制网络计算机和在它们之间传输数据的工具集 <emphasis>OpenSSH</emphasis>。您也可以学到一些 OpenSSH 服务器应用程序的配置以及如何在您 Ubuntu 系统修改它们。</para>
          <para>OpenSSH 是Secure Shell (SSH) 协议工具集中的一个自由可用的版本，用以远程控制一台计算机或在计算机之间传输文件。完成这些功能的传统工具，如 <application>telnet</application> 或 <application>rcp</application> 等，是不安全的，它们在使用时用明文来传输用户的密码。OpenSSH 提供一个服务器守护程序和客户端工具来保障安全、加密的远程控制和文件传输操作，以有效地取代传统的工具。</para>
          <para>OpenSSH 服务器组组件 <application>sshd</application> 持续监听来自任何客户端工具的连接请求。当一个连接请求发生时，<application>sshd</application> 根据客户端连接的类型来设置当前连接。例如，如果远程计算机是通过 <application>ssh</application> 客户端应用程序来连接的话，OpenSSH 服务器将在认证之后设置一个远程控制会话。如果一个远程用户通过 <application>scp</application> 来连接 OpenSSH 服务器，OpenSSH 服务器将在认证之后开始服务器和客户机之间的安全文件拷贝。OpenSSH 可以支持多种认证模式，包括纯密码、公钥以及<application>Kerberos</application> 票据。</para>
          </sect2>
        <sect2 id="openssh-installation">
        <title>安装</title>
        <para>OpenSSH 客户端及服务器应用程序的安装是简单的。要在您 Ubuntu 系统中安装 OpenSSH 客户端应用程序，可以在终端提示符后使用以下命令：</para>
           <para>
<screen>
<command>sudo apt-get install openssh-client</command>
</screen>
           </para>
        <para>要安装 OpenSSH 服务器应用程序及相关的支持文件，可以在终端提示符后使用以下命令：</para>
           <para>
<screen>
<command>sudo apt-get install openssh-server</command>
</screen>
           </para>
        </sect2>
        <sect2 id="openssh-configuration">
          <title>配置</title>
            <para>您可以通过编辑 <filename>/etc/ssh/sshd_config</filename> 文件来配置 OpenSSH 服务器应用程序的缺省过程。关于该文件中使用的配置语句信息，您可以在终端提示符后运行下列命令来查阅相应的手册页：</para>
               <para>
<screen>
<command>man sshd_config</command>
</screen>
               </para>
            <para>在 <application>sshd</application> 配置文件中有许多语句来控制那些诸如通信设置和认证模式。下面是一个通过编辑 <filename>/etc/ssh/ssh_config</filename> 文件来改变配置语句的例子。</para>
            <tip>
               <para>在编辑配置文件之前，您应该生成一个原始文件的拷贝并对其写保护，以便您可以参考原始文件并在必要时重用它。</para>
               <para>拷贝 <filename>/etc/ssh/sshd_config</filename> 文件并对其写保护可以通过在终端提示符后运行下列命令：</para>
	    </tip>
               <para>
<screen>
<command>sudo cp /etc/ssh/sshd_config /etc/ssh/sshd_config.original</command>
<command>sudo chmod a-w /etc/ssh/sshd_config.original</command>
</screen>
               </para> 
            <para>以下是您可能更改配置语句的范例:</para>
           <itemizedlist>
               <listitem>
               <para>要设置您 OpenSSH 在 TCP 2222 端口而不是缺省的 TCP 20 端口监听，可以如下使用改变 Port 语句：</para>
               <para>Port 2222</para>
               </listitem>
	<listitem>
            <para>要让 <application>sshd</application> 允许基于公钥登录证书，可以简单添加或修改该行语句：</para>
               <para>PubkeyAuthentication yes</para>
            <para>到 <filename>/etc/ssh/sshd_config</filename> 文件中。如果已经存在，确保该行语句没有被注释。</para>
            </listitem>
            <listitem>
             <para>要使您的 OpenSSH 服务器显示 <filename>/etc/issue.net</filename> 文件的内容以作为预登录 Banner，只需简单地将下行添加或修改：</para>
               <para>Banner /etc/issue.net</para>
               <para>到 <filename>/etc/ssh/sshd_config</filename> 文件中即可。</para>
             </listitem>
             </itemizedlist>
	    <para>在修改 <filename>/etc/ssh/sshd_config</filename> 文件之后，保存该文件并重启 <application>sshd</application> 服务器应用程序以使之生效。可以在终端提示符后使用下列命令：</para>
               <para>
<screen>
<command>sudo /etc/init.d/ssh restart</command>
</screen>
               </para>
		<warning>
                           <para>许多其他的 <application>sshd</application> 配置语句可以使服务器应用程序按您的要求运行。然而，给您一个忠告，如果您访问服务器的唯一方法就是使用 <application>ssh</application>，而且您在通过 <filename>/etc/ssh/sshd_config</filename> 文件来配置 <application>sshd</application> 时犯了一个错误，那么在重启该服务之后您可能会发现您被锁在服务器外面了，或者是 <application>sshd</application> 服务在处理一个不正确的配置语句时拒绝启用。因此当在远程服务器上编辑该文件时要格外的小心。</para>
                        </warning>
        </sect2>
   <sect2 id="openssh-references" status="complete">
      <title>引用</title>
      <para>
      <ulink url="http://www.openssh.org/">OpenSSH 网站</ulink>
      </para>
      <para>
      <ulink url="https://wiki.ubuntu.com/AdvancedOpenSSH">高级 OpenSSH 维基页</ulink>
      </para>
   </sect2>
     </sect1>
	<sect1 id="ftp-server" status="complete">
        <title>FTP 服务器</title> 
            <para>文件传输协议 (FTP) 是一个 TCP 协议，用于在计算机之间上传和下载文件。FTP 工作在客户端/服务器模式下。服务器组件被称为 <emphasis>FTP 守护程序</emphasis>。它持续不断地临听来自远程客户端的 FTP 请求。当一个请求到达时，它管理登录和建立连接。在整个会话期间它执行 FTP 客户端发送来的任何命令。</para>
            <para>可以通过两种方式来管理 FTP 服务器的访问：</para>
            <itemizedlist spacing="compact">
                <listitem>
                    <para>匿名</para>
                </listitem>
                <listitem>
                    <para>授权</para>
                </listitem>
            </itemizedlist>
            <para>在匿名模式中，远程客户端可以使用 "anonymous" 或 "ftp" 缺省用户帐号并通过发送一个邮件地址做为密码来访问 FTP 服务器。在授权模式下一个用户必须拥有帐号和密码。用户所访问 FTP 服务器中目录和文件的权限是根据登录时所用帐号来定义的。一般来说，FTP 守护程序将隐藏在 FTP 服务器的根目录中并将其改到 FTP 家目录。这样就可以向远程传话隐藏文件系统的其他部分。</para>
            <sect2 id="vsftpd-ftp-server-installation" status="complete">
                <title>vsftpd - FTP 服务器安装</title>
                    <para>vsftpd 是可在 Ubuntu 中使用的 FTP 守护程序之一。它在安装、设置和维护方面十分方便。要安装 <application>vsftpd</application> 您可以使用下列命令：<screen> <command>sudo apt-get install vsftpd</command> </screen></para>

                </sect2>
            <sect2 id="vsftpd-ftp-server-configuration" status="complete">
                <title>vsftpd - FTP 服务器配置</title>
                <para>你可以编辑 vsftpd 配置文件，<filename>/etc/vsftpd.conf</filename>，来配置缺省设置。缺省状态下只允许匿名 FTP。如果您希望禁用该选项，您可以将下面这行：<programlisting>
anonymous_enable=YES
</programlisting> 改为 <programlisting>
anonymous_enable=NO
</programlisting>。缺省状态下，本地系统用户是不允许登录 FTP 服务器的。要改变该设置，您可以将下面这行反注释：<programlisting>
#local_enable=YES
</programlisting>。缺省状态下，允许用户从 FTP 下载文件，但不允许他们上传文件到 FTP 服务器。为了能够上传文件到 FTP 服务器，需要改变该设置，您可以将下面这行反注释掉：<programlisting>
#anon_upload_enable=YES
</programlisting>。配置文件包括许多配置参数。关于配置文件中的每个参数的信息都可以得到，或者您可以参考手册页，<command>man 5 vsftpd.conf</command> 说明每个参数的细节。</para>
                <para>一旦您配置好了 <application>vsftpd</application> 您就可以运行该守护程序了。您可以执行下列命令来运行<application>vsftpd</application> 守护进程：<screen> <command>sudo /etc/init.d/vsftpd start</command> </screen></para>
				<note><para>请注意在配置文件中缺省的设置主要是出于安全考虑。上面每一个改变都会使系统的安全性更小，所以请只在您需要时才改变他们。</para></note>
                </sect2>
    </sect1>
	<sect1 id="network-file-system" status="complete">
		<title>网络文件系统 (NFS)</title>
          <para>NFS 允许系统将其目录和文件共享给网络上的其他系统。通过 NFS，用户和应用程序可以访问远程系统上的文件，就象它们是本地文件一样。</para>

          <para>NFS 最值得注意的优点有：</para>

          <itemizedlist>
          <listitem>
      <para>本地工作站可以使用更少的磁盘空间，因为常用数据可以被保存在一台机器上，并让网络上的其他机器可以访问它。</para>
          </listitem>
          <listitem>
      <para>不需要为用户在每台网络机器上放一个用户目录。用户目录可以在 NFS 服务器上设置并使其在整个网络上可用。</para>
          </listitem>
          <listitem>

      <para>存储设备如软盘、光驱及 USB 设备可以被网络上其它机器使用。这可能可以减少网络上移动设备的数量。</para>
          </listitem>
          </itemizedlist>

      <sect2 id="nfs-installation" status="complete">
        <title>安装</title>
      
          <para>在终端提示符后键入以下命令安装 NFS 服务器：</para>
          <para>
<screen>
<command>sudo apt-get install nfs-kernel-server</command>
</screen>
          </para>
      </sect2>
      <sect2 id="nfs-configuration" status="complete">
        <title>配置</title>
          <para>您可以配置要输出的目录，您可以在 <filename>/etc/exports</filename> 文件中添加该目录。例如：</para>
          <para>
<screen>
/ubuntu *(ro,sync,no_root_squash)
/home *(rw,sync,no_root_squash)
</screen>
          </para>

          <para>您可以用主机名来代替 *。尽量指定主机名以便使那些不想其访问的系统访问 NFS 挂载的资源。</para>

          <para>您可以在终端提示符后运行以下命令来启动 NFS 服务器：</para>
          <para>
<screen>
<command>sudo /etc/init.d/nfs-kernel-server start</command>
</screen>
          </para>
      </sect2>
      <sect2 id="nfs-client-configuration" status="complete">
        <title>NFS 客户端配置</title>
          <para>使用 <application>mount</application> 命令来挂载其他机器共享的 NFS 目录。可以在终端提示符后输入以下类似的命令：</para>
          <para>
<screen>
<command>sudo mount example.hostname.com:/ubuntu /local/ubuntu</command>
</screen>
</para>
      <warning>
      <para>挂载点 <filename>/local/ubuntu</filename> 目录必须已经存在。而且在 <filename>/local/ubuntu</filename> 目录中没有文件或子目录。</para>
      </warning>

      <para>另一个挂载其他机器的 NFS 共享的方式就是在 <filename>/etc/fstab</filename> 文件中添加一行。该行必须指明 NFS 服务器的主机名、服务器输出的目录名以及挂载 NFS 共享的本机目录。</para>

      <para>以下是在 <filename>/etc/fstab</filename> 中的常用语法：</para>
      
      <para>
<programlisting>
example.hostname.com:/ubuntu /local/ubuntu nfs rsize=8192,wsize=8192,timeo=14,intr
</programlisting>
      </para>
      </sect2>
      <sect2 id="nfs-references" status="complete">
        <title>引用</title>
				<para><ulink url="http://nfs.sourceforge.net/">Linux NFS 常见问答</ulink></para>
      </sect2>
    </sect1>
	<sect1 id="dhcp" status="complete">
		<title>动态主机配置协议 (DHCP)</title>
            <para>动态主机配置协议 (DHCP) 是一种网络服务，相对于手工为每台网络主机配置，它使网络主机可能自动被服务器指定设置。被配置成 DHCP 客户端的计算机并不能控制其从 DHCP 服务器得到的设置，且该配置对于计算机用户来说是透明的。</para>
            <para>由 DHCP 服务器提供给 DHCP 客户端最常用的设置包括：</para>
            <itemizedlist spacing="compact">
                <listitem>
                    <para>IP 地址和掩码</para>
                </listitem>
                <listitem>
                    <para>DNS</para>
                </listitem>
                <listitem>
                    <para>WINS</para>
                </listitem>
            </itemizedlist>
            <para>然而，一个 DHCP 服务器也支持配置如下属性，如：</para>
            <itemizedlist spacing="compact">
                <listitem>
                    <para>主机名</para>
                </listitem>
                <listitem>
                    <para>域名</para>
                </listitem>
                <listitem>
                    <para>默认网关</para>
                </listitem>
                <listitem>
                    <para>时间服务器</para>
                </listitem>
                <listitem>
                    <para>打印服务器</para>
                </listitem>
            </itemizedlist>
            <para>使用 DHCP 的好处在于当网络发生改变如 DNS 服务器地址改变时，只需要在 DHCP 服务器中改变即可，所有网络主机将在其 DHCP 客户端下一次轮询 DHCP 服务器时被重新配置。另一个好处就是，它在将新计算机整合到网络时也更容易，因为不需要再检查 IP 地址的有效性。同时也减少 IP 地址的冲突。</para>
            <para>一个 DHCP 服务器可以用两个模式来提供配置设置</para>
            <variablelist>
                <varlistentry>
                    <term>MAC 地址</term>
                    <listitem>
                        <para>该模式需要用 DHCP 去标明连接到网上的每块网卡唯一的硬件地址，然后在 DHCP 客户端每次使用该网络设备发送给 DHCP 服务器请求时提供给它一个固定的配置。</para>
                    </listitem>
                </varlistentry>
                <varlistentry>
                    <term>地址池</term>
                    <listitem>
                        <para>该模式需要定义一个 IP 地址池 (有时也叫范围或作用域) ，以便 DHCP 客户端可以被动态提供它们的配置from which DHCP clients are supplied their configuration properties dynamically and on a fist come first serve basis。当一个 DHCP 客户端有段时间不再在网络上时，该配置将过期并释放回地址池以便为其他 DHCP 客户端使用。</para>
                    </listitem>
                </varlistentry>
            </variablelist>
            <para>ubuntu 提供 DHCP 服务器及其客户端。服务器叫 <application>dhcpd</application> (动态主机配置协议守护程序)。Ubuntu 提供的客户端叫 <application>dhclient</application>，应该安装在所有自动配置的计算机上。这两个程序很容易安装和配置，并可在系统引导时自动启用。</para>
      <sect2 id="dhcp-installation" status="complete">
        <title>安装</title>
          <para>要安装 <application>dhcpd</application>，可以在终端提示符后输入以下命令:</para>
          <para>
<screen>
<command>sudo apt-get install dhcpd</command>
</screen>
          </para>
          <para>您将看到下面的输出，说明接下来做什么：</para>
          <screen>
Please note that if you are installing the DHCP server for the first
time you need to configure. Please stop (/etc/init.d/dhcp
stop) the DHCP server daemon, edit /etc/dhcpd.conf to suit your needs
and particular configuration, and restart the DHCP server daemon
(/etc/init.d/dhcp start).

You also need to edit /etc/default/dhcp to specify the interfaces dhcpd
should listen to. By default it listens to eth0.

NOTE: dhcpd's messages are being sent to syslog. Look there for
diagnostics messages.

Starting DHCP server: dhcpd failed to start - check syslog for diagnostics.  </screen>
      </sect2>
      <sect2 id="dhcp-configuration" status="complete">
        <title>配置</title>
            <para>安装结束后的错误消息可能会带来小小的困惑，不过下面几步将帮助您配置服务：</para>
            <para>通常，您想做的是随机指定一个 IP 地址。这可以通过以下设置来实现：</para>
            <screen>
# Sample /etc/dhcpd.conf
# (add your comments here) 
default-lease-time 600;
max-lease-time 7200;
option subnet-mask 255.255.255.0;
option broadcast-address 192.168.1.255;
option routers 192.168.1.254;
option domain-name-servers 192.168.1.1, 192.168.1.2;
option domain-name "mydomain.org";

subnet 192.168.1.0 netmask 255.255.255.0 {
range 192.168.1.10 192.168.1.100;
range 192.168.1.150 192.168.1.200;
} </screen>
            <para>这将导致 DHCP 服务器从 192.168.1.10-192.168.1.100 或 192.168.1.150-192.168.1.200 范围中分配客户端一个 IP 地址。如果客户端没有要求一个特定的时间帧的话它将租用 600秒的 IP 地址。否则最大 (允许) 租用时间为 7200 秒。服务器也 "建议" 客户端使用 255.255.255.0 做为它的子网掩码，192.168.1.255 作为它的广播地址，192.168.1.254 作为路由器/网关，同时将 192.168.1.1 和 192.168.1.2 作为它的 DNS 服务器。</para>
            <para>如果您需要为您的 Windows 客户机指定一个 WINS 服务器，您需要包含 netbios-name-servers 选项，如：</para>
            <screen>
option netbios-name-servers 192.168.1.1; </screen>
            <para>Dhcpd 配置设置可以从 DHCP 快速指南中得到，该指南可以在 <ulink url="http://www.tldp.org/HOWTO/DHCP/index.html">这里</ulink> 找到。</para>
      </sect2>
      <sect2 id="dhcp-references" status="complete">
        <title>引用</title>
          <para>
            <ulink url="http://www.dhcp-handbook.com/dhcp_faq.html">DHCP 常见问答</ulink>
          </para>
      </sect2>
    </sect1>
	<sect1 id="dns" status="complete">
		<title>域名解析服务 (DNS)</title>
            <para>域名解析服务 (DNS) 是一个 Internet 服务，相互映射 IP 地址和完全限定域名 (FQDN) 。通过这种方式，使用 DNS 将不再需要记住 IP 地址。运行 DNS 的计算机称为 <emphasis>名称服务器</emphasis>。Ubuntu 提供 <application>BIND</application> (伯克利 Internet 名称守护程序)，一个在 GNU/Linux 上最常用的维护名称服务器的程序。</para>
            <!-- things to do: IPv6-->
      <sect2 id="dns-installation" status="complete">
        <title>安装</title>
          <para>在终端提示符后输入以下命令来安装 <application>dns</application>：</para>
          <para>
<screen>
<command>sudo apt-get install bind</command>
</screen>
          </para>
      </sect2>
      <sect2 id="dns-configuration" status="complete">
        <title>配置</title>
          <para>DNS 配置文件被保存在 <filename>/etc/bind</filename> 目录中。主配置文件叫 <filename>/etc/bind/named.conf</filename>。缺省配置文件的内容如下所示：</para>

          <para>
<programlisting>
// This is the primary configuration file for the BIND DNS server named.
//
// Please read /usr/share/doc/bind/README.Debian for information on the 
// structure of BIND configuration files in Debian for BIND versions 8.2.1 
// and later, *BEFORE* you customize this configuration file.
//

include "/etc/bind/named.conf.options";

// reduce log verbosity on issues outside our control
logging {
	category lame-servers { null; };
	category cname { null; };
};

// prime the server with knowledge of the root servers
zone "." {
        type hint;
        file "/etc/bind/db.root";
};

// be authoritative for the localhost forward and reverse zones, and for
// broadcast zones as per RFC 1912

zone "localhost" {
        type master;
        file "/etc/bind/db.local";
};

zone "127.in-addr.arpa" {
        type master;
        file "/etc/bind/db.127";
};

zone "0.in-addr.arpa" {
        type master;
        file "/etc/bind/db.0";
};

zone "255.in-addr.arpa" {
        type master;
        file "/etc/bind/db.255";
};

// add local zone definitions here
include "/etc/bind/named.conf.local";
</programlisting>
          </para>

          <para><application>include</application> 行指定包含 DNS 选项的文件名。在选项文件中的<application>directory</application> 行告诉 DNS 在哪儿寻找文件。所有 BIND 用到的文件都与该目录相关。</para>

          <para>名为 <filename>/etc/bind/db.root</filename> 的文件描述世界上的根名称服务器。这些服务器按时更新并不时被维护。</para>

          <para><application>zone</application> 部分定义一个主服务器，并将其保存在 file 标签所指定的文件中。每个 zone 文件包括 3 个资源记录 (RRs)：一个 SOA RR、一个 NS RR 以及一个 PTR RR。SOA 是授权开始的缩写。"@" 符是一个特定的符号表示原点。NS 是名称服务器 RR。PTR 是域名指针。要开始 DNS 服务器，可以在终端提示符后运行以下命令：</para>
           <para>
<screen>
<command>sudo /etc/init.d/bind start</command>
</screen>
           </para>
          <para>详情您可以参考在参考部分所提及的文档。</para>
      </sect2>
      <sect2 id="dns-references" status="complete">
        <title>引用</title>
          <para>
            <ulink url="http://www.tldp.org/HOWTO/DNS-HOWTO.html">DNS 指南</ulink>
          </para>
      </sect2>
    </sect1>
	<sect1 id="cups" status="complete">
		<title>CUPS － 打印服务器</title>
          <para>Ubuntu 打印及打印服务主要是 <emphasis role="bold">通用 UNIX 打印服务</emphasis> (CUPS)。该打印系统是自由可用、可移植的打印层，正在成为绝大多数 GNU/Linux 发行版新的打印标准。</para>
          <para>CUPS 管理打印作业和队列，并使用标准的 Internet 打印协议 (IPP) 提供网络打印，该协议提供最大范围的打印机支持，从点阵打印机到激光打印机以及位于两者之间的许多打印机。CUPS 也支持 PostScript Printer Description (PPD) 和网络打印机的自动检测，以及提供基于 Web 的简单配置和管理工具。</para>
      <sect2 id="cups-installation" status="complete">
        <title>安装</title>
          <para>在您 Ubuntu 计算机上安装 CUPS，只需简单使用 <application>sudo</application> 和<application>apt-get</application> 命令并将要安装包作为第一个参数即可。一个完全的 CUPS 安装需要安装许多从属包，但它们也可以在同一个命令行指定。在终端提示符后输入以下命令以安装 CUPS：</para>
          <para>
<screen>
<command>sudo apt-get install cupsys cupsys-client cupsys-driver-gimpprint \ defoma fontconfig foomatic-db foomatic-filters libcupsimage2 \ libexpat1 libfontconfig1 libfreetype6 libgimpprint1 libjpeg62 \ libpaper1 libpng12-0 libpoppler0c2 libslp1 libtiff4 patch perl \ perl-modules ttf-bitstream-vera ucf</command>
</screen>
          </para>
          <para>
          Upon authenticating with your user password, the packages should be downloaded
		  and installed without error. Upon the conclusion of installation, the CUPS server 
		  will be started automatically. For troubleshooting purposes, you can access CUPS 
		  server errors via the error log file at: <filename>/var/log/cups/error_log</filename>.
		  If the error log does not show enough information to troubleshoot any problems you
		  encounter, the verbosity of the CUPS log can be increased by changing the <emphasis role="bold">LogLevel</emphasis> directive in the configuration file (discussed below)
		  to "debug" or even "debug2", which logs everything, from the default of "info".  If 
		  you make this change, remember to change it back once you've solved your problem, to 
		  prevent the log file from becoming overly large.
          </para>
      </sect2>
      <sect2 id="cups-configuration" status="complete">
        <title>配置</title>
          <para>
            The Common UNIX Printing System server's behavior is configured through the 
			directives contained in the file <filename>/etc/cups/cupsd.conf</filename>.  
			The CUPS configuration file follows the same syntax as the primary configuration 
			file for the Apache HTTP server, so users familiar with editing Apache's 
			configuration file should feel at ease when editing the CUPS configuration 
			file. Some examples of settings you may wish to change initially will be 
			presented here.
          </para>
          <tip>
               <para>Prior to editing the configuration file, you should make a copy of 
			   the original file and protect it from writing, so you will have the original 
			   settings as a reference, and to reuse as necessary.
               </para>
               <para>Copy the <filename>/etc/cups/cupsd.conf</filename> file and protect it 
			   from writing with the following commands, issued at a terminal prompt:
               </para>
               </tip>
               <para>
<screen>
<command>sudo cp /etc/cups/cupsd.conf /etc/cups/cupsd.conf.original</command>
<command>sudo chmod a-w /etc/cups/cupsd.conf.original</command>
</screen>
               </para>
          <itemizedlist>
                <listitem>
                <para>
                <emphasis role="bold">ServerAdmin</emphasis>: To configure the email 
				address of the designated administrator of the CUPS server, simply 
				edit the <filename>/etc/cups/cupsd.conf</filename> configuration file 
				with your preferred text editor, and modify the <emphasis role="italics">ServerAdmin</emphasis> line accordingly.  For example, 
				if you are the Administrator for the CUPS server, and your e-mail 
				address is 'bjoy@somebigco.com', then you would modify the ServerAdmin 
				line to appear as such:
                </para>
                <para>
<screen>
ServerAdmin bjoy@somebigco.com
</screen>
                </para>
                </listitem>
                <listitem>
                <para>
                <emphasis role="bold">Listen</emphasis>: By default on Ubuntu, the CUPS 
				server installation listens only on the loopback interface at IP address 
				<emphasis>127.0.0.1</emphasis>. In order to instruct the 
				CUPS server to listen on an actual network adapter's IP address, you must 
				specify either a hostname, the IP address, or optionally, an IP 
				address/port pairing via the addition of a Listen directive.  For example, 
				if your CUPS server resides on a local network at the IP address <emphasis role="italics">192.168.10.250</emphasis> and you'd like to make it 
				accessible to the other systems on this subnetwork, you would edit the 
				<filename>/etc/cups/cups.d/ports.conf</filename> and add a Listen 
				directive, as such:
                </para>
                <para>
<screen>
Listen 127.0.0.1:631           # existing loopback Listen
Listen /var/run/cups/cups.sock # existing socket Listen
Listen 192.168.10.250:631      # Listen on the LAN interface, Port 631 (IPP)
</screen>
                </para>
                <para>
                In the example above, you may comment out or remove the reference to the 
				Loopback address (127.0.0.1) if you do not wish <application>cupsd
				</application> to listen on that interface, but would rather have it only 
				listen on the Ethernet interfaces of the Local Area Network (LAN). To enable 
				listening for all network interfaces for which a certain hostname is bound, 
				including the Loopback, you could create a Listen entry for the hostname 
				<emphasis>socrates</emphasis> as such:
                </para>
                <para>
<screen>
Listen socrates:631  # Listen on all interfaces for the hostname 'socrates'
</screen>
                </para> 
				<para>or by omitting the Listen directive and using <emphasis>Port</emphasis> instead, as in:</para>
<para>
<screen>
Port 631  # Listen on port 631 on all interfaces
</screen>
</para>
                <para>
                The CUPS server configuration file, <filename>/etc/cups/cupsd.conf</filename>,
				contains several examples of possible Listen directives which are valid for use.
                </para>
                </listitem>
          </itemizedlist>
                <para>
                For more examples of configuration directives in the CUPS server 
				configuration file, view the associated system manual page by entering the 
				following command at a terminal prompt:
               </para>
               <para>
<screen>
<command>man cupsd.conf</command>
</screen>
               </para>
                               <note>
                <para>
                Whenever you make changes to the <filename>/etc/cups/cupsd.conf</filename> configuration file, you'll need to restart the CUPS server by typing the following command at a terminal prompt:
                </para>
                </note>
                <para>
<screen>
<command>sudo /etc/init.d/cupsys restart</command>
</screen>
                </para>
      </sect2>
      <sect2 id="cups-references" status="complete">
        <title>引用</title>
        <para>
        <ulink url="http://www.cups.org/">CUPS Website</ulink>
        </para>
        </sect2>
    </sect1>
	<sect1 id="httpd" status="complete">
		<title>HTTPD - Apache2 Web Server</title>
      <para>Apache is the most commonly used Web Server on GNU/Linux systems. Web Servers are used
          to serve Web Pages requested by client computers. Clients typically request and view
          Web Pages using Web Browser applications such as <application>Firefox</application>,
              <application>Opera</application>, or <application>Mozilla</application>.</para>
      <para>Users enter a Uniform Resource Locator (URL) to point to a Web server by means of
          its Fully Qualified Domain Name (FQDN) and a path to the required resource. For example, to view the home page of
          the <ulink url="http://www.ubuntu.com">Ubuntu Web site</ulink> a user will enter only the FQDN. To request specific information about 
              <ulink url="http://www.ubuntu.com/support/supportoptions/paidsupport">paid
              support</ulink>, a user will enter the FQDN followed by a path.</para>
      <para>The most common protocol used to transfer Web pages is the Hyper Text Transfer
          Protocol (HTTP). Protocols such as Hyper Text Transfer Protocol over Secure Sockets Layer (HTTPS), and
          File Transfer Protocol (FTP), a protocol for uploading and downloading files, are also
          supported.</para>
      <para>Apache Web Servers are often used in combination with the <application>MySQL</application>
          database engine, the HyperText Preprocessor (<application>PHP</application>)
          scripting language, and other popular scripting languages such as
              <application>Python</application> and <application>Perl</application>. This
          configuration is termed LAMP (Linux, Apache, MySQL and Perl/Python/PHP) and forms a
          powerful and robust platform for the development and deployment of Web-based
          applications.</para>
<sect2 id="http-installation" status="complete">
  <title>安装</title>
                  <para>The Apache2 web server is available in Ubuntu
                  Linux. To install Apache2:</para>
          <procedure><step>
                	  <para>At a terminal prompt enter the following command:
<screen>
<command>sudo apt-get install apache2</command>
</screen>
             		  </para>
			</step>
	    </procedure>
      </sect2>
      <sect2 id="http-configuration" status="complete">
        <title>配置</title>
          <para>
          Apache is configured by placing <emphasis>directives</emphasis> in plain text
          configuration files. The main configuration file is called 
		  <filename>apache2.conf</filename>. In addition, other configuration files may be added
          using the <emphasis>Include</emphasis> directive, and wildcards can be used to
          include many configuration files. Any directive may be placed
          in any of these configuration files. Changes to the main
          configuration files are only recognized by Apache2 when it is
          started or restarted.</para>

          <para>The server also reads a file containing mime document types;
          the filename is set by the <emphasis>TypesConfig</emphasis> directive, and is
          <filename>mime.types</filename> by default.</para>

          <para>The default Apache2 configuration file is <filename>/etc/apache2/apache2.conf</filename> .
          You can edit this file to configure the Apache2 server. You can
          configure the port number, document root, modules, log files, 
          virtual hosts, etc.
          </para>
        <sect3 id="http-basic-settings" status="complete">
          <title>Basic Settings</title>
            <para>
             This section explains Apache2 server essential configuration
             parameters. Refer to the <ulink url="http://httpd.apache.org/docs/2.0/">Apache2
             Documentation</ulink> for more details.</para>

             <itemizedlist>

             <listitem><para>
             Apache2 ships with a virtual-host-friendly default configuration.
			 That is, it is configured with a single default virtual host (using
			 the <emphasis>VirtualHost</emphasis> directive) which can modified or used as-is if you
			 have a single site, or used as a template for additional virtual hosts
			 if you have multiple sites.  If left alone, the default virtual host
			 will serve as your default site, or the site users will see if the
			 URL they enter does not match the <emphasis>ServerName</emphasis> directive of any of your 
			 custom sites.  To modify the default virtual host, edit the file
			 <filename>/etc/apache2/sites-available/default</filename>.  If you
			 wish to configure a new virtual host or site, copy that file into the
			 same directory with a name you choose.  For example,
			 <command>sudo cp /etc/apache2/sites-available/default /etc/apache2/sites-available/mynewsite</command>
			 Edit the new file to configure the new site using some of the directives
			 described below.
            </para></listitem>

             <listitem><para>
			 The <emphasis>ServerAdmin</emphasis> directive specifies the email address to be advertised
			 for the server's administrator.  The default value is webmaster@localhost.
			 This should be changed to an email address that is delivered to you (if you
			 are the server's administrator).  If your website has a problem, Apache2
			 will display an error message containing this email address to report the
			 problem to.  Find this directive in your site's configuration file in
			 /etc/apache2/sites-available.
			 </para></listitem>

             <listitem><para>
             The <emphasis>Listen</emphasis> directive specifies the port, and optionally the IP address,
			 Apache2 should listen on. If the IP address is not specified, Apache2
			 will listen on all IP addresses assigned to the machine it runs on.
			 The default value for the Listen directive is 80.  Change this to
			 127.0.0.1:80 to cause Apache2 to listen only on your loopback interface
			 so that it will not be available to the Internet, to (for example) 81
			 to change the port that it listens on, or leave it as is for normal
			 operation.  This directive can be found and changed in its own file,
			 <filename>/etc/apache2/ports.conf</filename>
             </para></listitem>

			 <listitem><para>
			 The <emphasis>ServerName</emphasis> directive is optional and specifies what FQDN your
			 site should answer to.  The default virtual host has no ServerName
			 directive specified, so it will respond to all requests that do not
			 match a ServerName directive in another virtual host.  If you have
			 just acquired the domain name ubunturocks.com and wish to host it on
			 your Ubuntu server, the value of the ServerName directive in your
			 virtual host configuration file should be ubunturocks.com.  Add this
			 directive to the new virtual host file you created earlier 
			 (<filename>/etc/apache2/sites-available/mynewsite</filename>).
			 
			 <tip><para>You may also want your site to respond to www.ubunturocks.com, since
				many users will assume the www prefix is appropriate.  Use the
				<emphasis>ServerAlias</emphasis> directive for this.  You may also use wildcards in the
				ServerAlias directive.  For example,
				<command>ServerAlias *.ubunturocks.com</command>
				will cause your site to respond to any domain request ending in
				.ubunturocks.com.
			 </para></tip>
			 </para></listitem>

			 <listitem><para>
			 The <emphasis>DocumentRoot</emphasis> directive specifies where Apache should look for the
			 files that make up the site.  The default value is /var/www.  No site
			 is configured there, but if you uncomment the <emphasis>RedirectMatch</emphasis> directive
			 in <filename>/etc/apache2/apache2.conf</filename> requests will be
			 redirected to /var/www/apache2-default where the default Apache2 site
			 awaits.  Change this value in your site's virtual host file, and
			 remember to create that directory if necessary!
			 </para></listitem>
            </itemizedlist>

			<tip><para>
			The /etc/apache2/sites-available directory is <emphasis role="bold">
			not</emphasis> parsed by Apache2.  Symbolic links in /etc/apache2/sites-enabled
			point to "available" sites.  Use the a2ensite (Apache2
			Enable Site) utility to create those symbolic links, like so:
			<command>sudo a2ensite mynewsite</command>
			where your site's configuration file is <filename>
			/etc/apache2/sites-available/mynewsite</filename>.  Similarly, the
			a2dissite utility should be used to disable sites.
			</para></tip>

        </sect3>
        <sect3 id="default-settings" status="complete">
          <title>Default Settings</title>
            <para>
             This section explains configuration of the Apache2 server
             default settings.  For example, if you add a virtual host, 
             the settings you configure for the virtual host take
             precedence for that virtual host. For a directive not
             defined within the virtual host settings, the default
             value is used.
            </para>

            <itemizedlist>
            <listitem>
            <para>
             The <emphasis>DirectoryIndex</emphasis> is the default page served by the
             server when a user requests an index of a directory by
             specifying a forward slash (/) at the end of the directory
             name.</para>

             <para>For example, when a user requests the page
             http://www.example.com/this_directory/, he or she will
             get either the DirectoryIndex page if it exists, a
             server-generated directory list if it does not and the
			 Indexes option is specified, or a Permission Denied page
			 if neither is true.  The server will try to
             find one of the files listed in the DirectoryIndex
             directive and will return the first one it finds. If it
             does not find any of these files and if Options Indexes is
             set for that directory, the server will generate and
             return a list, in HTML format, of the subdirectories and
             files in the directory.  The default value, found in
			 <filename>/etc/apache2/apache2.conf</filename> is "
			 index.html index.cgi index.pl index.php index.xhtml".
			 Thus, if Apache2 finds a file in a requested directory
			 matching any of these names, the first will be displayed.
            </para>
            </listitem>

            <listitem>
            <para>
             The <emphasis>ErrorDocument</emphasis> directive allows you to specify a file
			 for Apache to use for specific error events.  For example,
			 if a user requests a resource that does not exist, a 404
			 error will occur, and per Apache2's default configuration,
			 the file <filename>/usr/share/apache2/error/HTTP_NOT_FOUND.html.var
			 </filename> will be displayed.  That file is not in the
			 server's DocumentRoot, but there is an Alias directive in
			 <filename>/etc/apache2/apache2.conf</filename> that redirects
			 requests to the /error directory to /usr/share/apache2/error/.
			 To see a list of the default ErrorDocument directives, use this
			 command:
			 <command>grep ErrorDocument /etc/apache2/apache2.conf</command>
            </para>
            </listitem>


            <listitem>
            <para>
             By default, the server writes the transfer log to the file
             /var/log/apache2/access.log. You can change this on a per-site
			 basis in your virtual host configuration files with the <emphasis>CustomLog</emphasis>
			 directive, or omit it to accept the default, specified in <filename>
			 /etc/apache2/apache2.conf</filename>.  You may also specify the file
			 to which errors are logged, via the <emphasis>ErrorLog</emphasis> directive, whose default
			 is <filename>/var/log/apache2/error.log</filename>.  These are kept
			 separate from the transfer logs to aid in troubleshooting problems
			 with your Apache2 server.  You may also specify the <emphasis>LogLevel</emphasis> (the
			 default value is "warn") and the <emphasis>LogFormat</emphasis> (see <filename>
			 /etc/apache2/apache2.conf</filename> for the default value).
			 </para>
            </listitem>

            <listitem>
            <para>
            Some options are specified on a per-directory basis rather than per-server.
			Option is one of these directives.  A Directory stanza is enclosed in 
			XML-like tags, like so:
			<screen><command>&lt;Directory /var/www/mynewsite&gt;
				...
			&lt;/Directory&gt;</command></screen>
			The Options directive within a Directory stanza accepts one or more of the
			following values (among others), separated by spaces:
            </para>
            <itemizedlist spacing="compact">
                <listitem>
                    <para><emphasis role="bold">ExecCGI</emphasis> - Allow
                    execution of CGI scripts. CGI scripts are not
                    executed if this option is not chosen.
					<tip><para>Most files should not be executed as CGI scripts.  This
					would be very dangerous.  CGI scripts should kept in a directory 
					separate from and outside your DocumentRoot, and only only this
					directory should have the ExecCGI option set.  This is the default,
					and the default location for CGI scripts is /usr/lib/cgi-bin.
					</para></tip>
					</para>
                </listitem>
                <listitem>
                    <para><emphasis role="bold">Includes</emphasis> - Allow server-side includes.
					Server-side includes allow an HTML file to <emphasis>
					include</emphasis> other files.  This is not a common option.  See
					<ulink url="http://httpd.apache.org/docs/2.0/howto/ssi.html">the Apache2
					SSI Howto</ulink> for mor information.</para>
                </listitem>
                <listitem>
                    <para><emphasis role="bold">IncludesNOEXEC</emphasis> - Allow server-side includes,
                    but disable the #exec and #include commands in CGI
                    scripts.</para>
                </listitem>
                <listitem>
                    <para>
                    <emphasis role="bold">Indexes</emphasis> - Display a formatted list of the
                    directory's contents, if no DirectoryIndex (such as index.html) exists in the 
					requested directory.
					<caution><para>For security reasons, this should usually not be set, and certainly
					should not be set on your DocumentRoot directory.  Enable this option carefully on
					a per-directory basis only if you are certain you want users to see the entire
					contents of the directory.</para></caution>
                    </para>
                </listitem>
                <listitem>
                    <para>
                    <emphasis role="bold">Multiview</emphasis> - Support content-negotiated multiviews;
                    this option is disabled by default for security reasons.  See the <ulink url="http://httpd.apache.org/docs/2.0/mod/mod_negotiation.html#multiviews">Apache2
					documentation on this option</ulink>.
                    </para>
                </listitem>
                <listitem>
                    <para>
                    <emphasis role="bold">SymLinksIfOwnerMatch</emphasis> - Only follow symbolic links
                    if the target file or directory has the same owner as the link.
                    </para>
                </listitem>
            </itemizedlist>

            </listitem>
            </itemizedlist>
        </sect3>
        <sect3 id="virtual-hosts-settings" status="complete">

          <title>Virtual Hosts Settings</title>
            <para>
			Virtual hosts allow you to run different servers for different IP addresses, different host 
			names, or different ports on the same machine. For example, you can run the website for 
			http://www.example.com and http://www.anotherexample.com on the same Web server using virtual 
			hosts. This option corresponds to the &lt;VirtualHost&gt; directive for the default virtual 
			host and IP-based virtual hosts. It corresponds to the &lt;NameVirtualHost&gt; directive for 
			a name-based virtual host.
			</para>

			<para>
			The directives set for a virtual host only apply to that particular virtual host. If a 
			directive is set server-wide and not defined within the virtual host settings, the default 
			setting is used. For example, you can define a Webmaster email address and not define 
			individual email addresses for each virtual host. 
    		</para>
 
 			<para>
			Set the DocumentRoot directive to the directory that contains the root document (such as 
			index.html) for the virtual host. The default DocumentRoot is <filename>/var/www</filename>.
			</para>

			<para>
			The ServerAdmin directive within the VirtualHost stanza is email the address used in the 
			footer of error pages if you choose to show a footer with an email address on the error pages.
			</para>

        </sect3>
        <sect3 id="server-settings" status="complete">
          <title>Server Settings</title>
            <para>
This section explains how to configure basic server settings.</para>
                    <para><emphasis role="bold">LockFile</emphasis> - The LockFile directive sets the path 
					to the lockfile used when the server is compiled with either USE_FCNTL_SERIALIZED_ACCEPT 
					or USE_FLOCK_SERIALIZED_ACCEPT. It must be stored on the local disk. It should be left 
					to the default value unless the logs directory is located on an NFS share. If this is 
					the case, the default value should be changed to a location on the local disk and to a 
					directory that is readable only by root. </para>

					<para><emphasis role="bold">PidFile</emphasis> - The PidFile directive sets the file in which the server 
					records its process ID (pid). This file should only be readable by root. In most cases, it should be left 
					to the default value.</para>

<para><emphasis role="bold">User</emphasis> - The User directive sets the userid used by the server to answer requests. This 
setting determines the server's access. Any files inaccessible to this user will also be inaccessible to your website's visitors. 
The default value for User is www-data.  </para>
            <warning>
            <para>
 Unless you know exactly what you are doing, do not set the User directive to root. Using root as the User will create large security holes for your Web server.  </para>
            </warning>
 <para>The Group directive is similar to the User directive. Group sets the group under which the server will answer requests. The default group is also www-data.</para>

        </sect3>
        <sect3 id="apache-modules" status="complete">
          <title>Apache Modules</title>
              <para>

              Apache is a modular server. This implies that only the most
              basic functionality is included in the core server. Extended
              features are available through modules which can be loaded
              into Apache. By default, a base set of modules is included in
              the server at compile-time. If the server is compiled to use
              dynamically loaded  modules, then modules can be compiled
              separately, and added at any time using the LoadModule
              directive. Otherwise, Apache must be recompiled to add or
              remove modules. Ubuntu compiles Apache2 to allow the dynamic
			  loading of modules.  Configuration directives may be conditionally
	      included on the presence of a particular module by enclosing
              them in an &lt;IfModule&gt; block.

              You can install additional Apache2 modules and use them
              with your Web server. You can install Apache2
              modules using the <application>apt-get</application>
              command. For example, to install the Apache2 module
              for MYSQL authentication, you can run the
                following command from a terminal prompt:</para>
                
                <para>
<screen>
<command>sudo apt-get install libapache2-mod-auth-mysql</command>
</screen>
                </para>
                <para>
                Once you install the module, the module will
                be available in the
                <filename>/etc/apache2/mods-available</filename> directory. You can use
              the <application>a2enmod</application> command to
              enable a module. You can use
              the <application>a2dismod</application> command to
              disable a module. Once you enable the module,
              the module will be available in the
              the <filename>/etc/apache2/mods-enabled</filename> directory.
              </para>
        </sect3>
      </sect2>
      <sect2 id="https-configuration" status="complete">
        <title>HTTPS Configuration</title>
          <para>
           The <application>mod_ssl</application> module adds
           an important feature to the Apache2 server - the ability to
           encrypt communications.  Thus, when your browser is
           communicating using SSL encryption, the
           https:// prefix is used at the beginning of the Uniform
           Resource Locator (URL) in the browser navigation bar.
          </para>

          <para>
          The <application>mod_ssl</application> module is available in
          <application>apache2-common</application> package. If you have
          installed this package, you can run the following command from a terminal prompt to
          enable the <application>mod_ssl</application> module:
          </para>

          <para>
<screen>
<command>sudo a2enmod ssl</command>
</screen>
          </para>
        <sect3 id="certificates-and-security" status="complete">
          <title>Certificates and Security</title>
            <para>
              To set up your secure server, use public key cryptography to
              create a public and private key pair. In most cases, you
              send your certificate request (including your public key),
              proof of your company's identity, and payment to a
              Certificate Authority (CA). The
              CA verifies the certificate request and your identity, and
              then sends back a certificate for your secure server. 
            </para>
             <para>
             Alternatively, you can create your own self-signed
             certificate. Note, however, that self-signed certificates
             should not be used in most production environments.
             Self-signed certificates are not automatically accepted by
             a user's browser.  Users are prompted by the browser to
             accept the certificate and create the secure connection.
             </para>

             <para>
              Once you have a self-signed certificate or a signed
              certificate from the CA of your choice, you need to
              install it on your secure server.
             </para>
        </sect3>
        <sect3 id="types-of-certificates" status="complete">
          <title>Types of Certificates</title>
            <para>
             You need a key and a certificate to operate your secure
             server, which means that you can either generate a
             self-signed certificate or purchase a CA-signed
             certificate.  A CA-signed certificate provides two important
              capabilities for your server:
            </para>

            <itemizedlist>
            <listitem>
            <para>
            Browsers (usually) automatically recognize the certificate
            and allow a secure connection to be made without prompting
            the user.
            </para>
            </listitem>
            <listitem>
            <para>
             When a CA issues a signed certificate, it is
             guaranteeing the identity of the organization that is
             providing the web pages to the browser.
            </para>
            </listitem>
            </itemizedlist>

            <para>
             Most Web browsers that support SSL have a list of CAs whose
             certificates they automatically accept. If a browser
             encounters a certificate whose authorizing CA is not in the
             list, the browser asks the user to either accept or decline
             the connection.
            </para>
            <para>
             You can generate a self-signed certificate for your secure server, but
            be aware that a self-signed certificate does not provide the same
            functionality as a CA-signed certificate. A self-signed certificate is
            not automatically recognized by most Web browsers, and a self-signed
            certificate does not provide any guarantee concerning the identity of
            the organization that is providing the website. A CA-signed certificate
            provides both of these important capabilities for a secure server. 
            The process of getting a certificate from a CA is fairly
            easy. A quick overview is as follows:
            </para>

            <orderedlist>
            <listitem>
               <para>Create a private and public encryption key pair.</para>
            </listitem>
            <listitem>
                 <para>Create a certificate request based on the public key. The
              certificate request contains information about your server and the
              company hosting it.</para>
            </listitem>
            <listitem>
                 <para>Send the certificate request, along with documents proving your
              identity, to a CA. We cannot tell you which certificate authority to
              choose. Your decision may be based on your past experiences, or on the
              experiences of your friends or colleagues, or purely on monetary
              factors.</para>

                    <para>Once you have decided upon a CA, you need to follow the
              instructions they provide on how to obtain a certificate
              from them.</para>
            </listitem>
            <listitem>
               <para>When the CA is satisfied that you are indeed who you claim to be,
            they send you a digital certificate.</para>
            </listitem>
            <listitem>
               <para>Install this certificate on your secure server, and begin handling
            secure transactions. </para>
            </listitem>
            </orderedlist>

            <para>Whether you are getting a certificate from a CA or generating your own
            self-signed certificate, the first step is to generate a key.
            </para>
        </sect3>
        <sect3 id="generating-a-csr" status="complete">
          <title>Generating a Certificate Signing Request (CSR)</title>
            <para>
            To generate the Certificate Signing Request (CSR), you should create your
            own key. You can run the following command from a terminal prompt to create the
            key:
            </para>

            <para>
<screen>
<command>openssl genrsa -des3 -out server.key 1024</command>
</screen>
            </para>
<programlisting>
Generating RSA private key, 1024 bit long modulus
.....................++++++
.................++++++
unable to write 'random state'
e is 65537 (0x10001)
Enter pass phrase for server.key:
</programlisting>

        <para>
        You can now enter your passphrase. For best security, it should
        at least contain eight characters. The minimum length when
		specifying -des3 is four characters. It should include numbers
        and/or punctuation and not be a word in a dictionary. Also
        remember that your passphrase is case-sensitive. 
        </para>

        <para>
        Re-type the passphrase to verify. Once you have re-typed it
        correctly, the server key is generated and stored in
        <filename>server.key</filename> file.
        </para>

        <warning>
        <para>
        You can also run your secure web server without a passphrase.
        This is convenient because you will not need to enter the
        passphrase every time you start your secure web server. But it
        is highly insecure and a compromise of the key means a
        compromise of the server as well.
        </para>
        </warning>

        <para>
        In any case, you can choose to run your secure web server without
        a passphrase by leaving out the -des3 switch in the generation
        phase or by issuing the following command at a terminal prompt:
        </para>

        <para>
<screen>
<command>openssl rsa -in server.key -out server.key.insecure</command>
</screen>
        </para>
        <para>
        Once you run the above command, the insecure key will be stored
        in the <filename>server.key.insecure</filename> file. You can use this
        file to generate the CSR without passphrase.
        </para>

        <para>
        To create the CSR, run the following command at a terminal prompt:
        </para>

        <para>
<screen>
<command>openssl req -new -key server.key -out server.csr</command>
</screen>
        </para>

        <para>It will prompt you enter the passphrase. If you enter the
        correct passphrase, it will prompt you to enter Company Name,
        Site Name, Email Id, etc. Once you enter all these details, your
        CSR will be created and it will be stored in the
        <filename>server.csr</filename> file. You can submit this CSR file
        to a CA for processing. The CAN will use this CSR file and issue
        the certificate. On the other hand, you can create self-signed
        certificate using this CSR.</para>

        </sect3>
        <sect3 id="creating-a-self-signed-certificate" status="complete">
          <title>Creating a Self-Signed Certificate</title>
            <para>
            To create the self-signed certificate, run the
            following command at a terminal prompt:
            </para>

            <para>
<screen>
<command>openssl x509 -req -days 365 -in server.csr -signkey server.key -out server.crt</command>
</screen>
            </para>

            <para>The above command will prompt you to enter the
            passphrase. Once you enter the correct passphrase, your
            certificate will be created and it will be stored in the
            <filename>server.crt</filename> file.  </para>
        <warning>
        <para>
            If your secure server is to be used in a production environment, you
            probably need a CA-signed certificate.  It is not
            recommended to use self-signed certificate.
        </para>
        </warning>
        </sect3>
        <sect3 id="installing-the-certificate" status="complete">
          <title>Installing the Certificate</title>

            <para>You can install the key file
            <filename>server.key</filename> and certificate file
            <filename>server.crt</filename> or the certificate file issued
            by your CA by running following commands at a terminal prompt:
            </para>
            <para>
<screen>
<command>sudo cp server.crt /etc/ssl/certs</command>
<command>sudo cp server.key /etc/ssl/private</command>
</screen>
            </para>
            <para>
            You should add the following four lines to the
            <filename>/etc/apache2/sites-available/default</filename>
            file or the configuration file for your secure virtual
			host. You should place them in the <emphasis>VirtualHost</emphasis> section. They
            should be placed under the <emphasis>DocumentRoot</emphasis> line:
            </para>
<programlisting>
SSLEngine on

SSLOptions +FakeBasicAuth +ExportCertData +CompatEnvVars +StrictRequire

SSLCertificateFile /etc/ssl/certs/server.crt
SSLCertificateKeyFile /etc/ssl/private/server.key
</programlisting>
          
            <para>
            HTTPS should listen on port number 443. You should add the
            following line to the <filename>/etc/apache2/ports.conf</filename>
            file:
            </para>
<programlisting>
Listen 443
</programlisting>

        </sect3>
        <sect3 id="accessing-the-server" status="complete">
          <title>Accessing the Server</title>
            <para>
            Once you install your certificate, you should restart your
            web server. You can run the following command at a terminal prompt to
            restart your web server:
            </para>
            <para>
<screen>            
<command>sudo /etc/init.d/apache2 restart</command>
</screen>
            </para>
        <note><para>
        You should remember and enter the passphrase every time you
        start your secure web server.
        </para></note>

            <para>You will be prompted to enter the passphrase. Once you
            enter the correct passphrase, the secure web server will be
            started. You can access the secure server pages by typing
            https://your_hostname/url/ in your
            browser address bar.</para>

        </sect3>
      </sect2>
      <sect2 id="http-references" status="complete">
        <title>引用</title>
          <para>
          <ulink url="http://httpd.apache.org/docs/2.0/">Apache2
          Documentation</ulink>
          </para>
          <para>
          <ulink url="http://www.modssl.org/docs/">Mod SSL
          Documentation</ulink>
          </para>
      </sect2>
    </sect1>
	
	<sect1 id="squid" status="complete">
		<title>Squid - Proxy Server</title>
          <para>
          Squid is a full-featured web proxy cache server application which provides proxy and cache services for Hyper Text
          Transport Protocol (HTTP), File Transfer Protocol (FTP), and other popular network protocols.  Squid can implement
          caching and proxying of Secure Sockets Layer (SSL) requests and caching of Domain Name Server (DNS) lookups, and perform
          transparent caching. Squid also supports a wide variety of caching protocols, such as Internet Cache Protocol, (ICP)
          the Hyper Text Caching Protocol, (HTCP) the Cache Array Routing Protocol (CARP), and the Web Cache Coordination 
          Protocol. (WCCP) 
          </para>
          <para>
          The Squid proxy cache server is an excellent solution to a variety of proxy and caching server needs, and scales from
          the branch office to enterprise level networks while providing extensive, granular access control mechanisms and
          monitoring of critical parameters via the Simple Network Management Protocol (SNMP).  When selecting a computer system
          for use as a dedicated Squid proxy, or caching servers, ensure your system is configured with a large amount of physical
          memory, as Squid maintains an in-memory cache for increased performance.
          </para>
      <sect2 id="squid-installation" status="complete">
        <title>安装</title>
          <para>
            At a terminal prompt, enter the following command to install the Squid server:
          </para>
          <para>
<screen>
<command>sudo apt-get install squid squid-common</command>
</screen>
          </para>
      </sect2>
      <sect2 id="squid-configuration" status="complete">
        <title>配置</title>
          <para>
            Squid is configured by editing the directives contained within the <filename>/etc/squid/squid.conf</filename> configuration file.
            The following examples illustrate some of the directives which may be modified to affect the behavior of the Squid server.
            For more in-depth configuration of Squid, see the References section. 
          </para>
             <tip>
               <para>Prior to editing the configuration file, you should make a copy of the original file and protect it 
               from writing so you will have the original settings as a reference, and to re-use as necessary.
               </para>
               <para>Copy the <filename>/etc/squid/squid.conf</filename> file and protect it from writing with the following commands entered at a terminal prompt:
               </para>
	     </tip>
               <para>
<screen>
<command>sudo cp /etc/squid/squid.conf /etc/squid/squid.conf.original</command>
<command>sudo chmod a-w /etc/squid/squid.conf.original</command>
</screen>
               </para> 
	        <para>
           <itemizedlist>
               <listitem>
                  <para>
                  To set your Squid server to listen on TCP port 8888 instead of the default TCP port 3128, change
                  the http_port directive as such:
                  </para>
                  <para>
                  http_port 8888
                  </para>
               </listitem>
	            <listitem>
                  <para>
                  Change the visible_hostname directive in order to give the Squid server a specific hostname.  This hostname
                  does not necessarily need to be the computer's hostname. In this example it is set to <emphasis>weezie</emphasis>
                  </para>
                  <para>
                  visible_hostname weezie
                  </para>
               </listitem>
               <listitem>
                  <para>
                     Again, Using Squid's access control, you may configure use of Internet services proxied by Squid
                     to be available only users with certain Internet Protocol (IP) addresses.  For example, we willll illustrate access 
                     by users of the 192.168.42.0/24 subnetwork only:
                  </para>
                  <para>
                     Add the following to the <emphasis role="bold">bottom</emphasis> of the ACL section of your <filename>/etc/squid/squid.conf</filename> file:
                  </para>
                  <para>
                     acl fortytwo_network src 192.168.42.0/24
                  </para>
                  <para>
                     Then, add the following to the <emphasis role="bold">top</emphasis> of the http_access section of your
                     <filename>/etc/squid/squid.conf</filename> file:
                  </para>
                  <para>
                     http_access allow fortytwo_network
                  </para>
               </listitem>
               <listitem>
                  <para>
                     Using the excellent access control features of Squid, you may configure use of Internet services proxied by Squid
                     to be available only during normal business hours.  For example, we'll illustrate access by employees of a business
                     which is operating between 9:00AM and 5:00PM, Monday through Friday, and which uses the 10.1.42.0/42 subnetwork:
                  </para>
                  <para>
                     Add the following to the <emphasis role="bold">bottom</emphasis> of the ACL section of your <filename>/etc/squid/squid.conf</filename> file:
                  </para>
                  <para>
                     acl biz_network src 10.1.42.0/24
                     acl biz_hours time M T W T F 9:00-17:00
                  </para>
                  <para>
                     Then, add the following to the <emphasis role="bold">top</emphasis> of the http_access section of your
                     <filename>/etc/squid/squid.conf</filename> file:
                  </para>
                  <para>
                     http_access allow biz_network biz_hours
                  </para>
               </listitem>
          </itemizedlist>
          </para>
          <note>
	  <para>
          After making changes to the <filename>/etc/squid/squid.conf</filename> file, save the file and restart the <application>squid</application> 
          server application to effect the changes using the following command entered at a terminal prompt:
          </para>
          </note>
          <para>
<screen>
<command>sudo /etc/init.d/squid restart</command>
</screen>
          </para>
      </sect2>
      <sect2 id="squid-references" status="complete">
      <title>引用</title>
      <para>
      <ulink url="http://www.squid-cache.org/">Squid Website</ulink>
      </para>
      </sect2>
    </sect1>
	<sect1 id="version-control-system" status="complete">
		<title>Version Control System</title>
          <para>
Version control is the art of managing changes to information. It has long been a critical tool for programmers, who typically spend their time making small changes to software and then undoing those changes the next day. But the usefulness of version control software extends far beyond the bounds of the software development world. Anywhere you can find people using computers to manage information that changes often, there is room for version control.</para>
<para>
          </para>
      <sect2 id="subversion" status="complete">
        <title>Subversion</title>
          <para>
Subversion is an open source version control system. Using Subversion, you can record the history of source files and documents. It manages files and directories over time. A tree of files is placed into a central repository. The repository is much like an ordinary file server, except that it remembers every change ever made to files and directories.
          </para>
        <sect3 id="subversion-installation" status="complete">
          <title>安装</title>
            <para>
To access Subversion repository using the HTTP protocol, you must install and 
configure a web server. Apache2 is proven to work with Subversion. Please 
refer to the HTTP subsection in the Apache2 section to install and configure 
Apache2.  To access the Subversion repository using the HTTPS protocol, you 
must install and configure a digital certificate in your Apache 2 web server. 
Please refer to the HTTPS subsection in the Apache2 section to install and 
configure the digital certificate.
						</para>
						<para>
		To install Subversion, run the following command from a terminal prompt:
            </para>
	    <para>
<screen>
<command>sudo apt-get install subversion libapache2-svn</command>
</screen>
	    </para>

        </sect3>
        <sect3 id="subversion-configuration" status="complete">
          <title>Server Configuration</title>
            <para>
	This step assumes you have installed above mentioned packages on your system. This section explains how to create a Subversion repository and access the project.</para>
			<sect4 id="create-svn-repos" status="complete">
				<title>Create Subversion Repository</title>
<para>The Subversion repository can be created using the following command from a terminal prompt:</para>

        <para>
<screen>
<command>svnadmin create /path/to/repos/project</command>
</screen>
        </para>
			</sect4>

        </sect3>
        <sect3 id="access-methods" status="complete">
          <title>Access Methods</title>
<para>Subversion repositories can be accessed (checked out) through many 
different methods --on local disk, or through various network protocols. 
A repository location, however, is always a URL. The table describes how 
different URL schemas map to the available access methods.</para>
				<table><title>Access Methods</title>

					<tgroup cols="2">
						<colspec colname="1"/>
						<colspec colname="2"/>
						<thead>
							<row>
								<entry><para>Schema</para></entry>
								<entry><para>Access Method</para></entry>
							</row>
						</thead>
						<tbody>
							<row>
								<entry><para>file://</para></entry>
								<entry><para>direct repository access (on local disk)</para></entry>
							</row>
							<row>
								<entry><para>http://</para></entry>
								<entry><para>Access via WebDAV protocol to Subversion-aware Apache2 web server</para></entry>
							</row>
							<row>
								<entry><para>https://</para></entry>
								<entry><para>Same as http://, but with SSL encryption</para></entry>
							</row>
							<row>
								<entry><para>svn://</para></entry>
								<entry><para>Access via custom protocol to an svnserve server</para></entry>
							</row>
							<row>
								<entry><para>svn+ssh://</para></entry>
								<entry><para>Same as svn://, but through an SSH tunnel</para></entry>
							</row>
						</tbody>
					</tgroup>
				</table>

				<para>
In this section, we will see how to configure Subversion for all 
these access methods. Here, we cover the basics. For more advanced 
usage details, refer to the <ulink url="http://svnbook.red-bean.com/">svn book</ulink>.
				</para>
			<sect4 id="direct-repos-access" status="complete">
				<title>Direct repository access (file://)</title>
<para> This is the simplest of all access methods. It does not 
require any Subversion server process to be running. This access 
method is used to access Subversion from the same machine. The 
syntax of the command, entered at a terminal prompt, is as follows:</para>

        <para>
<screen>
<command>svn co file:///path/to/repos/project</command>
</screen>
        </para>
  <para>or</para>
	<para>
<screen>
<command>svn co file://localhost/path/to/repos/project</command>
</screen>
        </para>
	<note>
		<para>If you do not specify the hostname, there are three forward slashes (///) -- two for the protocol (file, in this case) plus the leading slash in the path. If you specify the hostname, you must use two forward slashes (//).</para>
	</note>
		<para>The repository permissions depend on filesystem permissions. If the user has read/write permission, he can checkout from and commit to the repository.</para>
			</sect4>
			<sect4 id="access-via-webdav" status="complete">
				<title>Access via WebDAV protocol (http://)</title>
<para> To access the Subversion repository via WebDAV protocol, you must configure your Apache 2 web server. You must add the following snippet in your <filename>/etc/apache2/apache2.conf</filename> file:</para>

	<programlisting> &lt;Location /svn&gt;
  DAV svn
  SVNPath /path/to/repos
  AuthType Basic
  AuthName "Your repository name"
  AuthUserFile /etc/subversion/passwd
  &lt;LimitExcept GET PROPFIND OPTIONS REPORT&gt;
  Require valid-user
  &lt;/LimitExcept&gt;
  &lt;/Location&gt; </programlisting>
  <para>Next, you must create the <filename>/etc/subversion/passwd</filename> 
  file. This file contains user authentication details. To add an entry, i.e. 
  to add a user, you can run the following command from a terminal prompt:</para>
	<para>
<screen>
<command>htpasswd2 /etc/subversion/passwd user_name</command>
</screen>
        </para>
	<para>This command will prompt you to enter the password. Once you enter the password, the user is added. Now, to access the repository you can run the following command:</para>
        <screen><command>svn co http://servername/svn</command></screen>
	<warning>
		<para>
			The password is transmitted as plain text. If you are worried about password snooping, you are advised to use SSL encryption. For details, please refer next section.
		</para>
	</warning>
			</sect4>
			<sect4 id="access-via-webdav-with-ssl" status="complete">
				<title>Access via WebDAV protocol with SSL encryption (https://)</title>
					<para> 
						Accessing Subversion repository via WebDAV protocol with SSL 
						encryption (https://) is similar to http:// except that you 
						must install and configure the digital certificate in your 
						Apache2 web server.
					</para>

					<para>
						You can install a digital certificate issued by a signing 
						authority like Verisign. Alternatively, you can install your 
						own self-signed certificate.
					</para>
					<para>
						This step assumes you have installed and configured a digital 
						certificate in your Apache 2 web server. Now, to access the 
						Subversion repository, please refer to the above section! 
						The access methods are exactly the same, except the protocol. 
						You must use https:// to access the Subversion repository.
					</para>

			</sect4>
			<sect4 id="access-via-custom-protocol" status="complete">
				<title>Access via custom protocol (svn://)</title>
					<para> 
					Once the Subversion repository is created, you can configure the 
					access control. You can edit the <filename>
					/path/to/repos/project/conf/svnserve.conf</filename> file to 
					configure the access control.  For example, to set up 
					authentication, you can uncomment the following lines in the 
					configuration file: </para>
					<programlisting># [general]
# password-db = passwd</programlisting>

					<para>
					After uncommenting the above lines, you can maintain the user 
					list in the passwd file. So, edit the file <filename>passwd
					</filename> in the same directory and add the new user. The 
					syntax is as follows:
					</para>
					<programlisting>username = password</programlisting>
					<para>
					For more details, please refer to the file.
					</para>

					<para>
					Now, to access Subversion via the svn:// custom protocol, either 
					from the same machine or a different machine, you can run 
					svnserver using svnserve command. The syntax is as follows:
					</para>
					<programlisting>$ svnserve -d --foreground -r /path/to/repos
# -d -- daemon mode
# --foreground -- run in foreground (useful for debugging)
# -r -- root of directory to serve

For more usage details, please refer to:
$ svnserve --help</programlisting>

					<para>Once you run this command, Subversion starts listening on default port (3690). To access the project repository, you must run the following command from a terminal prompt: </para>
					<para>
<screen>
<command>svn co svn://hostname/project project --username user_name</command>
</screen>
                                        </para>
					<para>Based on server configuration, it prompts for password. Once 
					you are authenticated, it checks out the code from Subversion 
					repository.  To synchronize the project repository with the local 
					copy, you can run the <command>update</command> sub-command. The 
					syntax of the command, entered at a terminal prompt, is as follows:
					</para>
					<para>
<screen>
<command>cd project_dir ; svn update</command>
</screen>
                                        </para>
					<para>For more details about using each Subversion sub-command, you 
					can refer to the manual. For example, to learn more about the co 
					(checkout) command, please run the following command from a 
					terminal prompt:</para>
                    <para><screen><command>svn co help</command></screen></para>

			</sect4>
			<sect4 id="access-via-custom-protocol-with-ssl" status="complete">
				<title>Access via custom protocol with SSL encryption (svn+ssh://)</title>
					<para> The configuration and server process is same as in the
					svn:// method. For details, please refer to the above section. 
					This step assumes you have followed the above step and started 
					the	Subversion server using <application>svnserve</application>  
					command.</para>

					<para>It is also assumed that the ssh server is running on that 
					machine and that it is allowing incoming connections. To confirm, 
					please try to login to that machine using ssh. If you can login, 
					everything is perfect. If you cannot login, please address it 
					before continuing further.</para>

					<para>The svn+ssh:// protocol is used to access the Subversion 
					repository using SSL encryption. The data transfer is encrypted 
					using this method. To access the project repository (for example 
					with a checkout), you must use the following command syntax: 
                                        </para>
                                        <para>
<screen>
<command>svn co svn+ssh://hostname/var/svn/repos/project</command>
</screen>
                                        </para>

					<note><para> You must use the full path (/path/to/repos/project) 
					to access the Subversion repository using this access method. 
					</para></note>
					<para>
					Based on server configuration, it prompts for password. You must 
					enter the password you use to login via ssh. Once you are 
					authenticated, it checks out the code from the Subversion 
					repository.
					</para>
			</sect4>
			</sect3>

      </sect2>
      <sect2 id="cvs-server" status="complete">
        <title>CVS Server</title> 
          <para>
          CVS is a version control system. You can use it to record the
          history of source files.
          </para>
        <sect3 id="cvs-installation" status="complete">
          <title>安装</title>
            <para>
              At a terminal prompt, enter the following command to install
              <application>cvs</application>:

<screen>
<command>sudo apt-get install cvs</command>
</screen>

After you install <application>cvs</application>, you should install
<application>xinetd</application> to start/stop the cvs server. At the
prompt, enter the following command to install
<application>xinetd</application>:

<screen>
<command>sudo apt-get install xinetd</command>
</screen>
            </para>
        </sect3>
        <sect3 id="cvs-configuration" status="complete">
          <title>配置</title>
            <para>
            Once you install cvs, the repository will be automatically
            initialized. By default, the repository resides under the
            <application>/var/lib/cvs</application> directory. You can
            change this path by running following command:

<screen>
<command>cvs -d /your/new/cvs/repo init</command>
</screen>

Once the initial repository is set up, you can configure
<application>xinetd</application> to start the CVS server. 
You can copy the following lines to the <filename>
/etc/xinetd/cvspserver</filename> file.

<programlisting>
service cvspserver
{
     port = 2401
     socket_type = stream
     protocol = tcp
     user = root
     wait = no
     type = UNLISTED
     server = /usr/bin/cvs
     server_args = -f --allow-root /var/lib/cvs pserver
     disable = no
}
</programlisting>

<note>
<para>
Be sure to edit the repository if you have changed the default
repository (<application>/var/lib/cvs</application>) directory.
</para>
</note>

Once you have configured <application>xinetd</application> you 
can start the cvs server by running following command:

<screen>
<command>sudo /etc/init.d/xinetd start</command>
</screen>
            </para>
            <para>
            You can confirm that the CVS server is running by issuing 
			the following command:
            </para>

            <para>
<screen>
<command>sudo netstat -tap | grep cvs</command>
</screen>
            </para>

            <para>
            When you run this command, you should see the following line
            or something similar:
            </para>

<programlisting>
tcp        0      0 *:cvspserver            *:* LISTEN 
</programlisting>

        <para>
From here you can continue to add users, add new projects,
and manage the CVS server. 
        </para>
        <warning>
<para>
          CVS allows the user to add users independently of the
underlying OS installation. Probably the easiest way is to use the Linux
Users for CVS, although it has potential security issues. Please refer
to the CVS manual for details.
</para>
        </warning>

        </sect3>
        <sect3 id="cvs-add-projects" status="complete">
          <title>Add Projects</title>
            <para>
            This section explains how to add new project to the CVS 
			repository. Create the directory and add necessary document 
			and source files to the directory. Now, run the following 
			command to add this project to CVS repository:
<screen>
<command>cd your/project</command>
<command>cvs import -d :pserver:username@hostname.com:/var/lib/cvs -m "Importing my project to CVS repository" . new_project start</command>
</screen>

<tip>
<para>
You can use the CVSROOT environment variable to store the CVS root directory.
Once you export the CVSROOT environment variable, you can avoid using -d option to
above cvs command.
</para>
</tip>
The string <emphasis>new_project</emphasis> is a vendor
tag, and <emphasis>start</emphasis> is a release tag.
They serve no purpose in this context, but since CVS requires them, they
must be present.

<warning>
<para>
When you add a new project, the CVS user you use must have write access to the
CVS repository (<application>/var/lib/cvs</application>). By default, the
<application>src</application> group has write access to the CVS
repository. So, you can add the user to this group, and he can then add and
manage projects in the CVS repository.
</para>
</warning>
            </para>
        </sect3>
      </sect2>
      <sect2 id="version-control-ref" status="complete">
        <title>引用</title> 
				<para><ulink url="http://subversion.tigris.org/">Subversion Home Page</ulink></para>
				<para><ulink url="http://svnbook.red-bean.com/">Subversion Book</ulink></para>
				<para><ulink url="http://ximbiot.com/cvs/manual/cvs-1.11.21/cvs_toc.html">CVS Manual</ulink></para>
      </sect2>
    </sect1>
	<sect1 id="databases" status="complete">
		<title>Databases</title>
          <para>
            Ubuntu provides two Database servers. They are:
            <itemizedlist spacing="compact">
                <listitem>
                    <para><application><trademark>MySQL</trademark></application></para>
                </listitem>
                <listitem>
                    <para><application>PostgreSQL</application></para>
                </listitem>
            </itemizedlist>
            They are available in the main repository. This section
            explains how to install and configure these database
            servers.
          </para>
      <sect2 id="mysql" status="complete">
        <title>MySQL</title>
          <para>
          MySQL is a fast, multi-threaded, multi-user, and robust SQL
          database server. It is intended for mission-critical, 
		  heavy-load production systems as well as for embedding into 
		  mass-deployed software.
          </para>

        <sect3 id="mysql-installation" status="complete">
          <title>安装</title>
            <para>
            To install MySQL, run the following command from a terminal prompt:
            </para>

            <para>
<screen>
<command>sudo apt-get install mysql-server mysql-client</command>
</screen>
            </para>

            <para>
            Once the installation is complete, the MySQL server should be
            started automatically. You can run the following command from a terminal prompt to
            check whether the MySQL server is running:
            </para>

            <para>
<screen>
<command>sudo netstat -tap | grep mysql</command>
</screen>
            </para>

            <para>
            When you run this command, you should see the following line
            or something similar:
            </para>

<programlisting>
tcp        0      0 localhost.localdomain:mysql           *:* LISTEN -
</programlisting>
	<para>If the server is not running correctly, you can type the following command to start it:</para>
            <para>
<screen>
<command>sudo /etc/init.d/mysql restart</command>
</screen>
        </para>

        </sect3>
        <sect3 id="mysql-configuration" status="complete">
          <title>配置</title>
            <para>
            By default, the administrator password is not set. Once you
            install MySQL, the first thing you must do is to configure
            the MySQL administrator password. To do this, run the following commands:
            </para>
            <para>
<screen>
<command>sudo mysqladmin -u root password newrootsqlpassword</command>
</screen>
            </para>
            <para>
<screen>
<command>sudo mysqladmin -u root -h localhost password newrootsqlpassword</command>
</screen>
            </para>

            <para>
            You can edit the <filename>/etc/mysql/my.cnf</filename> file to configure the basic
            settings -- log file, port number, etc. Refer to
            <filename>/etc/mysql/my.cnf</filename> file for more details.
            </para>
        </sect3>
      </sect2>
      <sect2 id="postgresql" status="complete">
        <title>PostgreSQL</title> 
          <para>
          PostgreSQL is an object-relational database system that has
          the features of traditional commercial database systems with
          enhancements to be found in next-generation DBMS systems.
          </para>
        <sect3 id="postgresql-installation" status="complete">
          <title>安装</title>
            <para>
            To install PostgreSQL, run the following command in the
            command prompt:
            </para>

            <para>
<screen>
<command>sudo apt-get install postgresql</command>
</screen>
            </para>

            <para>
            Once the installation is complete, you should configure the
            PostgreSQL server based on your needs, although the default
            configuration is viable.</para>
            
        </sect3>
        <sect3 id="postgresql-configuration" status="complete">
          <title>配置</title>
            <para>By default, connection via TCP/IP is disabled.
            PostgreSQL supports multiple client authentication methods.
            By default, IDENT authentication method is used.  Please
            refer <ulink url="http://www.postgresql.org/docs/8.1/static/admin.html">
			the PostgreSQL Administrator's Guide</ulink>.</para>
            
            <para>The following discussion assumes that you wish to enable 
			TCP/IP connections and use the MD5 method for client 
			authentication. PostgreSQL configuration files are stored in the
            <filename>/etc/postgresql/&lt;version&gt;/main</filename>
            directory. For example, if you install PostgreSQL 7.4, the
            configuration files are stored in the
            <filename>/etc/postgresql/7.4/main</filename> directory.
            </para>
            
            <tip>
            <para>
             To configure <application>ident</application>
             authentication, add entries to the <filename>/etc/postgresql/7.4/main/pg_ident.conf</filename>
             file.
            </para>
            </tip>

            <para>To enable TCP/IP connections, edit the file <filename>/etc/postgresql/7.4/main/postgresql.conf</filename></para>

            <para>Locate the line <emphasis>#tcpip_socket =
            false</emphasis> and change it to
            <emphasis>tcpip_socket =
            true</emphasis>. You may
            also edit all other parameters, if you know what you are doing! 
			For details, refer to the configuration file or to the PostgreSQL documentation.
            </para>

            <para>By default, the user credentials are not set for
            <emphasis>MD5</emphasis> client
            authentication. So, first it is necessary to configure the PostgreSQL server to use
            <emphasis>trust</emphasis> client
            authentication, connect to the database,
            configure the password, and revert the configuration back to use
            <emphasis>MD5</emphasis> client authentication.
            To enable <emphasis>trust</emphasis> client
            authentication, edit the file <filename>/etc/postgresql/7.4/main/pg_hba.conf</filename></para>

            <para>Comment out all the existing lines which use
            <emphasis>ident</emphasis> and
            <emphasis>MD5</emphasis>
            client authentication and add the following
            line:</para>
<programlisting>
local   all         postgres                          trust sameuser
</programlisting>

            <para>Then, run the following command to
            start the PostgreSQL server:
            </para>
            <para>
<screen>
<command>sudo /etc/init.d/postgresql start</command>
</screen>
            </para>
            <para>Once the PostgreSQL server is successfully started, run the following command at a terminal prompt to connect to the default
            PostgreSQL template database</para>

            <para>
<screen>
<command>psql -U postgres -d template1</command>
</screen>
            </para>
            <para>The above command connects to PostgreSQL
            database <emphasis>template1</emphasis> as user
            <emphasis>postgres</emphasis>. Once you connect to the PostgreSQL
            server, you will be at a SQL prompt. You can run the
            following SQL command at the <application>psql</application> prompt to configure the
            password for the user <emphasis role="italics">postgres</emphasis>.</para>

            <para>
<screen>
<command>template1=# ALTER USER postgres with encrypted password 'your_password';</command>
</screen>
            </para>
            <para>After configuring the password, edit the file
            <filename>/etc/postgresql/7.4/main/pg_hba.conf</filename> to use
            <emphasis>MD5</emphasis> authentication:</para>
            <para>Comment the recently added <emphasis role="italics">trust</emphasis> line and add the following
            line: </para>

<programlisting>
local   all         postgres                          md5 sameuser
</programlisting>
            <warning>
            <para>
             The above configuration is not complete by any means. Please
             refer <ulink url="http://www.postgresql.org/docs/8.1/static/admin.html">
			 the PostgreSQL Administrator's Guide</ulink> to configure more parameters.
            </para>
            </warning>
        </sect3>
      </sect2>
    </sect1>
	<sect1 id="email-services" status="complete">
		<title>Email Services</title>
          <para>
            The process of getting an email from one person to another over a network or
			the Internet involves many systems working together.  Each of these systems
			must be correctly configured for the process to work.  The sender uses a <emphasis>Mail
			User Agent</emphasis> (MUA), or email client, to send the message through one or more
			<emphasis>Mail Transfer Agents</emphasis> (MTA), the last of which will hand it off to a 				<emphasis>Mail Delivery Agent</emphasis> (MDA) for delivery to the 
			recipient's mailbox, from which it
			will be retrieved by the recipient's email client, usually via a POP3 or IMAP server.
          </para>
      <sect2 id="postfix" status="complete">
        <title>Postfix</title>
          <para>
            <application>Postfix</application> is the default Mail Transfer Agent (MTA) in Ubuntu. It
            attempts to be fast and easy to administer and secure. It is
            compatible with the MTA <application>sendmail</application>. This section explains how
            to install and configure <application>postfix</application>. It also explains how to
            set it up as an SMTP server using a secure connection (for sending emails securely).
          </para>
        <sect3 id="postfix-installation" status="complete">
          <title>安装</title>
            <para>
            To install <application>postfix</application> with SMTP-AUTH and Transport Layer
            Security (TLS), run the following command:
<screen>
<command>sudo apt-get install postfix</command>
</screen>
		Simply press return when the installation process asks questions, the configuration will be done in greater detail in the next stage.
            </para>
        </sect3>
        <sect3 id="postfix-configuration" status="complete">
          <title>Basic Configuration</title>
            <para>
            To configure <application>postfix</application>, run the following command:
<screen>
<command>sudo dpkg-reconfigure postfix</command>
</screen>
            The user interface will be displayed. On each screen, select the following
            values:
            <itemizedlist spacing="compact">
            <listitem><para>Ok</para></listitem>
            <listitem><para>Internet Site</para></listitem>
            <listitem><para>NONE</para></listitem>
            <listitem><para>mail.example.com</para></listitem>
            <listitem><para>mail.example.com, localhost.localdomain, localhost</para></listitem>
            <listitem><para>No</para></listitem>
            <listitem><para>127.0.0.0/8</para></listitem>
            <listitem><para>Yes</para></listitem>
            <listitem><para>0</para></listitem>
            <listitem><para>+</para></listitem>
            <listitem><para>all</para></listitem>
            </itemizedlist>
            </para>
            <note>
            <para>
            Replace mail.example.com with your mail server hostname.
            </para>
            </note>
	 </sect3>
        <sect3 id="postfix-smtp-authentication" status="complete">
          <title>SMTP Authentication</title>
            <para>The next steps are to configure
            <application>postfix</application> to use SASL for SMTP
            AUTH. Rather than editing the configuration file directly, 
	     you can use the <command>postconf</command> command to configure
            all <application>postfix</application> parameters.  The
            configuration parameters will be stored in
            <filename>/etc/postfix/main.cf</filename> file. Later if you
            wish to re-configure a particular parameter, you can either
            run the command or change it manually in the file.</para>
	<procedure>
		<step><para>Configure Postfix to do SMTP AUTH using SASL (saslauthd):
<screen>
postconf -e 'smtpd_sasl_local_domain ='
postconf -e 'smtpd_sasl_auth_enable = yes'
postconf -e 'smtpd_sasl_security_options = noanonymous'
postconf -e 'broken_sasl_auth_clients = yes'
postconf -e 'smtpd_recipient_restrictions = permit_sasl_authenticated,permit_mynetworks,reject_unauth_destination'
postconf -e 'inet_interfaces = all'
echo 'pwcheck_method: saslauthd' &gt;&gt; /etc/postfix/sasl/smtpd.conf
echo 'mech_list: plain login' &gt;&gt; /etc/postfix/sasl/smtpd.conf
</screen>
		</para>
		</step>
		<step><para>Next, configure the digital certificate 
            for TLS. When asked questions, follow the instructions and answer appropriately.
<screen>
openssl genrsa -des3 -rand /etc/hosts -out smtpd.key 1024
chmod 600 smtpd.key
openssl req -new -key smtpd.key -out smtpd.csr
openssl x509 -req -days 3650 -in smtpd.csr -signkey smtpd.key -out smtpd.crt
openssl rsa -in smtpd.key -out smtpd.key.unencrypted
mv -f smtpd.key.unencrypted smtpd.key
openssl req -new -x509 -extensions v3_ca -keyout cakey.pem -out cacert.pem -days 3650
mv smtpd.key /etc/ssl/private/
mv smtpd.crt /etc/ssl/certs/
mv cakey.pem /etc/ssl/private/
mv cacert.pem /etc/ssl/certs/
</screen>
		</para>
		<note><para>You can get the digital
            certificate from a certificate authority. Alternatively, you
            can create the certificate yourself. Refer to 
			<xref linkend="creating-a-self-signed-certificate"/> for more 
			details.</para></note>
		</step>
		<step><para>Configure Postfix to do TLS encryption for both incoming and outgoing mail:
<screen>
postconf -e 'smtpd_tls_auth_only = no'
postconf -e 'smtp_use_tls = yes'
postconf -e 'smtpd_use_tls = yes'
postconf -e 'smtp_tls_note_starttls_offer = yes'
postconf -e 'smtpd_tls_key_file = /etc/ssl/private/smtpd.key'
postconf -e 'smtpd_tls_cert_file = /etc/ssl/certs/smtpd.crt'
postconf -e 'smtpd_tls_CAfile = /etc/ssl/certs/cacert.pem'
postconf -e 'smtpd_tls_loglevel = 1'
postconf -e 'smtpd_tls_received_header = yes'
postconf -e 'smtpd_tls_session_cache_timeout = 3600s'
postconf -e 'tls_random_source = dev:/dev/urandom'
postconf -e 'myhostname = mail.example.com'
</screen>
		</para>
		</step>
		</procedure>
            <note>
            <para>
            After you run all the commands, the SMTP AUTH is configured
            with <application>postfix</application>. The self-signed
            cerficiate is created for TLS and it is configured with
            <application>postfix</application>.
            </para>
            </note>
            <para>
            Now, the file <filename>/etc/postfix/main.cf</filename>
            should look like <ulink url="sample/postfix_configuration">this</ulink>.
		</para>
		<para>
            The postfix initial configuration is complete. Run
            the following command to start postfix daemon:
            <screen><command>sudo /etc/init.d/postfix start</command></screen>

            Now the <application>postfix</application> daemon is installed, configured and run
            successfully. <application>Postfix</application> supports SMTP AUTH as defined in
            <ulink url="ftp://ftp.isi.edu/in-notes/rfc2554.txt">RFC2554</ulink>.
            It is based on <ulink url="ftp://ftp.isi.edu/in-notes/rfc2222.txt">SASL</ulink>. However it is still necessary to set up SASL authentication before you can use SMTP.
            </para>
	</sect3>
	<sect3 id="sasl">
	  <title>Configuring SASL</title>
            <para>
            The
            <application>libsasl2</application>,
            <application>sasl2-bin</application> and
            <application>libsasl2-modules</application> are necessary to
            enable SMTP AUTH using SASL. You can install these applications if
            you have not installed them already.
<screen>
<command>apt-get install libsasl2 sasl2-bin</command>
</screen>
	    </para>
	    <para>
		A few changes are necessary to make it work properly. Because <application>Postfix</application> runs chrooted in <filename>/var/spool/postfix</filename>, <application>SASL</application> needs to be configured to run in the false root (<filename>/var/run/saslauthd</filename> becomes <filename>/var/spool/postfix/var/run/saslauthd</filename>):
<screen>
<command>mkdir -p /var/spool/postfix/var/run/saslauthd</command>
<command>rm -rf /var/run/saslauthd</command>
</screen>
	    </para>
	    <para>
            To activate <application>saslauthd</application>, edit the file <filename>/etc/default/saslauthd</filename>, and change or add the START variable. In order to configure <application>saslauthd</application> to run in the false root, add the PWDIR, PIDFILE and PARAMS variables. Finally, configure the MECHANISMS variable to your liking. The file should look like this:

<programlisting>
# This needs to be uncommented before saslauthd will be run
# automatically
START=yes

PWDIR="/var/spool/postfix/var/run/saslauthd"
PARAMS="-m ${PWDIR}"
PIDFILE="${PWDIR}/saslauthd.pid"

# You must specify the authentication mechanisms you wish to use.
# This defaults to "pam" for PAM support, but may also include
# "shadow" or "sasldb", like this:
# MECHANISMS="pam shadow"

MECHANISMS="pam"
</programlisting>
            </para>
<note>
<para>
If you prefer, you can use <emphasis role="strong">shadow</emphasis>
instead of <emphasis role="strong">pam</emphasis>. This will use MD5
hashed password transfer and is perfectly secure. The username and
password needed to authenticate will be those of the users on the system
you are using on the server.
</para>
</note>
        <para>
Next, update the dpkg "state" of <filename>/var/spool/portfix/var/run/saslauthd</filename>. The saslauthd init script uses this setting to create the missing directory with the appropriate permissions and ownership:
<screen>
<command>dpkg-statoverride --force --update --add root sasl 755 /var/spool/postfix/var/run/saslauthd</command>
</screen>
        </para>
        </sect3>
        <sect3 id="postfix-testing" status="complete">
          <title>Testing</title>
            <para>
          SMTP AUTH configuration is complete. Now it is time to start
          and test the setup. You can run the following command to start
          the SASL daemon:
            <screen><command>sudo /etc/init.d/saslauthd start</command></screen>

          To see if SMTP-AUTH and TLS work properly, run the following
          command:
            <screen><command>telnet mail.example.com 25</command></screen>
          After you have established the connection to the postfix mail
          server, type:
            <screen>ehlo mail.example.com</screen>
          If you see the following lines among others, then everything
          is working perfectly. Type <command>quit</command> to exit.
<programlisting>
250-STARTTLS
250-AUTH LOGIN PLAIN
250-AUTH=LOGIN PLAIN
250 8BITMIME
</programlisting>
        </para>
        </sect3>
      </sect2>
      <sect2 id="exim4" status="complete">
        <title>Exim4</title>
          <para>
            <application>Exim4</application> is is another Message Transfer
            Agent (MTA) developed at the University of Cambridge for use
            on Unix systems connected to the internet. Exim can be
            installed in place of <application>sendmail</application>,
            although the configuration of
            <application>exim</application> is quite different to
            that of <application>sendmail</application>.
          </para>
        <sect3 id="exim4-installation" status="complete">
          <title>安装</title>
            <para>
            To install <application>exim4</application>, run the following command:
<screen>
<command>sudo apt-get install exim4 exim4-base exim4-config</command>
</screen>
            </para>
        </sect3>
        <sect3 id="exim4-configuration" status="complete">
          <title>配置</title>
            <para>
            To configure <application>exim4</application>, run the following command:
<screen>
<command>sudo dpkg-reconfigure exim4-config</command>
</screen>
            The user interface will be displayed. The user interface
            lets you configure many parameters. For example, In
            <application>exim4</application> the configuration files are
            split among multiple files. If you wish to have them in one
            file you can configure accordingly in this user interface.
            </para>

            <para>
            All the parameters you configure in the user interface are
            stored in
            <filename>/etc/exim4/update-exim4.conf.conf</filename> file.
            If you wish to re-configure, either you re-run the
            configuration wizard or manually edit this file
            using your favourite editor. Once you configure, you can run
            the following command to generate the master configuration
            file:
<screen>
<command>sudo update-exim4.conf</command>
</screen>
            The master configuration file, is generated and
            it is stored in
            <filename>/var/lib/exim4/config.autogenerated</filename>. 
            
            <warning>
            <para>
            At any time, you should not edit the master configuration
            file,
            <filename>/var/lib/exim4/config.autogenerated</filename>
            manually. It is updated automatically every time you run
            <command>update-exim4.conf</command>
            </para>
            </warning>
            You can run
            the following command to start
            <application>exim4</application> daemon.
<screen>
<command>sudo /etc/init.d/exim4 start</command>
</screen>
            <emphasis role="strong">TODO:</emphasis> This section should
            cover configuring SMTP AUTH with exim4. 
            </para>
        </sect3>
      </sect2>
      <sect2 id="dovecot-server" status="complete">
        <title>Dovecot Server</title> 
          <para>
          <application>Dovecot</application> is a Mail Delivery Agent, written with security
          primarily in mind. It supports the major mailbox formats: mbox
          or Maildir. This section explain how to set it up as an imap or
          pop3 server.
          </para>
        <sect3 id="dovecot-installation" status="complete">
          <title>安装</title>
            <para>
            To install <application>dovecot</application>, run the following command in the
            command prompt:
<screen>
<command>sudo apt-get install dovecot-common dovecot-imapd dovecot-pop3d</command>
</screen>
            </para>
        </sect3>
        <sect3 id="dovecot-configuration" status="complete">
          <title>配置</title>
            <para>
            To configure <application>dovecot</application>, you can edit the file
            <filename>/etc/dovecot/dovecot.conf</filename>. You can
            choose the protocol you use. It could be pop3, pop3s (pop3
            secure), imap and imaps (imap secure). A description of these protocols is beyond the scope of this guide. For further information, refer to the wikipedia articles on <ulink url="http://en.wikipedia.org/wiki/POP3">POP3</ulink> and
            <ulink url="http://en.wikipedia.org/wiki/Internet_Message_Access_Protocol">IMAP</ulink>.
            </para>

            <para>
            IMAPS and POP3S are more secure that the simple IMAP and
            POP3 because they use SSL encryption to connect. Once you
            have chosen the protocol, amend the following line in the file
            <filename>/etc/dovecot/dovecot.conf</filename>:
<programlisting>
protocols = pop3 pop3s imap imaps
</programlisting>

            It enables the protocols when <application>dovecot</application> is started. Next, add the following line in pop3 section in the file <filename>/etc/dovecot/dovecot.conf</filename>:
<programlisting>
pop3_uidl_format = %08Xu%08Xv
</programlisting>

            Next, choose the mailbox you use. <application>Dovecot</application> supports
            <emphasis role="strong">maildir</emphasis> and <emphasis role="strong">mbox</emphasis> formats. These are the most
            commonly used mailbox formats. They both have their own
            benefits and they are discussed on <ulink url="http://dovecot.org/doc/configuration.txt">the dovecot website</ulink>.
            </para>
            <para>
            Once you have chosen your mailbox type, edit the file
            <filename>/etc/dovecot/dovecot.conf</filename> and change
            the following line:
<programlisting>
default_mail_env = maildir:~/Maildir # (for maildir)
or
default_mail_env = mbox:~/mail:INBOX=/var/spool/mail/%u # (for mbox)
</programlisting>
            </para>
<note>
<para>
You should configure your Mail Trasport Agent (MTA) to transfer the
incoming mail to this type of mailbox if it is different from the one
you have configured.
</para>
</note>
          <para>
          Once you have configured dovecot, start the <application>dovecot</application> daemon
          in order to test your setup:

          <screen><command>sudo /etc/init.d/dovecot start</command></screen>

          If you have enabled imap, or pop3, you can also try to log in
          with the commands <command>telnet localhost pop3</command> or
          <command>telnet localhost</command> imap2. If you see
          something like the following, the installation has been
          successful:
<programlisting>
bhuvan@rainbow:~$ telnet localhost pop3
Trying 127.0.0.1...
Connected to localhost.localdomain.
Escape character is '^]'.
+OK Dovecot ready.
</programlisting>
          </para>
        </sect3>
        <sect3 id="dovecot-ssl" status="complete">
          <title>Dovecot SSL Configuration</title>
            <para>
            To configure <application>dovecot</application> to use SSL, you can edit the file
            <filename>/etc/dovecot/dovecot.conf</filename> and amend
            following lines:
<programlisting>
ssl_cert_file = /etc/ssl/certs/dovecot.pem
ssl_key_file = /etc/ssl/private/dovecot.pem
ssl_disable = no
disable_plaintext_auth = no
</programlisting>

          The <emphasis role="strong">cert</emphasis> and <emphasis role="strong">key</emphasis> files are created automatically
          by <application>dovecot</application> when you install it. Please note that these keys
          are not signed and will give "bad signature" errors when
          connecting from a client. To avoid this, you can use
          commercial certificates, or even better, you can use your own
          SSL certificates.
          </para>
	</sect3>
	<sect3>
	  <title>Firewall Configuration for an Email Server</title>
          <para>
          To access your mail server from another computer, you must
          configure your firewall to allow connections to the server on
          the necessary ports.
            <itemizedlist>
            <listitem><para>IMAP - 143</para></listitem>
            <listitem><para>IMAPS - 993</para></listitem>
            <listitem><para>POP3 - 110</para></listitem>
            <listitem><para>POP3S - 995</para></listitem>
            </itemizedlist>
          </para>
        </sect3>
      </sect2>
      <sect2 id="mailman" status="complete">
        <title>Mailman</title> 
          <para>
          Mailman is an open source program for managing electronic mail
          discussions and e-newsletter lists. Many open source mailing
          lists (including all the <ulink url="http://lists.ubuntu.com">Ubuntu mailing lists</ulink>) use
          Mailman as their mailing list software. It is powerful and easy
          to install and maintain.
          </para>
        <sect3 id="mailman-installation" status="complete">
          <title>安装</title>
            <para>
            Mailman provides a web interface for the administrators
            and users. So, it requires apache with mod_perl support.
            Mailman uses an external mail server to send and receive 
			emails. It works perfectly with the following mail servers:
            </para>
            <para>
            <itemizedlist spacing="compact">
                <listitem>
                    <para><application>Postfix</application></para>
                </listitem>
                <listitem>
                    <para><application>Exim</application></para>
                </listitem>
                <listitem>
                    <para><application>Sendmail</application></para>
                </listitem>
                <listitem>
                    <para><application>Qmail</application></para>
                </listitem>
            </itemizedlist>
            </para>

            <para>
            We will see how to install mailman, the apache web server 
			and the Exim mail server. If you wish to install mailman
            with a different mail server, please refer to the references
            section. 
            </para>
          <sect4 id="mailman-apache2">
            <title>Apache2</title>
              <para>
                To install apache2 you refer to <xref linkend="http-installation"/>.
              </para>
          </sect4>
          <sect4 id="mailman-exim4">
            <title>Exim4</title>
              <para>
              To install Exim4 you run the following commands at a terminal prompt:
<screen>
<command>sudo apt-get install exim4</command>
<command>sudo apt-get install exim4-base</command>
<command>sudo apt-get install exim4-config</command>
</screen>

Once exim4 is installed, the configuration files are stored in
the <filename>/etc/exim4</filename> directory. In ubuntu, by default, the exim4 configuration files are
split across different files. You can change this behavior by changing
the following variable in the <filename>/etc/exim4/update-exim4.conf</filename> file:

              <itemizedlist spacing="compact">
              <listitem>
                <para><application>dc_use_split_config='true'</application></para>
              </listitem>
              </itemizedlist>
              </para>
          </sect4>
          <sect4 id="mailman-mailman">
            <title>Mailman</title>
              <para>
              To install Exim4, run following command at a terminal prompt:
<screen>
<command>sudo apt-get install mailman</command> 
</screen>

It copies the installation files in
<application>/var/lib/mailman</application> directory. It installs the
CGI scripts in <application>/usr/lib/cgi-bin/mailman</application>
directory.  It creates <emphasis>list</emphasis> linux
user. It creates the <emphasis>list</emphasis> linux
group. The mailman process will be owned by this user. 
              </para>
          </sect4>
        </sect3>
        <sect3 id="mailman-configuration" status="complete">
          <title>配置</title>
            <para>
            This section assumes you have successfully installed
            <application>mailman</application>,
            <application>apache2</application>, and
            <application>exim4</application>. Now you just need
            to configure them. 
            </para>
          <sect4 id="mailman-conf-apache2">
            <title>Apache2</title>
              <para>
              Once apache2 is installed, you can add the following lines in
              the <filename>/etc/apache2/apache2.conf</filename> file:
<programlisting>
Alias /images/mailman/ "/usr/share/images/mailman/"
Alias /pipermail/ "/var/lib/mailman/archives/public/"
</programlisting>

Mailman uses apache2 to render its CGI scripts. The mailman CGI scripts
are installed in the <application>/usr/lib/cgi-bin/mailman</application>
directory. So, the mailman url will be
http://hostname/cgi-bin/mailman/. You can make changes to the
<filename>/etc/apache2/apache2.conf</filename> file if you wish to
change this behavior.
              </para>
          </sect4>

          <sect4 id="mailman-conf-exim4">
            <title>Exim4</title>
              <para>
              Once Exim4 is installed, you can start the Exim server using the following
              command from a terminal prompt:
<screen>
<command>sudo apt-get /etc/init.d/exim4 start</command>
</screen>

In order to make mailman work with exim4, you need to configure exim4.
As mentioned earlier, by default, exim4 uses multiple configuration
files of different types. For details, please refer to the <ulink url="http://www.exim.org">Exim</ulink> website.  To run mailman, we
should add new a configuration file to the following configuration
types: 
              <itemizedlist spacing="compact">
              <listitem>
                <para>Main</para>
              </listitem>
              <listitem>
                <para>Transport</para>
              </listitem>
              <listitem>
                <para>Router</para>
              </listitem>
              </itemizedlist>
              Exim creates a master configuration file by sorting all
              these mini configuration files. So, the order of these
              configuration files is very important.
              </para>
          </sect4>
          <sect4 id="mailman-conf-main">
            <title>Main</title>
              <para>
              All the configuration files belonging to the main type are
              stored in the
              <filename>/etc/exim4/conf.d/main/</filename> directory. You can add
              the following content to a new file, named <filename>04_exim4-config_mailman</filename>:

<programlisting>
# start
# Home dir for your Mailman installation -- aka Mailman's prefix
# directory.
# On Ubuntu this should be "/var/lib/mailman"
# This is normally the same as ~mailman
MM_HOME=/var/lib/mailman
#
# User and group for Mailman, should match your --with-mail-gid
# switch to Mailman's configure script.  Value is normally "mailman"
MM_UID=list
MM_GID=list
#
# Domains that your lists are in - colon separated list
# you may wish to add these into local_domains as well
domainlist mm_domains=hostname.com
#
# -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
#
# These values are derived from the ones above and should not need
# editing unless you have munged your mailman installation
#
# The path of the Mailman mail wrapper script
MM_WRAP=MM_HOME/mail/mailman
#
# The path of the list config file (used as a required file when
# verifying list addresses)
MM_LISTCHK=MM_HOME/lists/${lc::$local_part}/config.pck
# end
</programlisting>
          </para>
          </sect4>
          <sect4 id="mailman-conf-transport">
            <title>Transport</title>
              <para>
All the configuration files belonging to transport type are stored in
the <filename>/etc/exim4/conf.d/transport/</filename> directory. You
can add the following content to a new file named <filename>
40_exim4-config_mailman</filename>:

<programlisting>
  mailman_transport:
   driver = pipe
   command = MM_WRAP \
               '${if def:local_part_suffix \
                     {${sg{$local_part_suffix}{-(\\w+)(\\+.*)?}{\$1}}} \
                     {post}}' \
               $local_part
    current_directory = MM_HOME
    home_directory = MM_HOME
    user = MM_UID
    group = MM_GID
</programlisting>
              </para>
          </sect4>
          <sect4 id="mailman-conf-router">
            <title>Router</title>
              <para>
All the configuration files belonging to router type are stored in the
<filename>/etc/exim4/conf.d/router/</filename> directory. You can add the following content
in to a new file named <filename>101_exim4-config_mailman</filename>:
<programlisting>
  mailman_router:
   driver = accept
   require_files = MM_HOME/lists/$local_part/config.pck
   local_part_suffix_optional
   local_part_suffix = -bounces : -bounces+* : \
                       -confirm+* : -join : -leave : \
                       -owner : -request : -admin
   transport = mailman_transport
</programlisting>

              </para>
<warning>
<para>
The order of main and transport configuration files can be in any order.
But, the order of router configuration files must be the same.
This particular file must appear before the
<application>200_exim4-config_primary</application> file.
These two configuration files contain same type of information. The
first file takes the precedence. For more details, please refer to the
references section.
</para>
</warning>
          </sect4>
          <sect4 id="mailman-conf-mailman">
            <title>Mailman</title>
              <para>
Once mailman is installed, you can run it using the following command:
<screen>
<command>sudo /etc/init.d/mailman start</command>
</screen>

Once mailman is installed, you should create the default mailing list.
Run the following command to create the mailing list:


<screen>
<command>sudo /usr/sbin/newlist mailman</command>
</screen>

<programlisting>
  Enter the email address of the person running the list: bhuvan at ubuntu.com
  Initial mailman password:
  To finish creating your mailing list, you must edit your <filename>/etc/aliases</filename> (or
  equivalent) file by adding the following lines, and possibly running the
  `newaliases' program:

  ## mailman mailing list
  mailman:              "|/var/lib/mailman/mail/mailman post mailman"
  mailman-admin:        "|/var/lib/mailman/mail/mailman admin mailman"
  mailman-bounces:      "|/var/lib/mailman/mail/mailman bounces mailman"
  mailman-confirm:      "|/var/lib/mailman/mail/mailman confirm mailman"
  mailman-join:         "|/var/lib/mailman/mail/mailman join mailman"
  mailman-leave:        "|/var/lib/mailman/mail/mailman leave mailman"
  mailman-owner:        "|/var/lib/mailman/mail/mailman owner mailman"
  mailman-request:      "|/var/lib/mailman/mail/mailman request mailman"
  mailman-subscribe:    "|/var/lib/mailman/mail/mailman subscribe mailman"
  mailman-unsubscribe:  "|/var/lib/mailman/mail/mailman unsubscribe mailman"

  Hit enter to notify mailman owner...

  # 
</programlisting>

We have configured exim to recognize all emails from mailman. So, it is
not mandatory to make any new entries in
<filename>/etc/aliases</filename>.  If you have made any changes
to the configuration files, please ensure that you restart those
services before continuing to next section.
</para>
          </sect4>
        </sect3>
        <sect3 id="mailman-admin" status="complete">
          <title>Administration</title>
<para>
We assume you have a default installation. The
mailman cgi scripts are still in
<application>/usr/lib/cgi-bin/mailman/</application> directory.  Mailman
provides a web based administration facility. To access this page, point
your browser to the following url: 

</para>
<para>
http://hostname/cgi-bin/mailman/admin
</para>

<para>
The default mailing list, <emphasis>mailman</emphasis>,
will appear in this screen. If you click the mailing list name, it
will ask for your authentication password.  If you enter the correct
password, you will be able to change administrative settings of this
mailing list.

You can create a new mailing list using command line utility
(<command>/usr/sbin/newlist</command>).
Alternatively, you can create a new mailing list using web interface. 
</para>
        </sect3>
        <sect3 id="mailman-users" status="complete">
          <title>Users</title>
<para>
Mailman provides a web based interface for users. To access this page,
point your browser to the following url:
</para>

<para>
http://hostname/cgi-bin/mailman/listinfo
</para>

<para>
The default mailing list, <emphasis>mailman</emphasis>,
will appear in this screen. If you
click the mailing list name, it will display the subscription form. You
can enter your email address, name (optional), and password to subscribe.
An email invitation will be sent to you. You can follow the
instructions in the email to subscribe.
</para>
        </sect3>
        <sect3 id="mailman-references" status="complete">
          <title>引用</title>
<para>
<ulink url="http://www.list.org/mailman-install/index.html"> GNU Mailman
- Installation Manual</ulink>
</para>
<para>
<ulink url="http://www.exim.org/howto/mailman21.html">HOWTO - Using Exim
4 and Mailman 2.1 together</ulink>
</para>
        </sect3>
      </sect2>
    </sect1>
	</chapter>
