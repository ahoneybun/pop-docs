<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE chapter PUBLIC "-//OASIS//DTD DocBook XML V4.3//EN" "http://www.oasis-open.org/docbook/xml/4.3/docbookx.dtd" [
<!ENTITY % globalent SYSTEM "../../../libs/global.ent">
<!-- NAMES --><!ENTITY canonical-name "Canonical Ltd.">
<!ENTITY project-name "Ubuntu Documentation Project">
<!ENTITY ubuntu "<phrase>Ubuntu</phrase>">
<!-- VERSIONS --><!ENTITY distro-version "Dapper Drake">
<!ENTITY distro-rev "6.06 LTS">
<!ENTITY distro-release-date "June 2006">
<!ENTITY linux-kernel-version "2.6.15">
<!ENTITY gcc-version "4.0.3">
<!ENTITY glibc-version "2.3.6">
<!ENTITY python-version "2.4.3">
<!-- AUTHORS --><!ENTITY author-ubuntu-documentation-project SYSTEM "../common/authors/ubuntu-documentation-project.xml">
<!ENTITY author-christoph-haas SYSTEM "../common/authors/christoph-haas.xml">
<!ENTITY author-alexander-poslavsky SYSTEM "../common/authors/alexander-poslavsky.xml">
<!ENTITY author-alan-hood SYSTEM "../common/authors/alan-hood.xml">
<!ENTITY author-johnathon-hornbeck SYSTEM "../common/authors/johnathon-hornbeck.xml">
<!ENTITY author-nick-loeve SYSTEM "../common/authors/nick-loeve.xml">
<!ENTITY author-gordon-ingram SYSTEM "../common/authors/gordon-ingram.xml">
<!ENTITY author-sean-wheller SYSTEM "../common/authors/sean-wheller.xml">
<!ENTITY author-enrico-zini SYSTEM "../common/authors/enrico-zini.xml">
<!ENTITY author-kevin-muligan SYSTEM "../common/authors/kevin-muligan.xml">
<!ENTITY author-ari-torhamo SYSTEM "../common/authors/ari-torhamo.xml">
<!ENTITY author-jeff-schering SYSTEM "../common/authors/jeff-schering.xml">
<!ENTITY author-corey-burger SYSTEM "../common/authors/corey-burger.xml">
<!ENTITY author-niel-tallim SYSTEM "../common/authors/niel-tallim.xml">
<!ENTITY author-henry-meyerding SYSTEM "../common/authors/henry-meyerding.xml">
<!ENTITY author-matthew-east SYSTEM "../common/authors/matthew-east.xml">
<!ENTITY author-jerome-gotangco SYSTEM "../common/authors/jerome-gotangco.xml">
<!ENTITY author-johnathan-jesse SYSTEM "../common/authors/johnathan-jesse.xml">
<!ENTITY author-greg-taylor SYSTEM "../common/authors/greg-taylor.xml">
<!ENTITY author-troy-williams SYSTEM "../common/authors/troy-williams.xml">
<!ENTITY author-matt-galvin SYSTEM "../common/authors/matt-galvin.xml">
<!ENTITY author-robert-stoffers SYSTEM "../common/authors/robert-stoffers.xml">
<!ENTITY author-jordan-mantha SYSTEM "../common/authors/jordan-mantha.xml">
<!ENTITY author-venkat-raghavan SYSTEM "../common/authors/venkat-raghavan.xml">
<!ENTITY author-brian-burger SYSTEM "../common/authors/brian-burger.xml">
<!ENTITY author-rocco-stanzione SYSTEM "../common/authors/rocco-stanzione.xml">
<!ENTITY glossary SYSTEM "../common/C/glossary.xml">
<!-- LEGAL URLs --><!ENTITY gpl-url '<ulink url="http://www.gnu.org/licenses/gpl.html">GNU General Public License</ulink>'>
<!ENTITY cc "http://creativecommons.org/">
<!ENTITY cc-attrib '<ulink url="http://creativecommons.org/licenses/by-sa/2.0/">Attribution-ShareAlike 2.0</ulink>'>
<!ENTITY cc-fulldeed-url "http://creativecommons.org/licenses/by-sa/2.0/legalcode/">
<!ENTITY fdl-url '<ulink url="http://www.gnu.org/copyleft/fdl.html">GNU Free Documentation License</ulink>'>
<!ENTITY cc-disclaimer-url "http://creativecommons.org/licenses/disclaimer-popup?lang=en">
<!-- CANONICAL URL RESOURCES --><!ENTITY canonical-url "http://www.canonical.com">
<!-- UBUNTU URL RESOURCES --><!ENTITY ubuntu-packages "http://packages.ubuntu.com">
<!ENTITY ubuntu-dpkgfile "ubuntu5.10.tar">
<!ENTITY ubuntu-web "http://www.ubuntu.com">
<!ENTITY ubuntu-main "http://www.ubuntu.com">
<!ENTITY ubuntu-download "http://www.ubuntu.com/download">
<!ENTITY ubuntu-forums "http://www.ubuntu.com/community/forums">
<!ENTITY ubuntu-components "http://www.ubuntu.com/ubuntu/components">
<!ENTITY ubuntu-lists "http://lists.ubuntu.com">
<!ENTITY ubuntu-wiki "http://wiki.ubuntu.com">
<!ENTITY ubuntu-irc "irc.freenode.net channel #ubuntu">
<!ENTITY ubuntu-bugzilla "https://launchpad.net/distros/ubuntu/+bugs">
<!ENTITY ubuntu-doc-bugs "https://launchpad.net/products/ubuntu-doc/+bugs">
<!ENTITY ubuntu-paidsupport "http://www.ubuntu.com/support/supportoptions/paidsupport">
<!ENTITY ubuntu-freesupport "http://www.ubuntu.com/support/supportoptions/freesupport">
<!ENTITY ubuntu-comments "http://www.ubuntuforums.org/showthread.php?p=21787">
<!ENTITY ubuntu-documentation "http://help.ubuntu.com">
<!ENTITY ubuntu-documentation-repos "https://docteam.ubuntu.com/repos/trunk">
<!ENTITY ubuntu-doc-team "https://wiki.ubuntu.com/DocumentationTeam">
<!ENTITY ubuntu-doc-list "http://lists.ubuntu.com/mailman/listinfo/ubuntu-doc">
<!ENTITY ubuntu-shipit "http://shipit.ubuntu.com">
<!ENTITY ubuntu-launchpad "https://launchpad.ubuntu.com">
<!ENTITY ubuntu-rosetta "https://launchpad.ubuntu.com/rosetta">
<!ENTITY ubuntu-planet "http://planet.ubuntu.com">
<!ENTITY ubuntu-philosophy "http://www.ubuntu.com/ubuntu/philosophy">
<!ENTITY ubuntu-participate "http://www.ubuntu.com/community/participate/">
<!-- UBUNTU WIKI RESOURCES --><!ENTITY wiki-UserDocumentation "https://wiki.ubuntu.com/UserDocumentation">
<!ENTITY restricted-formats "https://wiki.ubuntu.com/RestrictedFormats">
<!ENTITY wiki-RestrictedFormats "https://wiki.ubuntu.com/RestrictedFormats">
<!ENTITY wiki-XChatHowto "https://wiki.ubuntu.com/XChatHowto">
<!ENTITY wiki-RootSudo "https://wiki.ubuntu.com/RootSudo">
<!ENTITY wiki-HowToGetHelp "https://wiki.ubuntu.com/HowToGetHelp">
<!ENTITY transcode "https://wiki.ubuntu.com/DVDRippingandEncoding">
<!ENTITY wiki-Wine "https://wiki.ubuntu.com/Wine">
<!ENTITY wiki-Cedega "https://wiki.ubuntu.com/Cedega">
<!ENTITY wiki-Nano "https://wiki.ubuntu.com/NanoHowto">
<!ENTITY wiki-locoteams "https://wiki.ubuntu.com/LoCoTeamList">
<!ENTITY wiki-BasicCommands "https://wiki.ubuntu.com/BasicCommands">
<!ENTITY wiki-filepermissions "https://wiki.ubuntu.com/FilePermissions">
<!-- KUBUNTU URL RESOURCES --><!ENTITY kubuntu-web "http://www.kubuntu.org">
<!ENTITY kubuntu-main "http://www.kubuntu.org">
<!ENTITY kubuntu-download "http://releases.ubuntu.com/kubuntu/">
<!ENTITY kubuntu-packages "http://packages.ubuntu.com/breezy/">
<!ENTITY kubuntu-cdpackages-nodefault "http://people.ubuntu.com/~cjwatson/seeds/kubuntu-breezy/ship">
<!ENTITY kubuntu-lists "http://lists.ubuntu.com/archives/kubuntu-users/">
<!ENTITY kubuntu-lists-users "http://lists.ubuntu.com/mailman/listinfo/kubuntu-users/">
<!ENTITY kubuntu-lists-devel "http://lists.ubuntu.com/mailman/listinfo/kubuntu-devel/">
<!ENTITY kubuntu-mirrors "http://distrowatch.com/kubuntu">
<!ENTITY kubuntu-forums "http://ubuntuforums.org/forumdisplay.php?f=68">
<!ENTITY kubuntu-forums2 "http://kubuntuforums.net">
<!ENTITY kubuntu-wiki "http://www.ubuntu.com/wiki/Kubuntu">
<!ENTITY kubuntu-irc "irc.freenode.net channel kubuntu">
<!ENTITY kubuntu-documentation-site "http://www.kubuntu.org/documentation.php">
<!ENTITY kubuntu-wiki-UserDocumentation "https://wiki.kubuntu.com/UserDocumentation">
<!-- XUBUNTU URL RESOURCES --><!ENTITY xubuntu-irc "irc.freenode.net channel xubuntu">
<!-- DEBIAN RESOURCES --><!ENTITY debian-apt "http://www.debian.org/doc/user-manuals#apt-howto">
<!-- EXTERNAL URL RESOURCES --><!ENTITY linmodem "http://www.linmodems.org/">
<!ENTITY gnome "http://www.gnome.org/">
<!ENTITY linuxorg "http://www.linux.org/">
<!ENTITY ooo "http://www.openoffice.org/">
<!ENTITY kde "http://www.kde.org/">
<!ENTITY lugww "http://lugww.counter.li.org/">
<!ENTITY ubuntu-watch "http://distrowatch.com/ubuntu/">
<!ENTITY realplayer-download "http://www.real.com/linux/">
<!ENTITY nvu-download "http://www.nvu.com/download.html">
<!ENTITY sunjava-download "http://java.sun.com/j2se/1.5.0/download.jsp">
<!ENTITY xorg "http://www.x.org">
<!ENTITY dyndns "http://www.dyndns.org">
<!ENTITY shoutcast "http://www.shoutcast.com/">
<!ENTITY freedomtoaster "http://www.freedomtoaster.org/">
<!-- ubuntu-screenshots TODO --><!ENTITY kubuntu-screenshots "http://shots.osdir.com/slideshows/slideshow.php?release=306&amp;slide=1">
<!ENTITY mozilla "http://www.mozilla.org/">
<!ENTITY mozilla-firefox "http://www.mozilla.org/products/firefox/">
<!ENTITY gnu "http://www.gnu.org/">
<!ENTITY gnu-philosophy "http://www.gnu.org/philosophy/">
<!ENTITY win4lin "http://www.win4lin.com">
<!ENTITY codeweavers "http://www.codeweavers.com">
<!ENTITY kernel "http://www.kernel.org">
<!ENTITY google "http://www.google.com">
<!ENTITY kdelook " http://www.kde-look.org">
<!ENTITY lulu-store "http://www.lulu.com/ubuntu-doc">
<!-- this entity controls the url for addons--><!ENTITY java-download "http://java.sun.com/j2se/1.5.0/download.jsp">
<!ENTITY skype-deb "skype_1.2.0.17-1_i386.deb">
<!ENTITY skype-download "http://www.skype.com/go/getskype-linux-deb">
<!ENTITY scanmodem-gz "scanModem.gz">
<!ENTITY scanmodem-url "http://linmodems.technion.ac.il/packages/scanModem.gz">
<!ENTITY ext2fs-url "http://www.fs-driver.org/index.html">
<!ENTITY mvb-tar "mvb_1.6.tgz">
<!ENTITY mvb-url "http://www.xscd.com/pub/mvb/&mvb-tar;">
<!-- TLDP --><!ENTITY ldp-pre-install-check "http://tldp.org/HOWTO/Pre-Installation-Checklist/">
<!-- LANGUAGES (sorted by two letter code)--><!ENTITY Afar "aa">
<!ENTITY Abkhazian "ab">
<!ENTITY Afrikaans "af">
<!ENTITY Amharic "af">
<!ENTITY Arabic "ar">
<!ENTITY Assamese "as">
<!ENTITY Aymara "ay">
<!ENTITY Azerbaijani "az">
<!ENTITY Bashkir "ba">
<!ENTITY Byelorussian "be">
<!ENTITY Bulgarian "bg">
<!ENTITY Bihari "bh">
<!ENTITY Bislama "bi">
<!ENTITY Bangla "bn">
<!ENTITY Bengali "bn">
<!ENTITY Tibetan "bo">
<!ENTITY Breton "br">
<!ENTITY Catalan "ca">
<!ENTITY Corsican "co">
<!ENTITY Czech "cs">
<!ENTITY Welsh "cy">
<!ENTITY Danish "da">
<!ENTITY German "de">
<!ENTITY Bhutani "dz">
<!ENTITY Greek "el">
<!-- <!ENTITY EnglishAmerican 'en'> --><!ENTITY EnglishAmerican "C">
<!ENTITY Esperanto "eo">
<!ENTITY Spanish "es">
<!ENTITY Estonian "et">
<!ENTITY Basque "eu">
<!ENTITY Persian "fa">
<!ENTITY Finnish "fi">
<!ENTITY Fiji "fj">
<!ENTITY Faeroese "fo">
<!ENTITY French "fr">
<!ENTITY Frisian "fy">
<!ENTITY Irish "ga">
<!ENTITY Gaelic "gd">
<!ENTITY ScotsGaelic "gd">
<!ENTITY Galician "gl">
<!ENTITY Guarani "gn">
<!ENTITY Gujarati "gu">
<!ENTITY Hausa "ha">
<!ENTITY Hindi "hi">
<!ENTITY Croatian "hr">
<!ENTITY Hungarian "hu">
<!ENTITY Armenian "hy">
<!ENTITY Interlingua "ia">
<!ENTITY Interlingue "ie">
<!ENTITY Inupiak "ik">
<!ENTITY Indonesian "in">
<!ENTITY Icelandic "is">
<!ENTITY Italian "it">
<!ENTITY Hebrew "iw">
<!ENTITY Japanese "ja">
<!ENTITY Yiddish "ji">
<!ENTITY Javanese "jw">
<!ENTITY Georgian "ka">
<!ENTITY Kazakh "kk">
<!ENTITY Greenlandic "kl">
<!ENTITY Cambodian "km">
<!ENTITY Kannada "kn">
<!ENTITY Korean "ko">
<!ENTITY Kashmiri "ks">
<!ENTITY Kurdish "ku">
<!ENTITY Kirghiz "ky">
<!ENTITY Latin "la">
<!ENTITY Lingala "ln">
<!ENTITY Laothian "lo">
<!ENTITY Lithuanian "lt">
<!ENTITY Latvian "lv">
<!ENTITY Lettish "lv">
<!ENTITY Malagasy "mg">
<!ENTITY Maori "mi">
<!ENTITY Macedonian "mk">
<!ENTITY Malayalam "ml">
<!ENTITY Mongolian "mn">
<!ENTITY Moldavian "mo">
<!ENTITY Marathi "mr">
<!ENTITY Malay "ms">
<!ENTITY Maltese "mt">
<!ENTITY Burmese "my">
<!ENTITY Nauru "na">
<!ENTITY Nepali "ne">
<!ENTITY Dutch "nl">
<!ENTITY Norwegian "no">
<!ENTITY Occitan "oc">
<!ENTITY Afan "om">
<!ENTITY Oromo "om">
<!ENTITY Oriya "or">
<!ENTITY Punjabi "pa">
<!ENTITY Polish "pl">
<!ENTITY Pushto "ps">
<!ENTITY Pashto "ps">
<!ENTITY Portuguese "pt">
<!ENTITY Quechua "qu">
<!ENTITY Rhaeto-Romance "rm">
<!ENTITY Kirundi "rn">
<!ENTITY Romanian "ro">
<!ENTITY Russian "ru">
<!ENTITY Kinyarwanda "rw">
<!ENTITY Sanskrit "sa">
<!ENTITY Sindhi "sd">
<!ENTITY Sangro "sg">
<!ENTITY Serbo-Croatian "sh">
<!ENTITY Singhalese "si">
<!ENTITY Slovak "sk">
<!ENTITY Slovenian "sl">
<!ENTITY Samoan "sm">
<!ENTITY Shona "sn">
<!ENTITY Somali "so">
<!ENTITY Albanian "sq">
<!ENTITY Serbian "sr">
<!ENTITY Siswati "ss">
<!ENTITY Sesotho "st">
<!ENTITY Sudanese "su">
<!ENTITY Swedish "sv">
<!ENTITY Swahili "sw">
<!ENTITY Tamil "ta">
<!ENTITY Tegulu "te">
<!ENTITY Tajik "tg">
<!ENTITY Thai "th">
<!ENTITY Tigrinya "ti">
<!ENTITY Turkmen "tk">
<!ENTITY Tagalog "tl">
<!ENTITY Setswana "tn">
<!ENTITY Tonga "to">
<!ENTITY Turkish "tr">
<!ENTITY Tsonga "ts">
<!ENTITY Tatar "tt">
<!ENTITY Twi "tw">
<!ENTITY Ukrainian "uk">
<!ENTITY Urdu "ur">
<!ENTITY Uzbek "uz">
<!ENTITY Vietnamese "vi">
<!ENTITY Volapuk "vo">
<!ENTITY Wolof "wo">
<!ENTITY Xhosa "xh">
<!ENTITY Yoruba "yo">
<!ENTITY Chinese "zh">
<!ENTITY Zulu "zu">
<!ENTITY % genericent SYSTEM "../../libs/generic.ent">
<!ENTITY sg-title "Server Guide">
<!ENTITY secguide-title "Security Guide">
<!ENTITY installguide-rev "0.1">
<!ENTITY % cdo-C SYSTEM "../../../libs/cdo-C.ent">
<!-- COMMON DOC OBJECTS --><!ENTITY copyright SYSTEM "../common/C/copyright.xml">
<!ENTITY conventions SYSTEM "../common/C/conventions.xml">
<!ENTITY feedback SYSTEM "../common/C/feedback.xml">
<!ENTITY publisher SYSTEM "../common/C/publisher.xml">
<!ENTITY legalnotice SYSTEM "../common/C/legalnotice.xml">
<!ENTITY disclaimer SYSTEM "../common/C/disclaimer.xml">
<!ENTITY inline-ubuntu-icon SYSTEM "../common/C/inlinemediaobject-ubuntu-icon.xml">
<!ENTITY inline-ubuntu-icon-header SYSTEM "../common/C/inlinemediaobject-ubuntu-icon-header.xml">
<!ENTITY relative-ubuntu-icon SYSTEM "../common/C/mediaobject-relative-ubuntu-icon.xml">
<!ENTITY ubuntu-icon SYSTEM "../common/C/mediaobject-ubuntu-icon.xml">
<!ENTITY gpl SYSTEM "../common/C/gpl.xml">
<!ENTITY fdl SYSTEM "../common/C/fdl.xml">
<!ENTITY cc-by-sa SYSTEM "../common/C/ccbysa.xml">
<!ENTITY % gnome-menus-C SYSTEM "../../../ubuntu/libs/gnome-menus-C.ent">
<!-- MENUS --><!-- Please keep entries alphabetical, it makes them much easier to find & use --><!ENTITY about-me SYSTEM "../menus/C/about-me.xml">
<!ENTITY accessories SYSTEM "../menus/C/accessories.xml">
<!ENTITY acro-read SYSTEM "../menus/C/acro-read.xml">
<!ENTITY administration SYSTEM "../menus/C/administration.xml">
<!ENTITY amule SYSTEM "../menus/C/amule.xml">
<!ENTITY archive-man SYSTEM "../menus/C/archive-man.xml">
<!ENTITY assistive-technology-preferences SYSTEM "../menus/C/assistive-technology-preferences.xml">
<!ENTITY azureus SYSTEM "../menus/C/azureus.xml">
<!ENTITY blender3d SYSTEM "../menus/C/blender3d.xml">
<!ENTITY boot SYSTEM "../menus/C/boot.xml">
<!ENTITY calculator SYSTEM "../menus/C/calculator.xml">
<!ENTITY character-map SYSTEM "../menus/C/character-map.xml">
<!ENTITY desktop-background SYSTEM "../menus/C/desktop-background.xml">
<!ENTITY desktop-preferences SYSTEM "../menus/C/desktop-preferences.xml">
<!ENTITY device-manager SYSTEM "../menus/C/device-manager.xml">
<!ENTITY dictionary SYSTEM "../menus/C/dictionary.xml">
<!ENTITY disks SYSTEM "../menus/C/disks.xml">
<!ENTITY downloader-x SYSTEM "../menus/C/downloader-x.xml">
<!ENTITY file-management SYSTEM "../menus/C/file-management.xml">
<!ENTITY firefox SYSTEM "../menus/C/firefox.xml">
<!ENTITY firestarter-firewall-tool SYSTEM "../menus/C/firestarter-firewall-tool.xml">
<!ENTITY font SYSTEM "../menus/C/font.xml">
<!ENTITY gaim SYSTEM "../menus/C/gaim.xml">
<!ENTITY games SYSTEM "../menus/C/games.xml">
<!ENTITY gftp SYSTEM "../menus/C/gftp.xml">
<!ENTITY gimp SYSTEM "../menus/C/gimp.xml">
<!ENTITY gnome-app-install SYSTEM "../menus/C/gnomeappinstall.xml">
<!ENTITY gnome-config-editor SYSTEM "../menus/C/gnome-config-editor.xml">
<!ENTITY gparted SYSTEM "../menus/C/gparted.xml">
<!ENTITY graphics SYSTEM "../menus/C/graphics.xml">
<!ENTITY gthumb SYSTEM "../menus/C/gthumb.xml">
<!ENTITY home-folder SYSTEM "../menus/C/home-folder.xml">
<!ENTITY inkscape SYSTEM "../menus/C/inkscape.xml">
<!ENTITY internet SYSTEM "../menus/C/internet.xml">
<!ENTITY keyboard SYSTEM "../menus/C/keyboard.xml">
<!ENTITY keyboard-shortcuts SYSTEM "../menus/C/keyboard-shortcuts.xml">
<!ENTITY limewire SYSTEM "../menus/C/limewire.xml">
<!ENTITY login-screen-setup SYSTEM "../menus/C/login-screen-setup.xml">
<!ENTITY logout SYSTEM "../menus/C/logout.xml">
<!ENTITY menu-editor SYSTEM "../menus/C/menu-editor.xml">
<!ENTITY menus-and-toolbars SYSTEM "../menus/C/menus-and-toolbars.xml">
<!ENTITY mouse SYSTEM "../menus/C/mouse.xml">
<!ENTITY multimedia-systems-selector SYSTEM "../menus/C/multimedia-systems-selector.xml">
<!ENTITY network-proxy SYSTEM "../menus/C/network-proxy.xml">
<!ENTITY networking SYSTEM "../menus/C/networking.xml">
<!ENTITY nvu SYSTEM "../menus/C/nvu.xml">
<!ENTITY open-office SYSTEM "../menus/C/open-office.xml">
<!ENTITY palmos-devices SYSTEM "../menus/C/palmos-devices.xml">
<!ENTITY preferred-applications SYSTEM "../menus/C/preferred-applications.xml">
<!ENTITY printing SYSTEM "../menus/C/printing.xml">
<!ENTITY qtparted SYSTEM "../menus/C/qtparted.xml">
<!ENTITY remote-desktop SYSTEM "../menus/C/remote-desktop.xml">
<!ENTITY removable-drives-and-media SYSTEM "../menus/C/removable-drives-and-media.xml">
<!ENTITY realplayer SYSTEM "../menus/C/realplayer.xml">
<!ENTITY rhythmbox SYSTEM "../menus/C/rhythmbox.xml">
<!ENTITY route-planner SYSTEM "../menus/C/route-planner.xml">
<!ENTITY screen-resolution SYSTEM "../menus/C/screen-resolution.xml">
<!ENTITY screensaver SYSTEM "../menus/C/screensaver.xml">
<!ENTITY scribus SYSTEM "../menus/C/scribus.xml">
<!ENTITY services SYSTEM "../menus/C/services.xml">
<!ENTITY sessions SYSTEM "../menus/C/sessions.xml">
<!ENTITY shared-folders SYSTEM "../menus/C/shared-folders.xml">
<!ENTITY skype SYSTEM "../menus/C/skype.xml">
<!ENTITY software-properties SYSTEM "../menus/C/software-properties.xml">
<!ENTITY sound SYSTEM "../menus/C/sound.xml">
<!ENTITY soundandvideo SYSTEM "../menus/C/soundandvideo.xml">
<!ENTITY synaptic SYSTEM "../menus/C/synaptic.xml">
<!ENTITY systemtools SYSTEM "../menus/C/systemtools.xml">
<!ENTITY terminal SYSTEM "../menus/C/terminal.xml">
<!ENTITY text-editor SYSTEM "../menus/C/text-editor.xml">
<!ENTITY theme SYSTEM "../menus/C/theme.xml">
<!ENTITY time-date SYSTEM "../menus/C/time-date.xml">
<!ENTITY totem SYSTEM "../menus/C/totem.xml">
<!ENTITY ubuntu-update-manager SYSTEM "../menus/C/ubuntu-update-manager.xml">
<!ENTITY users SYSTEM "../menus/C/users.xml">
<!ENTITY users-groups SYSTEM "../menus/C/users-groups.xml">
<!ENTITY windows SYSTEM "../menus/C/windows.xml">
<!ENTITY xchat-gnome SYSTEM "../menus/C/xchat-gnome.xml">
<!ENTITY xine SYSTEM "../menus/C/xine.xml">
<!ENTITY xmms SYSTEM "../menus/C/xmms.xml">
<!ENTITY % xinclude SYSTEM "../../../libs/xinclude.mod">
<!ELEMENT xi:include (xi:fallback)?>
<!ATTLIST xi:include xmlns:xi CDATA #FIXED "http://www.w3.org/2001/XInclude">
<!ATTLIST xi:include href CDATA #REQUIRED>
<!ATTLIST xi:include parse (xml | text) "xml">
<!ATTLIST xi:include xpointer CDATA #IMPLIED>
<!ATTLIST xi:include encoding CDATA #IMPLIED>
<!ATTLIST xi:include accept CDATA #IMPLIED>
<!ATTLIST xi:include accept-charset CDATA #IMPLIED>
<!ATTLIST xi:include accept-language CDATA #IMPLIED>
<!ELEMENT xi:fallback ANY>
<!ATTLIST xi:fallback xmlns:xi CDATA #FIXED "http://www.w3.org/2001/XInclude">
<!ENTITY % local.preface.class "| xi:include">
<!ENTITY % local.part.class "| xi:include">
<!ENTITY % local.chapter.class "| xi:include">
<!ENTITY % local.divcomponent.mix "| xi:include">
<!ENTITY % local.para.char.mix "| xi:include">
<!ENTITY % local.info.class "| xi:include">
<!ENTITY % local.common.attrib "xmlns:xi            CDATA       #FIXED       'http://www.w3.org/2001/XInclude'">
<!ENTITY language "&EnglishAmerican;">
]>
<chapter id="networking" status="complete">
	<title>联网</title>
  <para>网络是由两个或两个以上的设备通过物理线缆或无线连接而成并在连接设备之间共享和分发信息。这些设备包括计算机系统、打印机或用有线或无线连接起来的其它相关设备。</para>
  <para>Ubuntu 服务器版指南的这部分提供与联网相关的一般和特定信息，包括网络概念的简介以及对常用网络协议及服务器应用程序的详细讨论。</para>
	<sect1 id="network-configuration" status="complete">
		<title>网络配置</title>
          <para>Ubuntu 提供了许多图形化工具来配制您的网络设备。本文适用于服务器管理员并聚焦在命令行中管理您的网络。</para>
      <sect2 id="ethernet" status="complete">
        <title>以太网</title> 
          <para>大多数以太网配置都集中在单个文件 <filename>/etc/network/interfaces</filename> 中。如果您没有以太网设备，那么在该文件中将只出现环回口，该文件看上去类似这样：<screen># This file describes the network interfaces available on your system
# and how to activate them. For more information, see interfaces(5).

# The loopback network interface
auto lo
iface lo inet loopback
address 127.0.0.1
netmask 255.0.0.0</screen> 如果您只有一个以太网设备 eth0，被配置成从 DHCP 服务器得到设置，并且在引导时自动激活，那么只需要再添加两行：<screen>auto eth0↵
iface eth0 inet dhcp</screen> 第一行说明 eth0 将会在您启动时自动激活。第二行说明该接口 (<quote>iface</quote>) eth0 将有得到一个 IPv4 地址空间 (如果是一个 IPv6 的设备将须将 <quote>inet</quote> 用 <quote>inet6</quote> 代替) 并且它将自动从 DHCP 中自动获得它的配置。假定您的网络和 DHCP 服务都已经被正确配置，该机的网络将不需要更多的配置。DHCP 服务器将提供默认网关 (通过 <application>route</application> 命令来实现) 、设备的 IP 地址 (通过 <application>ifconfig</application> 命令来实现)以及网络使用的 DNS 服务器 (在 <filename>/etc/resolv.conf</filename> 文件中实现)。</para>
		<para>要把您的以太网设备配置成静态 IP 地址和自定义配置的话，则要求更多的信息。假设您想指定 IP 地址 192.168.0.2 给设备 eth1，其掩码是 255.255.255.0。您的默认网关的 IP 地址是 192.168.0.1。您可以在 <filename>/etc/network/interfaces</filename> 中输入类似下面的语句：<screen>iface eth1 inet static
	address 192.168.0.2
	netmask 255.255.255.0
	gateway 192.168.0.1</screen> 在这个例子中，您将需要在 <filename>/etc/resolv.conf</filename> 中手工指定您的DNS服务器，看起来如下： <screen>search mydomain.com
nameserver 192.168.0.1
nameserver 4.2.2.2</screen> <emphasis role="italics">search</emphasis> 语句在试图解析网络名时把 mydomain.com 添到主机名查询中。举个例子，如果您的网络域名是 mydomain.com 并且您试图去 ping 主机 <quote>mybox</quote>，DNS 查询将在解析时改为 <quote>mybox.mydomain.com</quote>。<emphasis role="italics">nameserver</emphasis> 语句指定用于将主机名解析成 IP 地址的的 DNS 服务器。如果您使用自己的名称服务器，在这里输入它。否则询问您的 Internet 服务供应商要使用的主、辅 DNS 服务器，并把它们如上所示输入到 <filename>/etc/resolv.conf</filename> 中。</para>
		<para>配置更多的接口是可能的，包括拨号的 PPP 接口、IPv6 网络、VPN 设备等。更多信息和支持选项请参考 <application>man 5 interfaces</application>。记住 <application>ifup</application>/<application>ifdown</application> 脚本使用的<filename>/etc/network/interfaces</filename> 是比其他一些 Linux 发行版更高级的配置模式。传统的低级工具如<application>ifconfig</application>、<application>route</application> 和 <application>dhclient</application> 也为了 ad hoc 配置对您来说也是可用的。</para>
      </sect2>
      <sect2 id="managing-dns-entries" status="complete">
          <title>管理 DNS 记录</title>
            <para>本部分说明如何配置用来将IP地址解析成主机名或相反功能的名称服务，而不是说如何将整个系统配置成一个名称服务器。</para>
            <para>要管理 DNS 条目，您可以在 <filename>/etc/resolv.conf</filename> 文件中添加、编辑或删除 DNS 名称服务器。一个 <ulink url="../sample/resolv.conf">范例文件</ulink> 在下面给出：</para>
<programlisting>
search com
nameserver 204.11.126.131
nameserver 64.125.134.133
nameserver 64.125.134.132
nameserver 208.185.179.218
</programlisting>
            
            <para><application>search</application> 关键字指字为未完成主机名添加的字符串，在这里我们使用<application>com</application>。因此当我们运行：<command>ping ubuntu</command> 时它被理解成 <command>ping ubuntu.com</command>。</para> 

            <para><application>nameserver</application> 关键字指定名称服务器的 IP 地址，它将被用来解析 IP 地址或主机名。该文件可以有多个名称服务器记录。名称服务器将按相同顺序进行网络查询。</para>

            <warning>
            <para>如果 DNS 服务器名称是通过 DHCP 或 PPPOE 动态取回的(从您 ISP 取回)，那么不要在该文件中添加名称服务器记录。它将被自动更新。</para>
            </warning>

        </sect2>
        <sect2 id="managing-hosts" status="complete">
          <title>管理主机</title>
            <para>要管理主机，您可以在 <filename>/etc/hosts</filename> 文件中添加、编辑或删除主机。该文件包括 IP 地址和相对应的主机名。当您的系统要解析一个主机到 IP 地址或从一个 IP 地址获取主机名时，它将在使用名称服务器之前参考 <filename>/etc/hosts</filename> 文件。如果该 IP 地址已经在 <filename>/etc/hosts</filename> 文件中被列出，那么将不再使用名称服务器。这一动作可以通过编辑 <filename> /etc/nsswitch.conf</filename> 来改变，不过后果自负。</para>

            <para>如果您网络所包含计算机的 IP 地址没有在 DNS 中列出，建议您将它们加入到 <filename>/etc/hosts</filename> 文件中。</para>
        </sect2>
    </sect1>
	<sect1 id="tcpip" status="complete">
		<title>TCP/IP</title>
          <para>传输控制协议和网际协议 (TCP/IP) 是在 20世纪70年代被美国国防部高级研究规划局 (DARPA)作为在不同类型计算机及计算机网络之间的通信手段而被开发的一个标准协议簇。TCP/IP 是 Internet 的驱动力，因此它是全球最流行的网络协议簇。</para>
      <sect2 id="tcpip-introduction" status="complete">
        <title>TCP/IP 介绍</title> 
          <para>TCP/IP 的两个协议组件处理计算机网络的不同方面。<emphasis>网际协议</emphasis>，TCP/IP 中的 "IP" 是一个连接协议，只处理使用 <emphasis role="italics">IP 数据报</emphasis> 作为网络信息基本单元的网络包路由。IP 数据报由报头和其后的消息组成。<emphasis>传输控制协议</emphasis> 是 TCP/IP 中的 "TCP"，可以使网络主机之间建立用于交换数据流的连接。TCP 也保证连接之间的数据传送以及其在网络主机上的接收顺序与其从另一台网络主机上的发送顺序一致。</para>
          </sect2>
        <sect2 id="tcpip-configuration" status="complete">
          <title>TCP/IP 配置</title>
            <para>TCP/IP 协议配置由必须设置的几个元素组成，可以通过编辑相应的配置文件或配置方案如动态主机配置协议 (DHCP) 来设置，它可以配置成提供适当的 TCP/IP 配置来自动设置网络客户机。这些配置值必须正确设置，以便于您的 Ubuntu 系统进行相应网络操作。</para>
            <para>TCP/IP 常用配置元素及其作用如下所示：<itemizedlist>
               <listitem>
                  <para><emphasis role="bold">IP 地址</emphasis> IP 地址是唯一标识字符串，它由四部分由点号分隔的，范围从 0 到 255 的十进制数组成。 每部分由8个比特表示，整个地址总长为32个比特。这种格式被称为 <emphasis>dotted quad notation</emphasis>。</para>
               </listitem>
               <listitem>
                  <para><emphasis role="bold">掩码</emphasis> 子网掩码 (或简称<emphasis>掩码</emphasis>) 是一个局部位掩码，或用指定的 <emphasis>子网掩码</emphasis> 来将IP 地址中的网络分隔出来的一组标识。举个例子，在 C 类网络中，标准的掩码是 255.255.255.0 屏蔽了 IP 地址的前三个字节，并允许 IP 地址的最后一个字节指定子网中的主机。</para>
               </listitem>
               <listitem>
                  <para><emphasis role="bold">网络地址</emphasis> 网络地址表示包括IP 地址网络部分的字节。 例如， 一个 A 类网络的主机 12.128.1.2 将使用 12.0.0.0 作为网络地址，使用 12 来表示 IP 地址的第一个字节 (网络部分)， 余下的三个为 0 的字节表示可能的主机值的。网络主机使用象 192.168.1.100 这样非常普遍的不可路由的私有 IP 地址将使用 192.168.1.0 网络地址，用前三个字节来指定 C 类 192.168.1 网络，而用一个 0 来表示网络上所有可能的主机。</para>
               </listitem>
               <listitem>
                  <para><emphasis role="bold">广播地址</emphasis> 广播地址是一个允许向给定子网中的所有主机而不是一台特定的网络主机同时发送网络数据的 IP 地址。一般标准 IP 网络的地址是 255.255.255.255，但这个广播地址不能用来为 Internet 网上的每台主机发送一个广播消息，因为路由器会阻止它。更适当的广播地址设置是匹配特定子网的。例如，在流行的私有 C 类 IP 网 192.168.1.0 中，广播地址应该设为 192.168.1.255。广播消息一般都是由网络协议产生的，如地址识别协议 (ARP) 和路由信息协议 (RIP)。</para>
               </listitem>
               <listitem>
                  <para><emphasis role="bold">网关地址</emphasis> 网关地址是一个通过该地址可能会到达指定网络或网络主机的 IP 地址。如果一台网络主机希望与另一台网络主机通讯，而该机并不在同一网络中，而是要传输到另一个网络或主机上，如 Internet 主机。网关地址设置必须正确，否则您的系统将不能到达不在同一网络中的任何主机。</para>
               </listitem>
               <listitem>
                  <para><emphasis role="bold">名称服务器地址</emphasis> 名称服务器地址表示域名服务 (DNS) 系统的 IP 地址。该系统将网络主机名解析成 IP 地址。可以按顺序来指定三个不同优先级的名称服务器地址：<emphasis>主</emphasis> 名称服务器，<emphasis>次</emphasis> 名称服务器，和 <emphasis>第三</emphasis> 名称服务器。按顺序为您系统将网络主机名解析成相应的 IP 地址，你必须指定合法的名称服务器地址，该地址应该在您系统的 TCP/IP 配置中被授权使用。在许多情况下这些地址可以也应该被您的网络服务供应商提供，但也可以使用许多免费的、可供公众访问的名称服务器，如 IP 从 4.2.2.1 到 4.2.2.6 的 Level3 (Verizon) 服务器。</para>
                     <tip>
                        <para>IP 地址、掩码、网络地址、广播地址以及网关地址一般都是在文件 <filename>/etc/network/interfaces</filename> 中通过相应的语句来指定的。名称服务器地址一般是在文件 <filename>/etc/resolv.conf</filename> 中通过 <emphasis>nameserver</emphasis> 语句来指定的。更多详情，请分别查阅 <filename>interfaces</filename> 或 <filename>resolv.conf</filename> 的系统手册页。</para>
                     </tip>
                    <para>查阅 <filename>interfaces</filename> 系统手册页，可用以下命令：</para>
                    <para>
<screen>
<command>man interfaces</command>
</screen>
                    </para>
                    <para>查阅 <filename>resolv.conf</filename> 系统手册页，用以下命令：</para>
                    <para>
<screen><command>man resolv.conf</command></screen>
                    </para>
               </listitem>
            </itemizedlist></para>
        </sect2>
        <sect2 id="ip-routing" status="complete">
          <title>IP 路由</title>
            <para>IP 路由是在 TCP/IP 网络上为可能发送的网络数据指明或发现路径。路由使用一组<emphasis>路由表</emphasis>来指示网络数据包从源地址转发到目的地，经常是通过许多叫做路由器的网络节点做中转。IP 路由是 Internet 上路径发现的主要方式。IP 路由分为两种形式：<emphasis>静态路由</emphasis> 和 <emphasis>动态路由</emphasis>。</para>
            <para>静态路由包含向系统路由表中手工添加的 IP 路由，一般是通过 <application>route</application> 命令来向路由表手工添加的。静态路由与动态路由相比有许多优点，如在小网络中实施简单，有可预测性 (路由表总是事先算好，因此路由在每次使用时都相当一致)，在其它路由器和网络链路处理上比动态路由协议开销小。然而，静态路由也有一些缺点。如静态路由只限于小网络而且不能很好地进行调整。静态路由由于路由固定的特性，因此根本无法根据路由来适应网络中断和故障。</para>
            <para>动态路由有赖于从一个源到目的有多条可用 IP 路由的大型网络，利用特定的路由协议，如路由信息协议 (RIP)，可以自动调整路由表以生成可能的动态路由。动态路由相对静态路由有几个优点,如拥有较大的伸缩性和能根据网络路由来适应网络中断和故障。另外，几乎无须手工配置路由表，因为路由器可以相互学到其他已有并且可用的路由器。这一特性也消除了由于人为错误而在路由表中引入错误的可能。然而，动态路由也并不完美，其表现出来的缺点如相当复杂以及由于路由器通讯所带来的额外的网络开销，并不能使最终用户由此获益，并却一直消耗着网络带宽。</para>
        </sect2>
        <sect2 id="tcp-and-udp" status="complete">
          <title>TCP 和 UDP</title>
            <para>TCP 是一个基于连接的协议，提供纠错并通过 <emphasis>流量控制</emphasis> 来传输数据。流量控制决定什么时间一个数据流需要停止，例如在出现诸如 <emphasis>冲突</emphasis> 等问题时重发先前发送的数据包，以确保完整和准确的数据传输。TCP 常用于重要信息的交换，如数据库传输。</para>
            <para>另一方面，用户数据报协议 (UDP) 是一个 <emphasis>无连接</emphasis> 协议，很少用于重要数据的传输，因为缺乏流量控制或其他一些确保可靠数据传输的方法。UDP 常用在如音视频流这样的应用程序，由于它缺少纠错和流控，因此相对于 TCP 来说更快，而且丢失少量包通常也不会造成灾难性的后果。</para>
        </sect2>
        <sect2 id="icmp" status="complete">
          <title>ICMP</title>
            <para>Internet 控制消息协议是在Request For Comments (RFC) #792 中定义的，是对网际协议 (IP) 的一个扩充。支持的网络包包括控制、错误和信息的消息。ICMP 常被用在诸如判断一台网络主机或设备可用性的 <application>ping</application> 工具这样的网络应用程序。在网络主机和设备如路由器之间使用 ICMP 所返回的错误消息示例包括 <emphasis>Destination Unreachable</emphasis> 和 <emphasis>Time Exceeded</emphasis>。</para>
        </sect2>
        <sect2 id="daemons" status="complete">
          <title>守护程序</title>
            <para>守护程序是特殊的系统应用程序，一般常驻在后台并等待来自其他应用程序请求其所提供的功能。许多守护程序都是网络中心；在 Ubuntu 系统后台执行的许多守护程序都可以提供网络的相关功能。这些网络守护程序包括 <emphasis>超文本传输协议守护程序</emphasis> (httpd)，用于提供网站服务器功能；<emphasis>Secure SHell 守护程序</emphasis> (sshd)，用于提供安全远程登录 shell 和文件传输功能；<emphasis>Internet Message Access Protocol 守护程序</emphasis> (imapd)，用于提供 E-Mail 服务。</para>
        </sect2>
    </sect1>
	<sect1 id="firewall-configuration" status="help">
		<title>防火墙配置</title>
          <para>Linux 内核包括 <emphasis>Netfilter</emphasis> 子系统，用来处理或决定网络传输头部进入或穿过你的服务器，目前所有的 Linux 防火墙都用该系统来做包过滤。</para>
        <sect2 id="firewall-introduction" status="help">
          <title>防火墙介绍</title>
            <para>内核的包过滤系统如果没有一个用户态 (userspace) 界面来管理它的话对管理员来说几乎没有用。这正是 iptables 的目的。当一个包到达您的服务器，它从用户态 (userspace) 通过 iptables 传给 Netfilter 子系统，然后基于提供的规则去接受、操作或拒绝。因此，如果你能熟悉它的话，那么 iptables 就是您管理您防火墙所需的全部。</para>
        </sect2>
        <sect2 id="ip-masquerading" status="help">
          <title>IP 伪装</title>
            <para>IP 伪装的目的是为了允许您网络上那些有着私有的、不可路由的 IP 地址的机器可以通过做伪装的机器访问 Internet。来自您私有网络并要访问 Internet 的传输必须是可以操作的，也就是说回复要可以被路由回来以送到发出请求的机器上。要做到这一点，内核必须修改每个包 <emphasis>源</emphasis> IP 地址以便回复能被路由回它这里，而不是发出请求的私有 IP 地址，因为它们对于 Internet 来说是不存在的。Linux 使用 <emphasis>Connection Tracking</emphasis> (conntrack) 来保持那个连接是属于哪个机器的，并相应地对每个返回包重新做路由。发自您私有网络的流量就这样被伪装成源于您的网关机器。这一过程在 Microsoft 文档中被称为 Internet 连接共享。</para>
			<para>这可以用单条 iptables 规则来完成，也许基于您网络配置来说会有一些小的差异：<screen>sudo iptables -t nat -A POSTROUTING -s 192.168.0.0/16 -o ppp0 -j MASQUERADE</screen> 上述命令假设您的私有地址空间是192.168.0.0/16，您与 Internet 相连的设备是 ppp0。语法分解如下所示：<itemizedlist>
				  <listitem><para>-t nat -- 该规则将进入 nat 表</para></listitem>
				  <listitem><para>-A POSTROUTING -- 该规则将被追加 (-A) 到 POSTROUTING 链</para></listitem>
				  <listitem><para>-s 192.168.0.0/16 -- 该规则将被应用在源自指定地址空间的流量上</para></listitem>
				  <listitem><para>-o ppp0 -- 该规则应用于计划通过指定网络设备的流量。</para></listitem>
				  <listitem><para>-j MASQUERADE -- 匹配该规则的流量将如上所述 "跳转" (-j) 到 MASQUERADE (伪装) 目标。</para></listitem>
			  </itemizedlist></para>
			<para>在过滤表 (缺省表，在那里有着大多数或全部包过滤指令) 中的每条链 (chain) 都有一个默认的 ACCEPT <emphasis>策略</emphasis>，但如果您还在网关设备上设置防火墙，那么您也许还要设置 DROP 或 REJECT 策略，这时您被伪装过的流量还需要被 FORWARD 链 (chain) 中的规则允许才能正常工作：<screen>sudo iptables -A FORWARD -s 192.168.0.0/16 -o ppp0 -j ACCEPT
sudo iptables -A FORWARD -d 192.168.0.0/16 -m state --state ESTABLISHED,RELATED -i ppp0 -j ACCEPT</screen> 上述命令将允许通过从您局域网到 Internet 的所有连接，这些连接所有的相关流量也都返回到发起它们的机器。</para>
        </sect2>
        <sect2 id="firewall-tools" status="help">
          <title>工具</title>
            <para>有很多工具可以帮助您构建一个完整的防火墙，而不需要 iptables 的专业知识。偏好图形界面的，<application>Firestarter</application> 非常流行也易于使用，<application>fwbuilder</application> 则非常强大而且其界面对于用过诸如 Checkpoint FireWall-1 商业防火墙工具的管理员来说相当熟悉。如果您偏好有着纯文本配置文档的命令行工具，<application>Shorewall</application> 是个非常强大的解决方案，可以帮您为任何网络配置一个高级防火墙。如果您的网络相对简单，或如果您没有网络，那么 <application>ipkungfu</application> 将给您一个无需配置就可以工作的防火墙，也允许您通过编辑简单友好的配置文件来轻松设置更高级的防火墙。另一个感兴趣的工具就是<application>fireflier</application>，被设计成桌面防火墙应用程序。它由一个服务器 (fireflier-server) 和可选的 GUI 客户端 (GTK 或 QT) 组成，操作就象 Windows 中许多流行的交互式防火墙应用程序一样。</para>
        </sect2>
        <sect2 id="firewall-logs" status="help">
          <title>日志</title>
            <para>防火墙日志主要是为了确认攻击、找出并解决您防火墙规则的问题以及注意您网络中不正常的活动。您必须在您防火墙中包含这些日志规则以便生成相应日志，虽然，日志规则必须优先于任何可应用的最终规则 (那些决定其目的包命运的规则，如ACCEPT、DROP 或 REJECT) 。<screen>sudo iptables -A INPUT -m state --state NEW -p tcp --dport 80 -j LOG --log-prefix "NEW_HTTP_CONN: "</screen> 一个从本机发起的对 80 端口的请求将会在 dmesg 中生成一条日志，如下所示：</para>
			<para>
			  <programlisting>[4304885.870000] NEW_HTTP_CONN: IN=lo OUT= MAC=00:00:00:00:00:00:00:00:00:00:00:00:08:00 SRC=127.0.0.1 DST=127.0.0.1 LEN=60 TOS=0x00 PREC=0x00 TTL=64 ID=58288 DF PROTO=TCP SPT=53981 DPT=80 WINDOW=32767 RES=0x00 SYN URGP=0</programlisting>
			</para>
			<para>上面的日志也会出现在<filename>/var/log/messages</filename>、<filename>/var/log/syslog</filename> 和 <filename>/var/log/kern.log</filename> 中。这一过程可以通过适当编辑 <filename>/etc/syslog.conf</filename> 或安装配置 <application>ulogd</application> 并用 ULOG 代替 LOG 来进行改变。<application>ulogd</application> 守护程序是一种用户态服务器可以监听来自内核的防火墙日志指令，并且能够将其写到任何您希望的文件中，甚至是 <application>PostgreSQL</application> 或 <application>MySQL</application> 数据库。使用诸如 <application>fwanalog</application>、<application>fwlogwatch</application> 或 <application>lire</application> 日志分析工具将会很轻松地弄懂您的防火墙日志。</para>
        </sect2>
    </sect1>
	<sect1 id="openssh-server" status="complete">
		<title>OpenSSH 服务器</title>
      <sect2 id="openssh-introduction">
        <title>介绍</title> 
           <para><phrase>Ubuntu</phrase> 服务器版指南的这部分内容介绍一个强大的远程控制网络计算机和在它们之间传输数据的工具集 <emphasis>OpenSSH</emphasis>。您也可以学到一些 OpenSSH 服务器应用程序的配置以及如何在您 Ubuntu 系统修改它们。</para>
          <para>OpenSSH 是Secure Shell (SSH) 协议工具集中的一个自由可用的版本，用以远程控制一台计算机或在计算机之间传输文件。完成这些功能的传统工具，如 <application>telnet</application> 或 <application>rcp</application> 等，是不安全的，它们在使用时用明文来传输用户的密码。OpenSSH 提供一个服务器守护程序和客户端工具来保障安全、加密的远程控制和文件传输操作，以有效地取代传统的工具。</para>
          <para>OpenSSH 服务器组组件 <application>sshd</application> 持续监听来自任何客户端工具的连接请求。当一个连接请求发生时，<application>sshd</application> 根据客户端连接的类型来设置当前连接。例如，如果远程计算机是通过 <application>ssh</application> 客户端应用程序来连接的话，OpenSSH 服务器将在认证之后设置一个远程控制会话。如果一个远程用户通过 <application>scp</application> 来连接 OpenSSH 服务器，OpenSSH 服务器将在认证之后开始服务器和客户机之间的安全文件拷贝。OpenSSH 可以支持多种认证模式，包括纯密码、公钥以及<application>Kerberos</application> 票据。</para>
          </sect2>
        <sect2 id="openssh-installation">
        <title>安装</title>
        <para>OpenSSH 客户端及服务器应用程序的安装是简单的。要在您 Ubuntu 系统中安装 OpenSSH 客户端应用程序，可以在终端提示符后使用以下命令：</para>
           <para>
<screen>
<command>sudo apt-get install openssh-client</command>
</screen>
           </para>
        <para>要安装 OpenSSH 服务器应用程序及相关的支持文件，可以在终端提示符后使用以下命令：</para>
           <para>
<screen>
<command>sudo apt-get install openssh-server</command>
</screen>
           </para>
        </sect2>
        <sect2 id="openssh-configuration">
          <title>配置</title>
            <para>您可以通过编辑 <filename>/etc/ssh/sshd_config</filename> 文件来配置 OpenSSH 服务器应用程序的缺省过程。关于该文件中使用的配置语句信息，您可以在终端提示符后运行下列命令来查阅相应的手册页：</para>
               <para>
<screen>
<command>man sshd_config</command>
</screen>
               </para>
            <para>在 <application>sshd</application> 配置文件中有许多语句来控制那些诸如通信设置和认证模式。下面是一个通过编辑 <filename>/etc/ssh/ssh_config</filename> 文件来改变配置语句的例子。</para>
            <tip>
               <para>在编辑配置文件之前，您应该生成一个原始文件的拷贝并对其写保护，以便您可以参考原始文件并在必要时重用它。</para>
               <para>拷贝 <filename>/etc/ssh/sshd_config</filename> 文件并对其写保护可以通过在终端提示符后运行下列命令：</para>
	    </tip>
               <para>
<screen>
<command>sudo cp /etc/ssh/sshd_config /etc/ssh/sshd_config.original</command>
<command>sudo chmod a-w /etc/ssh/sshd_config.original</command>
</screen>
               </para> 
            <para>以下是您可能更改配置语句的范例:</para>
           <itemizedlist>
               <listitem>
               <para>要设置您 OpenSSH 在 TCP 2222 端口而不是缺省的 TCP 20 端口监听，可以如下使用改变 Port 语句：</para>
               <para>Port 2222</para>
               </listitem>
	<listitem>
            <para>要让 <application>sshd</application> 允许基于公钥登录证书，可以简单添加或修改该行语句：</para>
               <para>PubkeyAuthentication yes</para>
            <para>到 <filename>/etc/ssh/sshd_config</filename> 文件中。如果已经存在，确保该行语句没有被注释。</para>
            </listitem>
            <listitem>
             <para>要使您的 OpenSSH 服务器显示 <filename>/etc/issue.net</filename> 文件的内容以作为预登录 Banner，只需简单地将下行添加或修改：</para>
               <para>Banner /etc/issue.net</para>
               <para>到 <filename>/etc/ssh/sshd_config</filename> 文件中即可。</para>
             </listitem>
             </itemizedlist>
	    <para>在修改 <filename>/etc/ssh/sshd_config</filename> 文件之后，保存该文件并重启 <application>sshd</application> 服务器应用程序以使之生效。可以在终端提示符后使用下列命令：</para>
               <para>
<screen>
<command>sudo /etc/init.d/ssh restart</command>
</screen>
               </para>
		<warning>
                           <para>许多其他的 <application>sshd</application> 配置语句可以使服务器应用程序按您的要求运行。然而，给您一个忠告，如果您访问服务器的唯一方法就是使用 <application>ssh</application>，而且您在通过 <filename>/etc/ssh/sshd_config</filename> 文件来配置 <application>sshd</application> 时犯了一个错误，那么在重启该服务之后您可能会发现您被锁在服务器外面了，或者是 <application>sshd</application> 服务在处理一个不正确的配置语句时拒绝启用。因此当在远程服务器上编辑该文件时要格外的小心。</para>
                        </warning>
        </sect2>
   <sect2 id="openssh-references" status="complete">
      <title>引用</title>
      <para>
      <ulink url="http://www.openssh.org/">OpenSSH 网站</ulink>
      </para>
      <para>
      <ulink url="https://wiki.ubuntu.com/AdvancedOpenSSH">高级 OpenSSH 维基页</ulink>
      </para>
   </sect2>
     </sect1>
	<sect1 id="ftp-server" status="complete">
        <title>FTP 服务器</title> 
            <para>文件传输协议 (FTP) 是一个 TCP 协议，用于在计算机之间上传和下载文件。FTP 工作在客户端/服务器模式下。服务器组件被称为 <emphasis>FTP 守护程序</emphasis>。它持续不断地临听来自远程客户端的 FTP 请求。当一个请求到达时，它管理登录和建立连接。在整个会话期间它执行 FTP 客户端发送来的任何命令。</para>
            <para>可以通过两种方式来管理 FTP 服务器的访问：</para>
            <itemizedlist spacing="compact">
                <listitem>
                    <para>匿名</para>
                </listitem>
                <listitem>
                    <para>授权</para>
                </listitem>
            </itemizedlist>
            <para>在匿名模式中，远程客户端可以使用 "anonymous" 或 "ftp" 缺省用户帐号并通过发送一个邮件地址做为密码来访问 FTP 服务器。在授权模式下一个用户必须拥有帐号和密码。用户所访问 FTP 服务器中目录和文件的权限是根据登录时所用帐号来定义的。一般来说，FTP 守护程序将隐藏在 FTP 服务器的根目录中并将其改到 FTP 家目录。这样就可以向远程传话隐藏文件系统的其他部分。</para>
            <sect2 id="vsftpd-ftp-server-installation" status="complete">
                <title>vsftpd - FTP 服务器安装</title>
                    <para>vsftpd 是可在 Ubuntu 中使用的 FTP 守护程序之一。它在安装、设置和维护方面十分方便。要安装 <application>vsftpd</application> 您可以使用下列命令：<screen> <command>sudo apt-get install vsftpd</command> </screen></para>

                </sect2>
            <sect2 id="vsftpd-ftp-server-configuration" status="complete">
                <title>vsftpd - FTP 服务器配置</title>
                <para>你可以编辑 vsftpd 配置文件，<filename>/etc/vsftpd.conf</filename>，来配置缺省设置。缺省状态下只允许匿名 FTP。如果您希望禁用该选项，您可以将下面这行：<programlisting>
anonymous_enable=YES
</programlisting> 改为 <programlisting>
anonymous_enable=NO
</programlisting>。缺省状态下，本地系统用户是不允许登录 FTP 服务器的。要改变该设置，您可以将下面这行反注释：<programlisting>
#local_enable=YES
</programlisting>。缺省状态下，允许用户从 FTP 下载文件，但不允许他们上传文件到 FTP 服务器。为了能够上传文件到 FTP 服务器，需要改变该设置，您可以将下面这行反注释掉：<programlisting>
#anon_upload_enable=YES
</programlisting>。配置文件包括许多配置参数。关于配置文件中的每个参数的信息都可以得到，或者您可以参考手册页，<command>man 5 vsftpd.conf</command> 说明每个参数的细节。</para>
                <para>一旦您配置好了 <application>vsftpd</application> 您就可以运行该守护程序了。您可以执行下列命令来运行<application>vsftpd</application> 守护进程：<screen> <command>sudo /etc/init.d/vsftpd start</command> </screen></para>
				<note><para>请注意在配置文件中缺省的设置主要是出于安全考虑。上面每一个改变都会使系统的安全性更小，所以请只在您需要时才改变他们。</para></note>
                </sect2>
    </sect1>
	<sect1 id="network-file-system" status="complete">
		<title>网络文件系统 (NFS)</title>
          <para>NFS 允许系统将其目录和文件共享给网络上的其他系统。通过 NFS，用户和应用程序可以访问远程系统上的文件，就象它们是本地文件一样。</para>

          <para>NFS 最值得注意的优点有：</para>

          <itemizedlist>
          <listitem>
      <para>本地工作站可以使用更少的磁盘空间，因为常用数据可以被保存在一台机器上，并让网络上的其他机器可以访问它。</para>
          </listitem>
          <listitem>
      <para>不需要为用户在每台网络机器上放一个用户目录。用户目录可以在 NFS 服务器上设置并使其在整个网络上可用。</para>
          </listitem>
          <listitem>

      <para>存储设备如软盘、光驱及 USB 设备可以被网络上其它机器使用。这可能可以减少网络上移动设备的数量。</para>
          </listitem>
          </itemizedlist>

      <sect2 id="nfs-installation" status="complete">
        <title>安装</title>
      
          <para>在终端提示符后键入以下命令安装 NFS 服务器：</para>
          <para>
<screen>
<command>sudo apt-get install nfs-kernel-server</command>
</screen>
          </para>
      </sect2>
      <sect2 id="nfs-configuration" status="complete">
        <title>配置</title>
          <para>您可以配置要输出的目录，您可以在 <filename>/etc/exports</filename> 文件中添加该目录。例如：</para>
          <para>
<screen>
/ubuntu *(ro,sync,no_root_squash)
/home *(rw,sync,no_root_squash)
</screen>
          </para>

          <para>您可以用主机名来代替 *。尽量指定主机名以便使那些不想其访问的系统访问 NFS 挂载的资源。</para>

          <para>您可以在终端提示符后运行以下命令来启动 NFS 服务器：</para>
          <para>
<screen>
<command>sudo /etc/init.d/nfs-kernel-server start</command>
</screen>
          </para>
      </sect2>
      <sect2 id="nfs-client-configuration" status="complete">
        <title>NFS 客户端配置</title>
          <para>使用 <application>mount</application> 命令来挂载其他机器共享的 NFS 目录。可以在终端提示符后输入以下类似的命令：</para>
          <para>
<screen>
<command>sudo mount example.hostname.com:/ubuntu /local/ubuntu</command>
</screen>
</para>
      <warning>
      <para>挂载点 <filename>/local/ubuntu</filename> 目录必须已经存在。而且在 <filename>/local/ubuntu</filename> 目录中没有文件或子目录。</para>
      </warning>

      <para>另一个挂载其他机器的 NFS 共享的方式就是在 <filename>/etc/fstab</filename> 文件中添加一行。该行必须指明 NFS 服务器的主机名、服务器输出的目录名以及挂载 NFS 共享的本机目录。</para>

      <para>以下是在 <filename>/etc/fstab</filename> 中的常用语法：</para>
      
      <para>
<programlisting>
example.hostname.com:/ubuntu /local/ubuntu nfs rsize=8192,wsize=8192,timeo=14,intr
</programlisting>
      </para>
      </sect2>
      <sect2 id="nfs-references" status="complete">
        <title>引用</title>
				<para><ulink url="http://nfs.sourceforge.net/">Linux NFS 常见问答</ulink></para>
      </sect2>
    </sect1>
	<sect1 id="dhcp" status="complete">
		<title>动态主机配置协议 (DHCP)</title>
            <para>动态主机配置协议 (DHCP) 是一种网络服务，相对于手工为每台网络主机配置，它使网络主机可能自动被服务器指定设置。被配置成 DHCP 客户端的计算机并不能控制其从 DHCP 服务器得到的设置，且该配置对于计算机用户来说是透明的。</para>
            <para>由 DHCP 服务器提供给 DHCP 客户端最常用的设置包括：</para>
            <itemizedlist spacing="compact">
                <listitem>
                    <para>IP 地址和掩码</para>
                </listitem>
                <listitem>
                    <para>DNS</para>
                </listitem>
                <listitem>
                    <para>WINS</para>
                </listitem>
            </itemizedlist>
            <para>然而，一个 DHCP 服务器也支持配置如下属性，如：</para>
            <itemizedlist spacing="compact">
                <listitem>
                    <para>主机名</para>
                </listitem>
                <listitem>
                    <para>域名</para>
                </listitem>
                <listitem>
                    <para>默认网关</para>
                </listitem>
                <listitem>
                    <para>时间服务器</para>
                </listitem>
                <listitem>
                    <para>打印服务器</para>
                </listitem>
            </itemizedlist>
            <para>使用 DHCP 的好处在于当网络发生改变如 DNS 服务器地址改变时，只需要在 DHCP 服务器中改变即可，所有网络主机将在其 DHCP 客户端下一次轮询 DHCP 服务器时被重新配置。另一个好处就是，它在将新计算机整合到网络时也更容易，因为不需要再检查 IP 地址的有效性。同时也减少 IP 地址的冲突。</para>
            <para>一个 DHCP 服务器可以用两个模式来提供配置设置</para>
            <variablelist>
                <varlistentry>
                    <term>MAC 地址</term>
                    <listitem>
                        <para>该模式需要用 DHCP 去标明连接到网上的每块网卡唯一的硬件地址，然后在 DHCP 客户端每次使用该网络设备发送给 DHCP 服务器请求时提供给它一个固定的配置。</para>
                    </listitem>
                </varlistentry>
                <varlistentry>
                    <term>地址池</term>
                    <listitem>
                        <para>该模式需要定义一个 IP 地址池 (有时也叫范围或作用域) ，以便 DHCP 客户端可以被动态提供它们的配置from which DHCP clients are supplied their configuration properties dynamically and on a fist come first serve basis。当一个 DHCP 客户端有段时间不再在网络上时，该配置将过期并释放回地址池以便为其他 DHCP 客户端使用。</para>
                    </listitem>
                </varlistentry>
            </variablelist>
            <para>ubuntu 提供 DHCP 服务器及其客户端。服务器叫 <application>dhcpd</application> (动态主机配置协议守护程序)。Ubuntu 提供的客户端叫 <application>dhclient</application>，应该安装在所有自动配置的计算机上。这两个程序很容易安装和配置，并可在系统引导时自动启用。</para>
      <sect2 id="dhcp-installation" status="complete">
        <title>安装</title>
          <para>要安装 <application>dhcpd</application>，可以在终端提示符后输入以下命令:</para>
          <para>
<screen>
<command>sudo apt-get install dhcpd</command>
</screen>
          </para>
          <para>您将看到下面的输出，说明接下来做什么：</para>
          <screen>
Please note that if you are installing the DHCP server for the first
time you need to configure. Please stop (/etc/init.d/dhcp
stop) the DHCP server daemon, edit /etc/dhcpd.conf to suit your needs
and particular configuration, and restart the DHCP server daemon
(/etc/init.d/dhcp start).

You also need to edit /etc/default/dhcp to specify the interfaces dhcpd
should listen to. By default it listens to eth0.

NOTE: dhcpd's messages are being sent to syslog. Look there for
diagnostics messages.

Starting DHCP server: dhcpd failed to start - check syslog for diagnostics.  </screen>
      </sect2>
      <sect2 id="dhcp-configuration" status="complete">
        <title>配置</title>
            <para>安装结束后的错误消息可能会带来小小的困惑，不过下面几步将帮助您配置服务：</para>
            <para>通常，您想做的是随机指定一个 IP 地址。这可以通过以下设置来实现：</para>
            <screen>
# Sample /etc/dhcpd.conf
# (add your comments here) 
default-lease-time 600;
max-lease-time 7200;
option subnet-mask 255.255.255.0;
option broadcast-address 192.168.1.255;
option routers 192.168.1.254;
option domain-name-servers 192.168.1.1, 192.168.1.2;
option domain-name "mydomain.org";

subnet 192.168.1.0 netmask 255.255.255.0 {
range 192.168.1.10 192.168.1.100;
range 192.168.1.150 192.168.1.200;
} </screen>
            <para>这将导致 DHCP 服务器从 192.168.1.10-192.168.1.100 或 192.168.1.150-192.168.1.200 范围中分配客户端一个 IP 地址。如果客户端没有要求一个特定的时间帧的话它将租用 600秒的 IP 地址。否则最大 (允许) 租用时间为 7200 秒。服务器也 "建议" 客户端使用 255.255.255.0 做为它的子网掩码，192.168.1.255 作为它的广播地址，192.168.1.254 作为路由器/网关，同时将 192.168.1.1 和 192.168.1.2 作为它的 DNS 服务器。</para>
            <para>如果您需要为您的 Windows 客户机指定一个 WINS 服务器，您需要包含 netbios-name-servers 选项，如：</para>
            <screen>
option netbios-name-servers 192.168.1.1; </screen>
            <para>Dhcpd 配置设置可以从 DHCP 快速指南中得到，该指南可以在 <ulink url="http://www.tldp.org/HOWTO/DHCP/index.html">这里</ulink> 找到。</para>
      </sect2>
      <sect2 id="dhcp-references" status="complete">
        <title>引用</title>
          <para>
            <ulink url="http://www.dhcp-handbook.com/dhcp_faq.html">DHCP 常见问答</ulink>
          </para>
      </sect2>
    </sect1>
	<sect1 id="dns" status="complete">
		<title>域名解析服务 (DNS)</title>
            <para>域名解析服务 (DNS) 是一个 Internet 服务，相互映射 IP 地址和完全限定域名 (FQDN) 。通过这种方式，使用 DNS 将不再需要记住 IP 地址。运行 DNS 的计算机称为 <emphasis>名称服务器</emphasis>。Ubuntu 提供 <application>BIND</application> (伯克利 Internet 名称守护程序)，一个在 GNU/Linux 上最常用的维护名称服务器的程序。</para>
            <!-- things to do: IPv6-->
      <sect2 id="dns-installation" status="complete">
        <title>安装</title>
          <para>在终端提示符后输入以下命令来安装 <application>dns</application>：</para>
          <para>
<screen>
<command>sudo apt-get install bind</command>
</screen>
          </para>
      </sect2>
      <sect2 id="dns-configuration" status="complete">
        <title>配置</title>
          <para>DNS 配置文件被保存在 <filename>/etc/bind</filename> 目录中。主配置文件叫 <filename>/etc/bind/named.conf</filename>。缺省配置文件的内容如下所示：</para>

          <para>
<programlisting>
// This is the primary configuration file for the BIND DNS server named.
//
// Please read /usr/share/doc/bind/README.Debian for information on the 
// structure of BIND configuration files in Debian for BIND versions 8.2.1 
// and later, *BEFORE* you customize this configuration file.
//

include "/etc/bind/named.conf.options";

// reduce log verbosity on issues outside our control
logging {
	category lame-servers { null; };
	category cname { null; };
};

// prime the server with knowledge of the root servers
zone "." {
        type hint;
        file "/etc/bind/db.root";
};

// be authoritative for the localhost forward and reverse zones, and for
// broadcast zones as per RFC 1912

zone "localhost" {
        type master;
        file "/etc/bind/db.local";
};

zone "127.in-addr.arpa" {
        type master;
        file "/etc/bind/db.127";
};

zone "0.in-addr.arpa" {
        type master;
        file "/etc/bind/db.0";
};

zone "255.in-addr.arpa" {
        type master;
        file "/etc/bind/db.255";
};

// add local zone definitions here
include "/etc/bind/named.conf.local";
</programlisting>
          </para>

          <para><application>include</application> 行指定包含 DNS 选项的文件名。在选项文件中的<application>directory</application> 行告诉 DNS 在哪儿寻找文件。所有 BIND 用到的文件都与该目录相关。</para>

          <para>名为 <filename>/etc/bind/db.root</filename> 的文件描述世界上的根名称服务器。这些服务器按时更新并不时被维护。</para>

          <para><application>zone</application> 部分定义一个主服务器，并将其保存在 file 标签所指定的文件中。每个 zone 文件包括 3 个资源记录 (RRs)：一个 SOA RR、一个 NS RR 以及一个 PTR RR。SOA 是授权开始的缩写。"@" 符是一个特定的符号表示原点。NS 是名称服务器 RR。PTR 是域名指针。要开始 DNS 服务器，可以在终端提示符后运行以下命令：</para>
           <para>
<screen>
<command>sudo /etc/init.d/bind start</command>
</screen>
           </para>
          <para>详情您可以参考在参考部分所提及的文档。</para>
      </sect2>
      <sect2 id="dns-references" status="complete">
        <title>引用</title>
          <para>
            <ulink url="http://www.tldp.org/HOWTO/DNS-HOWTO.html">DNS 指南</ulink>
          </para>
      </sect2>
    </sect1>
	<sect1 id="cups" status="complete">
		<title>CUPS － 打印服务器</title>
          <para>Ubuntu 打印及打印服务主要是 <emphasis role="bold">通用 UNIX 打印服务</emphasis> (CUPS)。该打印系统是自由可用、可移植的打印层，正在成为绝大多数 GNU/Linux 发行版新的打印标准。</para>
          <para>CUPS 管理打印作业和队列，并使用标准的 Internet 打印协议 (IPP) 提供网络打印，该协议提供最大范围的打印机支持，从点阵打印机到激光打印机以及位于两者之间的许多打印机。CUPS 也支持 PostScript Printer Description (PPD) 和网络打印机的自动检测，以及提供基于 Web 的简单配置和管理工具。</para>
      <sect2 id="cups-installation" status="complete">
        <title>安装</title>
          <para>在您 Ubuntu 计算机上安装 CUPS，只需简单使用 <application>sudo</application> 和<application>apt-get</application> 命令并将要安装包作为第一个参数即可。一个完全的 CUPS 安装需要安装许多从属包，但它们也可以在同一个命令行指定。在终端提示符后输入以下命令以安装 CUPS：</para>
          <para>
<screen>
<command>sudo apt-get install cupsys cupsys-client</command>
</screen>
          </para>
          <para>认证您的用户密码之后，这些包将被下载并正确安装。在安装结束之后，CUPS 服务器将自动开始。为了发现并修复问题，您可以通过错误日志文件 <filename>/var/log/cups/error_log</filename> 来查看 CUPS 服务器的错误。如果错误日志并没有显示足够的用于找到和解决您所遇问题的信息，通过将配置文件 (下面要讨论) 中将<emphasis role="bold">LogLevel</emphasis> 语句从缺省的 "info" 改为 "debug" 甚至是记录每件事的 "debug2"，以获得 CUPS 日志的详细信息。</para>
      </sect2>
      <sect2 id="cups-configuration" status="complete">
        <title>配置</title>
          <para>可以通过 <filename>/etc/cups/cupsd.conf</filename> 文件中的指令来配置通用 UNIX 打印系统服务器的行为的。CUPS 配置文件与 Apache HTTP 服务器的主配置文件语法相同，因此熟悉编辑 Apache 配置文件的用户在编辑 CUPS 配置文件时会感到相当容易。在这里将显示一些您可能想要改变初始值的设置范例。</para>
          <tip>
               <para>在编辑配置文件之前，您应该将原始文件做个副本并将其写保护，以便您可以将原始文件作为参考并在必要时重用它。</para>
               <para>拷贝 <filename>/etc/cups/cupsd.conf</filename> 文件并对其写保护，可以在终端提示符后执行以下命令：</para>
               </tip>
               <para>
<screen>
<command>sudo cp /etc/cups/cupsd.conf /etc/cups/cupsd.conf.original</command>
<command>sudo chmod a-w /etc/cups/cupsd.conf.original</command>
</screen>
               </para>
          <itemizedlist>
                <listitem>
                <para><emphasis role="bold">ServerAdmin</emphasis>：要配置指定 CUPS 服务器管理员的邮件地位，只需用你喜欢的文本编辑器简单编辑 <filename>/etc/cups/cupsd.conf</filename> 配置文件，并修改相应的 <emphasis role="italics">ServerAdmin</emphasis> 行即可。举个例子，如果您是 CUPS 服务器的管理员，并且您的邮件地址是'bjoy@somebigco.com'，那么您可以象下面这样修改 ServerAdmin 行：</para>
                <para>
<screen>
ServerAdmin bjoy@somebigco.com
</screen>
                </para>
                </listitem>
          </itemizedlist>
                <para>关于 CUPS 服务器配置文件中配置语句的更多范例，通过在终端提示符后输入以下命令可以查阅相关的系统手册页：</para>
               <para>
<screen>
<command>man cupsd.conf</command>
</screen>
               </para>
                               <note>
                <para>无论您在什么时间修改了 <filename>/etc/cups/cupsd.conf</filename> 配置文件，您都需要重启 CUPS 服务，在终端提示符后键入以下命令：</para>
                </note>
                <para>
<screen>
<command>sudo /etc/init.d/cupsys restart</command>
</screen>
                </para>
	<para>CUPS 服务器的其它一些配置在文件 <filename>/etc/cups/cups.d/ports.conf</filename> 中：</para>
          <itemizedlist>
                <listitem>
                <para><emphasis role="bold">Listen</emphasis>：在 Ubuntu 的缺省状态下，CUPS 服务器安装后只监听 IP 地址为 <emphasis>127.0.0.1</emphasis> 的环回接口。为了让 CUPS 服务器可以在网络适配器真正的 IP 地址上监听，您必须要么指定一个指定主机名、要么指定一个IP 地址，随您选择。可以通过 Listen 语句来添加一个 IP 地址/端口对。例如：如果您的 CUPS 服务器在一个局域网中，其 IP 地址为 <emphasis role="italics">192.168.10.250</emphasis>，您想要该子网中的其它系统能够访问它，您可以编辑 <filename>/etc/cups/cups.d/ports.conf</filename> 并如下所示添加一个 Listen 语句：</para>
                <para>
<screen>
Listen 127.0.0.1:631 # existing loopback Listen
Listen /var/run/cups/cups.sock # existing socket Listen
Listen 192.168.10.250:631 # Listen on the LAN interface, Port 631 (IPP)
</screen>
                </para>
                <para>在上面的例子里，如果您不想 <application>cupsd </application> 监听环回地址 (127.0.0.1) ，您可能注释或删除了相关语句。但最好保留它以监听局域网 (LAN) 的以太网接口。为了能监听一个特定主机名所绑定的所有的网络接口，您可以为 <emphasis>socrates</emphasis> 主机名创建一个 Listen 条目，如下所示：</para>
                <para>
<screen>
Listen socrates:631 # Listen on all interfaces for the hostname 'socrates'
</screen>
                </para> 
				<para>或者忽略 Listen 语句并使用 <emphasis>Port</emphasis> 来代替，如：</para>
<para>
<screen>
Port 631 # Listen on port 631 on all interfaces
</screen>
</para>
                </listitem>
	</itemizedlist>

      </sect2>
      <sect2 id="cups-references" status="complete">
        <title>引用</title>
        <para>
        <ulink url="http://www.cups.org/">CUPS 网络</ulink>
        </para>
        </sect2>
    </sect1>
	<sect1 id="httpd" status="complete">
		<title>HTTPD - Apache2 Web 服务器</title>
      <para>Apache 是在 GNU/Linux 系统中最常用的 Web 服务器。Web 服务器为客户机所提交的网页请求服务。客户机一般通过网页浏览器如 <application>Firefox</application>、<application>Opera</application> 或 <application>Mozilla</application> 来请求和查看网页。</para>
      <para>用户输入统一资源定位器 (URL) 来指向一个 Web 服务器，并通过完全限定域名 (FQDN) 和路径来请求资源。例如，要查看 <ulink url="http://www.ubuntu.com">Ubuntu 网站</ulink> 的主页，用户只需要输入 FQDN 即可。如果要请求关于 <ulink url="http://www.ubuntu.com/support/supportoptions/paidsupport">有偿技术支持</ulink> 的特定信息，用户将在 FQDN 后输入路径。</para>
      <para>用于传输网页的最常用协议就是超文本传输协议 (HTTP)。也支持诸如基于安全套接层的超文本传输协议 (HTTPS) 以及用于上传和下载文件的文件传输协议 (FTP) 等协议。</para>
      <para>Apache Web 服务器常与 <application>MySQL</application> 数据库引擎、超文本处理器 (<application>PHP</application>) 脚本语言及其他流行的脚本语言如<application>Python</application> 和 <application>Perl</application> 组合在一起。这一组合被称为 LAMP (Linux, Apache, MySQL and Perl/Python/PHP) ，并形成一个强大健壮的开发基于 Web 应用程序的开发平台。</para>
<sect2 id="http-installation" status="complete">
  <title>安装</title>
                  <para>Apache2 web 服务器在 Ubuntu Linux 中是可用的。要安装 Apache2：</para>
          <procedure><step>
                	  <para>在终端提示符后输入下列命令：<screen>
<command>sudo apt-get install apache2</command>
</screen></para>
			</step>
	    </procedure>
      </sect2>
      <sect2 id="http-configuration" status="complete">
        <title>配置</title>
          <para>Apache 可以在纯文本配置文件中通过 <emphasis>语句</emphasis> 来配置的。主配置文件叫 <filename>apache2.conf</filename>。此外，其外配置文件可以用 <emphasis>Include</emphasis> 语句来添加，也可以使用通配符来包含多个配置文件。任何语句都可能被放在这些配置文件的任何一个文件中。修改过的主配置文件只在 Apach2 启动或重启时才能被其识别。</para>

          <para>服务器也查看包含 mime 文档类型的文件；该文件名通过 <emphasis>TypesConfig</emphasis> 设置，缺省情况下是<filename>mime.types</filename>。</para>

          <para>缺省的 Apache2 配置文件是 <filename>/etc/apache2/apache2.conf</filename>。您可以编辑该文件以配置 Apache2 服务器。您可以配置端口号、文档根目录、模块、日志文件及虚拟主机等。</para>
        <sect3 id="http-basic-settings" status="complete">
          <title>基本设置</title>
            <para>本部分内容说明 Apache2 服务器基本的配置参数。详情请参阅 <ulink url="http://httpd.apache.org/docs/2.0/">Apache2 文档</ulink></para>

             <itemizedlist>

             <listitem><para>Apache2 提供了一个友好虚拟主机的缺省配置。它配置成单个缺省虚拟主机 (使用 <emphasis>VirtualHost</emphasis> 语句) 。如果您有单个站点，可以修改或直接使用它。如果您有多个站点的话，可以将其作为其它虚拟主机的模板。如果对其不加理会，该缺省虚拟主机将会作为您的缺省网站提供服务，或者如果网站用户所输入的 URL 并没有匹配您任何所定义站点的 <emphasis>ServerName</emphasis> 语句时，将看到该虚拟主机内容。要修改缺省虚拟主机，可以编辑文件 <filename>/etc/apache2/sites-available/default</filename>。如果您希望配置一个新的虚拟主机或站点，在同一目录中将拷贝该文件并将新文件重命名为您所想要的文件名，如<command>sudo cp /etc/apache2/sites-available/default /etc/apache2/sites-available/mynewsite</command>。编辑新文件并用下面的所描述的语句来配置新的站点：</para></listitem>

             <listitem><para><emphasis>ServerAdmin</emphasis> 语句指定服务器管理员的邮件地址，缺省值是 webmaster@localhost。应该改成您的邮件地址 (如果您是服务器管理员的话)。如果您的网站有问题，Apache2 将显示包含该邮件地址的错误信息以便报告该问题。在 /etc/apache2/sites-available 目录中您网站的配置文件里可以找到该语句。</para></listitem>

             <listitem><para><emphasis>Listen</emphasis> 语句指定端口以及可选的 IP 地址，Apache2 将在其上监听。如果 IP 地址没有被指定，Apache2 将监听所有指向其所运行机器上的 IP 地址。Listen 语句的缺省值是 80。把其改成 127.0.0.1:80 将使 Apache2 只在您的环回接口上临听以致于它相对于 Internet 不可用。也可改变其监听端口如81，或保持原样以便正常操作。该语句可以在它自己的文件 <filename>/etc/apache2/ports.conf</filename> 中发现并修改。</para></listitem>

			 <listitem><para>The <emphasis>ServerName</emphasis> 语句是可选的，它指明您站点要应答什么 FQDN。缺省虚拟主机没有指定 ServName，因为它要应答没有匹配其它虚拟主机 ServerName 语句的所有请求。如果您只获得 ubunturocks.com 域名并希望在您的 Ubuntu 服务器上只作它的主机，那么在您虚拟主机配置文件中的 ServerName 语句值应该是 ubunturocks.com。在您先前创建的新虚拟主机文件 (<filename>/etc/apache2/sites-available/mynewsite</filename>) 中添加该语句。<tip><para>您也可能要您的网站响应 www.ubunturocks.com 的请求，因为许多用户会假定 www 前缀是适当的。可以使用 <emphasis>ServerAlias</emphasis> 语句来解决这个问题。您也可以在 ServerAlias 中使用通配符。例如，<command>ServerAlias *.ubunturocks.com</command> 将使您的网站响应任何域名以 .ubunturocks.com 结尾的请求。</para></tip></para></listitem>

			 <listitem><para><emphasis>DocumentRoot</emphasis> 语句指定 Apache 将到哪儿去寻找站点文件，缺省值为 /var/www。没有站点配置在那里，但如果您反注释在 <filename>/etc/apache2/apache2.conf</filename> 中的 <emphasis>RedirectMatch</emphasis> 语句，请求将被重定向到 /var/www/apache2-default，那里是缺省的 Apache2 站点。在您站点的虚拟主机文件中改变该值，记住在必要时可以创建相应的目录！</para></listitem>
            </itemizedlist>

			<tip><para>/etc/apache2/sites-available 目录并 <emphasis role="bold">不会</emphasis> 被 Apache2 解析。在 /etc/apache2/sites-enabled 的软链接指向 "可用的" 站点。使用 a2ensite (Apache2 启用站点) 工具可以创建这些软链接，如：<command>sudo a2ensite mynewsite</command> 这里您站点的配置文件是 <filename> /etc/apache2/sites-available/mynewsite</filename>。同样，a2dissite 工具将用来禁用站点。</para></tip>

        </sect3>
        <sect3 id="default-settings" status="complete">
          <title>缺省设置</title>
            <para>这部分内容说明 Apache2 服务器缺省设置的配置。举个例子，如果您添加一个虚拟主机，您为该虚拟主机配置的设置将优先于缺省虚拟主机。如果在该虚拟主机的设置中有个语句没有定义，那么将使用缺省值。</para>

            <itemizedlist>
            <listitem>
            <para>当用户在目录名后使用斜杠 (/) 来请求一个目录索引时，The <emphasis>DirectoryIndex</emphasis> 将通过服务器提供缺省页服务。</para>

             <para>例如，当一个用户请求 http://www.example.com/this_directory/ 页时，他或她要么得到 DirectoryIndex 页，如果它存在的话；要么得到一个服务器生成的目录列表，如果它不存在且设置了 Indexes 选项的话；要么就得到一个无权访问页，如果它不存在且没有设置 Indexes 选项的话。服务器尝试找到在 DirectoryIndex 语句中所列文件之一，并返回它所找到的第一个。如果它没有找到任何一个文件且该目录设置了 Indexes 选项，服务器将生成并返回一个 HTML 格式的列表，包括该目录中的子目录和文件。缺省值可以在 <filename>/etc/apache2/apache2.conf</filename> 文件中找到，是 " index.html index.cgi index.pl index.php index.xhtml"。因此，如果 Apache2 在所请求的目录中找到任何一个匹配这些名字的文件，第一个将被显示。</para>
            </listitem>

            <listitem>
            <para><emphasis>ErrorDocument</emphasis> 语句允许您为 Apache 指定一个用于特定错误事件的文件。例如，如果用户请求的资源不存在，那么将引发 404 错误，而在 Apache2 的缺省配置中，文件 <filename>/usr/share/apache2/error/HTTP_NOT_FOUND.html.var </filename> 将被显示。该文件并不在服务器的 DocumentRoot 中，但在 <filename>/etc/apache2/apache2.conf</filename> 中有个别名语句将到 /error 目录的请求重定向到 /usr/share/apache2/error/ 中。要查看缺省的 ErrorDocument 语句列表，可以使用命令：<command>grep ErrorDocument /etc/apache2/apache2.conf</command></para>
            </listitem>


            <listitem>
            <para>在缺省状态下，服务器将传输日志记录在文件 /var/log/apache2/access.log 中。您可以在您每个虚拟主机站点的配置文件上用 <emphasis>CustomLog</emphasis> 语句来改变它，或者忽略它以接受在 <filename> /etc/apache2/apache2.conf</filename> 中指定的缺省设置。您也可以通过 <emphasis>ErrorLog</emphasis> 语句来指定记录错误日志的文件，该文件缺省是 <filename>/var/log/apache2/error.log</filename>。这些都从传输日志中分离出来以便更好地在您的 Apache2 服务器中发现和解决问题。您也可以指定 <emphasis>LogLevel</emphasis> (缺省值是 "warn") 和 <emphasis>LogFormat</emphasis> (缺省值参见<filename> /etc/apache2/apache2.conf</filename>)</para>
            </listitem>

            <listitem>
            <para>一些选项是基于每目录而非每服务器的。Option 是这些语句中的一个。Directory 段是被放在类 XML 标记中，如：<screen><command>&lt;Directory /var/www/mynewsite&gt;
				...
			&lt;/Directory&gt;</command></screen> 在 Directory 段中的 Options 语句接受一个或更多下面的用空格分隔的值 (包括其它)：</para>
            <itemizedlist spacing="compact">
                <listitem>
                    <para><emphasis role="bold">ExecCGI</emphasis> - 允许执行 CGI 脚本。如果该选项没有设置，则 CGI 脚本将不能执行。<tip><para>大多数文件不会作为 CGI 脚本运行的。这是非常危险的。CGI 脚本应该位于您 DocumentRoot 目录以外与之分开的目录中，并且只能该目录才有 ExecCGI 选项设置。缺省状态下，CGI 脚本默认位于 /usr/lib/cgi-bin。</para></tip></para>
                </listitem>
                <listitem>
                    <para><emphasis role="bold">Includes</emphasis> - 允许服务器端包含。服务器端包含允许一个 HTML 文件<emphasis>包含</emphasis>其他文件。这不是一个常用选项。更多信息参见 <ulink url="http://httpd.apache.org/docs/2.0/howto/ssi.html">the Apache2 SSI 指南</ulink>。</para>
                </listitem>
                <listitem>
                    <para><emphasis role="bold">IncludesNOEXEC</emphasis> - 允许服务器端包含，但 CGI 脚本中的 #exec 和 #include 指令无效。</para>
                </listitem>
                <listitem>
                    <para><emphasis role="bold">Indexes</emphasis> - 如果 DirectoryIndex (如 index.html) 在请求的目录没存在的话，按一定方式显示目录内容列表。</para>
                </listitem>
                <listitem>
                    <para><emphasis role="bold">Multiview</emphasis> - 支持内容协商的多重视图；该选项在缺省状态下出于安全的考虑是被禁用的。参见 <ulink url="http://httpd.apache.org/docs/2.0/mod/mod_negotiation.html#multiviews">Apache2 关于该选项的文档</ulink>。</para>
                </listitem>
                <listitem>
                    <para><emphasis role="bold">SymLinksIfOwnerMatch</emphasis> - 仅在软连接与其目的文件或目录拥有相同所有者时才使用。</para>
                </listitem>
            </itemizedlist>

            </listitem>
            </itemizedlist>
        </sect3>
        <sect3 id="virtual-hosts-settings" status="complete">

          <title>虚拟主机设置</title>
            <para>虚拟主机允许您在同一台机器上相对不同的 IP 地址、主机名或不同端口号运行不同的服务器。例如，您可以运行使用虚拟主机在同一个 Web 服务器上运行网站 http://www.example.com 和 http://www.anotherexample.com。这一选项适用于缺省虚拟主机和基于 IP 的虚拟主机的 &lt;VirtualHost&gt; 语句，也适用于基于名称的虚拟主机的 &lt;NameVirtualHost&gt; 语句。</para>

			<para>虚拟主机的语句设置仅应用于特定的虚拟主机。如果一个语句在服务器范围中设置而没有在虚拟主机设置中定义，那么将使用缺省设置。例如，您可以定义网络管理员的邮件地址而无需为每个虚拟主机都分别定义邮件地址。</para>
 
 			<para>为虚拟主机设置 DocumentRoot 语句到包含根文档 (如 index.html) 目录。缺省的 DocumentRoot 是 <filename>/var/www</filename>。</para>

			<para>在 VirtualHost 段中的 ServerAadmin 语句是指用于错误页的页脚中的邮件地址，如果您想在错误页的页脚显示邮件地址的话。</para>

        </sect3>
        <sect3 id="server-settings" status="complete">
          <title>服务器设置</title>
            <para>这部分内容说明如何配置基本的服务器设置。</para>
                    <para><emphasis role="bold">LockFile</emphasis> - 当服务器编译时使用了 USE_FCNTL_SERIALIZED_ACCEPT 或 USE_FLOCK_SERIALIZED_ACCEPT 参数时，使用 LockFile 语句来设置 lockfile 的路径。它必须保存在本地磁盘上，它应该设置成缺省值，除非日志目录被定位在 NFS 共享上。如果是这种情况，缺省值应该被改为本地磁盘的位置并且其目录只对 root 用户可读。</para>

					<para><emphasis role="bold">PidFile</emphasis> - PidFile 语句设置服务器记录其进程 ID (pid) 的文件。该文件只对 root 用户可读。在大多数情况下，应该保留其缺省值。</para>

<para><emphasis role="bold">User</emphasis> - 用户语句设置被服务器用于回应请求的用户 ID。该设置决定服务器的权限。一些该用户无法访问的文件也无法被您网站的访问者访问。用户缺省值是 www-data。</para>
            <warning>
            <para>除非您的确知道您在做什么，否则请不要将 User 设为 root 用户。用 root 作为 User 的值将会在您的 Web 服务器中产生极大的安全漏洞。</para>
            </warning>
 <para>Group 语句同 User 语句相似。Group 设置被服务器用于回应请求的用户组。缺省的组也是 www-data。</para>

        </sect3>
        <sect3 id="apache-modules" status="complete">
          <title>Apache 模块</title>
              <para>Apache 是一个模块化的服务器。这就意味着在核心服务器中只包括最基本的功能。扩展功能可以通过被引导进 Apache 的模块来实现。缺省情况下，基本模块是在编译时被包含进服务器的。如果服务器编译成可以动态引导模块，那么模块可以单独编译，并在任何时候使用 LoadModule 语句来添加。否则，Apache 必须在添加或删除模块时重新编译。Ubuntu 编译 Apache2 时是允许动态引导模块的。配置语句通过将已有模块放置 &lt;IfModule&gt; 块中以便有条件地包含在配置语句中。您可以在您的 Web 服务器上安装和使用额外的 Apache2 模块。您可以用 <application>apt-get</application>  命令来安装 Apache2 模块。如安装 MYSQL 认证的 Apach2 模块，您可以在终端提示符中运行以下命令：</para>
                
                <para>
<screen>
<command>sudo apt-get install libapache2-mod-auth-mysql</command>
</screen>
                </para>
                <para>一旦您安装了模块，模块将出现在 <filename>/etc/apache2/mods-available</filename> 目录中。您可以使用 <application>a2enmod</application> 命令来启用模块。您也可以使用 <application>a2dismod</application> 命令来禁用模块。一旦您启用该模块，该模块将在 <filename>/etc/apache2/mods-enabled</filename> 目录中出现。</para>
        </sect3>
      </sect2>
      <sect2 id="https-configuration" status="complete">
        <title>HTTPS 配置</title>
          <para>The <application>mod_ssl</application> 模块为 Apache2 服务器添加了一个重要的功能 - 通讯加密的能力。因此，当您的浏览器要用 SSL 加密通讯时，需要在浏览器导航栏中在输入的统一资源定位器 (URL) 的开始处使用 https:// 前缀。</para>

          <para><application>mod_ssl</application> 模块已经包含在 <application>apache2-common</application> 软件包中。如果您安装该软件包，您可以在终端提示符之后执行下列命令启用 <application>mod_ssl</application> 模块：</para>

          <para>
<screen>
<command>sudo a2enmod ssl</command>
</screen>
          </para>
        <sect3 id="certificates-and-security" status="complete">
          <title>证书和安全</title>
            <para>要设置您的安全服务器，使用公共钥创建一对公钥私钥对。大多数情况下，您发送您的证书请求 (包括您的公钥)，您公司证明材料以及费用到一个证书颁发机构 (CA)。CA 检证证书请求及您的身份，然后将证书发回您的安全服务器。</para>
             <para>还有种办法就是您可以创建您自己签署的证书。然而请注意自己签置的证书不应该用于生产环境。自已签署的证书不会被用户浏览器自动接受。浏览器将提示用户接受证书并创建一个安全的连接。</para>

             <para>一旦您有一个自己签署的证书或一个您选择的 CA 签署的证书，您需要将它安装在您的安全服务器上。</para>
        </sect3>
        <sect3 id="types-of-certificates" status="complete">
          <title>证书类型</title>
            <para>您需要一个钥匙和一个证书来操作您的安全服务器，这意味着您可以生成自己签署的证书或购买 CA 签署的证书。由 CA 签署的证书为您的服务器提供两个重要的功能：</para>

            <itemizedlist>
            <listitem>
            <para>浏览器 (通常) 会自动地识别证书并且在不提示用户的情况下允许创建一个安全连接。</para>
            </listitem>
            <listitem>
            <para>当一个 CA 生成一个签署过的证书，它为提供网页给浏览器的组织提供身份担保。</para>
            </listitem>
            </itemizedlist>

            <para>多数支持 SSL 的 Web 浏览器都有一个 CA 列表，它们的证书会被自动接受。如果一个浏览器遇到一个其授权 CA 并不在列表中的证书，浏览器将询问用户是否接受或拒绝连接。</para>
            <para>您可以为您的安全服务器生成一个自己签署的证书，但要知道自己签署的证书并不提供与 CA 签署的证书相同的功能。自己签署的证书不会被多数 Web 浏览器自动识别，而且自己签署的证书也不为任何提供网站的组织提供担保。CA 签署的证书为安全服务器提供所有这些重要的功能。从 CA 得到证书的过程相当容易。下面简要介绍一下：</para>

            <orderedlist>
            <listitem>
               <para>创建一个私有和公共密钥对</para>
            </listitem>
            <listitem>
                 <para>基于公钥创建一个证书请求。证书请求包含您服务器及公司信息。</para>
            </listitem>
            <listitem>
                 <para>发送证书请求，并随之提供您的身份文档到一个 CA。我们不能告诉您选择哪个证书颁发机构。您可以基于您以往的经验或您朋友或同事的经验或纯粹基于经济因素来决定。</para>

                    <para>一旦您选定一家 CA，您需要根据他们所提供的规程来从他们那里获得证书。</para>
            </listitem>
            <listitem>
               <para>当 CA 确定您确实如您所声称的那样时，他们将发给您一个数字证书。</para>
            </listitem>
            <listitem>
               <para>在您的安全服务器上安装该证书，并开始进行安全事务处理</para>
            </listitem>
            </orderedlist>

            <para>无论您是从一家 CA 那儿获得证书或是生成您自己签署的证书，第一步就是生成钥匙。</para>
        </sect3>
        <sect3 id="generating-a-csr" status="complete">
          <title>生成一个证书签署请求 (CSR)</title>
            <para>要生成证书签署请求 (CSR)，您应该创建您自己的钥匙。您可以在终端提示符后运行以下命令以创建钥匙：</para>

            <para>
<screen>
<command>openssl genrsa -des3 -out server.key 1024</command>
</screen>
            </para>
<programlisting>
Generating RSA private key, 1024 bit long modulus
.....................++++++
.................++++++
unable to write 'random state'
e is 65537 (0x10001)
Enter pass phrase for server.key:
</programlisting>

        <para>您现在可以输入您的 passphrase。为了最大程度的安全，它至少应该包含八个字符。当指定 -des3 时最小长度为四个字符。它应该包含数字和/或标点符号，并且不应该是字典中的单词。也请记住您的 passphrase 是大小写敏感的。</para>

        <para>再次输入 passphrase 核对。一旦您再次输入正确的话，服务器密钥就生成了并保存在 <filename>server.key</filename> 文件中。</para>

        <warning>
        <para>您也可以不用 passphrase 来运行您的安全 Web 服务器。这样比较方便，因为在您启动您的安全 Web 服务器时您不需要每次都输入 passphrase。但它也是相当不安全的，钥匙的风险也同样意味着服务器的风险。</para>
        </warning>

        <para>在任何情况下，您都可以选择不用 passphrase 来运行您的安全 Web 服务器，这可以通过在生成时不带 -des3 参数来实现或者通过在终端提示符后执行以下命令：</para>

        <para>
<screen>
<command>openssl rsa -in server.key -out server.key.insecure</command>
</screen>
        </para>
        <para>一旦您运行上述命令，不安全的钥匙将被保存在 <filename>server.key.insecure</filename> 文件中。您可以使用该文件来生成没有 passphrase 的 CSR。</para>

        <para>要创建 CSR，可以在终端提示符后运行以下命令：</para>

        <para>
<screen>
<command>openssl req -new -key server.key -out server.csr</command>
</screen>
        </para>

        <para>它将提示您输入 passphrase。如果您输入正确的 passphrase，它将提示您输入公司名、站点名、邮件ID等。一旦您输入了所有内容，您的 CSR 将被创建并被保存在 <filename>server.csr</filename> 文件中。您可以提交该 CSR 文件给一家 CA 去处理。CA 将使用该 CSR 并颁发证书。但是，您也可以使用该 CSR 生成自己签署的证书。</para>

        </sect3>
        <sect3 id="creating-a-self-signed-certificate" status="complete">
          <title>创建一个自己签署的证书</title>
            <para>要创建自己签署的证书，在终端提示符下运行以下命令：</para>

            <para>
<screen>
<command>openssl x509 -req -days 365 -in server.csr -signkey server.key -out server.crt</command>
</screen>
            </para>

            <para>上述命令将提示您输入 passphrase。一旦您输入正确的 passphrase，您的证书将被创建并将保存在 <filename>server.crt</filename> 文件中。</para>
        <warning>
        <para>如果您的安全服务器被用在生产环境中，你也许需要 CA 签署的证书。并不推荐使用自己签署的证书。</para>
        </warning>
        </sect3>
        <sect3 id="installing-the-certificate" status="complete">
          <title>安装证书</title>

            <para>您可以安装钥匙文件 <filename>server.key</filename> 和证书文件 <filename>server.crt</filename> 或由您的 CA 颁发的证书文件，在终端提示符后运行以下命令：</para>
            <para>
<screen>
<command>sudo cp server.crt /etc/ssl/certs</command>
<command>sudo cp server.key /etc/ssl/private</command>
</screen>
            </para>
            <para>您要添加以下四行到 <filename>/etc/apache2/sites-available/default</filename> 文件或您安全虚拟主机的配置文件。您要将它们放在 <emphasis>VirtualHost</emphasis> 部分。他们应该放在 <emphasis>DocumentRoot</emphasis> 行下面：</para>
<programlisting>
SSLEngine on

SSLOptions +FakeBasicAuth +ExportCertData +CompatEnvVars +StrictRequire

SSLCertificateFile /etc/ssl/certs/server.crt
SSLCertificateKeyFile /etc/ssl/private/server.key
</programlisting>
          
            <para>HTTPS 在 443 端口监听。您可以将下面一行添加到 <filename>/etc/apache2/ports.conf</filename> 文件中：</para>
<programlisting>
Listen 443
</programlisting>

        </sect3>
        <sect3 id="accessing-the-server" status="complete">
          <title>访问服务器</title>
            <para>一旦您安装了您的证书，您应该重启您的 Web 服务器。您可以在终端提示符后运行以下命令以重启您的 web 服务器：</para>
            <para>
<screen>            
<command>sudo /etc/init.d/apache2 restart</command>
</screen>
            </para>
        <note><para>您应该记住并在每次您启动您的安全 web 服务器时输入 passphrase。</para></note>

            <para>您将被提示输入 passphrase。一旦您输入正常的 passphrase，将启动安全 web 服务器。您可以通过在您的浏览器地址栏上输入 https://your_hostname/url/ 来访问安全服务器的页面。</para>

        </sect3>
      </sect2>
      <sect2 id="http-references" status="complete">
        <title>引用</title>
          <para>
          <ulink url="http://httpd.apache.org/docs/2.0/">Apache2 文档</ulink>
          </para>
          <para>
          <ulink url="http://www.modssl.org/docs/">Mod SSL 文档</ulink>
          </para>
      </sect2>
    </sect1>
	
	<sect1 id="squid" status="complete">
		<title>Squid - 代理服务器</title>
          <para>Squid 是一个全功能的 web 代理与缓存服务器应用程序，它为超文本传输协议 (HTTP)、文件传输协议 (FTP) 以及其他流行网络协议提供代理和缓存服务。Squid 可以实现安全套接层 (SSL) 请求的缓存和代理、域名服务器 (DNS) 的缓存以及进行传输缓存。Squid 也支持大量不同的缓存协议，如 Internet 缓存协议 (ICP)、超文本缓存协议 (HTCP)、缓存阵列路由协议 (CARP) 以及 Web 缓存协同协议 (WCCP)。</para>
          <para>Squid 代理缓存服务器对于不同的代理和缓存服务器需求来说是一个极好的解决方案，它适用于从分支机构到企业级的网络，访问控制机制的粒度以及通过简单网络管理协议 (SNMP) 对临界参数的监视。当选择计算机系统用于 Squid 代理或缓存服务器时，请确保您的系统配置大量的物理内存以便 Squid 可以使用内存进行缓存以提高性能。</para>
      <sect2 id="squid-installation" status="complete">
        <title>安装</title>
          <para>在终端提示符后输入下列命令安装 Squid 服务器：</para>
          <para>
<screen>
<command>sudo apt-get install squid squid-common</command>
</screen>
          </para>
      </sect2>
      <sect2 id="squid-configuration" status="complete">
        <title>配置</title>
          <para>Squid 可以通过编辑在 <filename>/etc/squid/squid.conf</filename> 配置文件中的语句来进行配置。下面的范例说明一些语句的修改可能对 Squid 服务器的影响。更多 Squid 的配置可以参阅参考章节。</para>
             <tip>
               <para>在编辑配置文件之前，您应该生成一份原始文件副本并对其进行写保护，以便您可以将原始文件作为参考并在必要时重用它。</para>
               <para>要拷贝 <filename>/etc/squid/squid.conf</filename> 文件并对其进行写保护，可以在终端提示符后使用以下命令：</para>
	     </tip>
               <para>
<screen>
<command>sudo cp /etc/squid/squid.conf /etc/squid/squid.conf.original</command>
<command>sudo chmod a-w /etc/squid/squid.conf.original</command>
</screen>
               </para> 
	        <para>
           <itemizedlist>
               <listitem>
                  <para>要将您的 Squid 服务器监听 TCP 端口 8888 以代替缺省的 TCP 端口 3128，可以如下所示修改 http_port 语句：</para>
                  <para>http_port 8888</para>
               </listitem>
	            <listitem>
                  <para>改变 visible_hostname 语句是为了给 Squid 服务器一个特定的主机名。该主机名并必是计算机的主机名。在本范例中它被设为 <emphasis>weezie</emphasis>。</para>
                  <para>visible_hostname weezie</para>
               </listitem>
               <listitem>
                  <para>此外，使用 Squid 访问控制，您可以通过 Squid 代理将 Internet 服务配置成仅限于有确定网际协议 (IP) 地址的用户使用。例如，我们将举例说明只让 192.168.42.0/24 子网的用户访问：</para>
                  <para>将下列语句添加到您 <filename>/etc/squid/squid.conf</filename> 文件 ACL 部分的 <emphasis role="bold">底部</emphasis>：</para>
                  <para>acl fortytwo_network src 192.168.42.0/24</para>
                  <para>然后添加下列语句到你 <filename>/etc/squid/squid.conf</filename> 文件 http_access 部分的 <emphasis role="bold">顶部</emphasis>：</para>
                  <para>http_access allow fortytwo_network</para>
               </listitem>
               <listitem>
                  <para>使用 Squid 卓越的访问控制功能，您可以通过 Squid 代理将 Internet 服务配置成仅限于在正常商务时间使用。例如，我们将举例说明只允许来自 10.1.42.0/24 子网的商务雇员在周一到周五的上午 9:00 到 下午 5:00 时间段内访问：</para>
                  <para>将下列语句添加到您 <filename>/etc/squid/squid.conf</filename> 文件 ACL 部分的 <emphasis role="bold">底部</emphasis>：</para>
                  <para>acl biz_network src 10.1.42.0/24 acl biz_hours time M T W T F 9:00-17:00</para>
                  <para>然后添加下列语句到你 <filename>/etc/squid/squid.conf</filename> 文件 http_access 部分的 <emphasis role="bold">顶部</emphasis>：</para>
                  <para>http_access allow biz_network biz_hours</para>
               </listitem>
          </itemizedlist>
          </para>
          <note>
	  <para>在修改 <filename>/etc/squid/squid.conf</filename> 文件后，保存该文件并重启 <application>squid</application> 服务器应用程序以使改动生效。可以在终端提示符后使用下列命令：</para>
          </note>
          <para>
<screen>
<command>sudo /etc/init.d/squid restart</command>
</screen>
          </para>
      </sect2>
      <sect2 id="squid-references" status="complete">
      <title>引用</title>
      <para>
      <ulink url="http://www.squid-cache.org/">Squid 网站</ulink>
      </para>
      </sect2>
    </sect1>
	<sect1 id="version-control-system" status="complete">
		<title>版本控制系统</title>
          <para>版本控制是管理改动信息的技术。它对于程序员而言一直是重要的工具，他们经常花时间对程序进行小改动之后又在第二天改回来。但版本控制软件的用途却远远超出了软件开发的界线。无论何处您可以发现人们使用计算机去管理那些经常变动的信息，那里都有使用版本控制的空间。</para>
<para>
          </para>
      <sect2 id="subversion" status="complete">
        <title>Subversion</title>
          <para>Subversion 是一个开源的版本控制系统。使用 Subversion，您可以记录源文件和文档的历史。它管理文件和目录。文件树被放入了中心库中。库更象是一个普通的文件服务器，除了它可以记住对文件和目录的每次改变。</para>
        <sect3 id="subversion-installation" status="complete">
          <title>安装</title>
            <para>要通过 HTTP 协议来访问 Subversion 库，您必须安装和配置一个 web 服务器。Apache2 被证明可以和 Subversion 一起工作。请参考 Apache2 章节的 HTTP 小节以安装和配置 Apache2。要使用 HTTPS 协议访问 Subversion 库，您必须在您的 Apache2 web 服务器上安装和配置数字证书。请参考  Apache2 章节的 HTTPS 小节以安装和配置数据证书。</para>
						<para>要安装 Subversion，可以在终端提示符后运行以下命令：</para>
	    <para>
<screen>
<command>sudo apt-get install subversion libapache2-svn</command>
</screen>
	    </para>

        </sect3>
        <sect3 id="subversion-configuration" status="complete">
          <title>服务器配置</title>
            <para>这一步假定您已经在您的系统上安装了上面提及的包。本部分内容说明如何创建一个 Subversion 库和访问项目。</para>
			<sect4 id="create-svn-repos" status="complete">
				<title>创建 Subversion 库</title>
<para>Subversion 库可以在终端提示符后使用以下命令创建：</para>

        <para>
<screen>
<command>svnadmin create /path/to/repos/project</command>
</screen>
        </para>
			</sect4>

        </sect3>
        <sect3 id="access-methods" status="complete">
          <title>访问方式</title>
<para>Subversion 库可以通过许多不同的方式如通过在本地磁盘或不同的网络协议来访问 (checked out)。然而，库的位置经常是一个 URL。下表描述了不同的URL模式如何映射相应的访问方式。</para>
				<table><title>访问方式</title>

					<tgroup cols="2">
						<colspec colname="1"/>
						<colspec colname="2"/>
						<thead>
							<row>
								<entry><para>模式</para></entry>
								<entry><para>访问方式</para></entry>
							</row>
						</thead>
						<tbody>
							<row>
								<entry><para>file://</para></entry>
								<entry><para>直接访问库 (在本地磁盘)</para></entry>
							</row>
							<row>
								<entry><para>http://</para></entry>
								<entry><para>通过 WebDAV 协议访问带有 Subversion 的 Apache2 web 服务器。</para></entry>
							</row>
							<row>
								<entry><para>https://</para></entry>
								<entry><para>与 http:// 相同，但有 SSL 加密</para></entry>
							</row>
							<row>
								<entry><para>svn://</para></entry>
								<entry><para>通过自身协议访问 svnserve 服务</para></entry>
							</row>
							<row>
								<entry><para>svn+ssh://</para></entry>
								<entry><para>与 svn:// 一样，但使用 SSH 遂道</para></entry>
							</row>
						</tbody>
					</tgroup>
				</table>

				<para>在本部分，我们将看到如何为所有这些访问方式来配置 Subversion。这里，我们只介绍基本用法。更多详细、高级用法请参阅<ulink url="http://svnbook.red-bean.com/">svn 书</ulink></para>
			<sect4 id="direct-repos-access" status="complete">
				<title>直接访问库 (file://)</title>
<para>这是所有访问方式中最简单的。它不要求运行任何 Subversion 服务器进程。该访问方式用于在同一台机器上访问 Subversion。在终端提示符后输入的命令如下所示：</para>

        <para>
<screen>
<command>svn co file:///path/to/repos/project</command>
</screen>
        </para>
  <para>或</para>
	<para>
<screen>
<command>svn co file://localhost/path/to/repos/project</command>
</screen>
        </para>
	<note>
		<para>如果您没有指定主机名，则需要三个斜杠 (///) -- 其中两个是协议的 (这里是 file)，另一个是路径前的。如果您指定了主机名，那么您必须使用双个斜杠 (//)。</para>
	</note>
		<para>库权限依赖于文件系统的权限。如果用户有读/写权限，他可以从库中检出或者提交到库。</para>
			</sect4>
			<sect4 id="access-via-webdav" status="complete">
				<title>通过 WebDAV 协议 (http://) 访问</title>
<para>要通过 WebDAV 协议访问 Subversion，您必须配置您的 Apache2 web 服务器。您必须在您的 <filename>/etc/apache2/apache2.conf</filename> 文件中添加下面一小段：</para>

	<programlisting> &lt;Location /svn&gt;
  DAV svn
  SVNPath /path/to/repos
  AuthType Basic
  AuthName "Your repository name"
  AuthUserFile /etc/subversion/passwd
  &lt;LimitExcept GET PROPFIND OPTIONS REPORT&gt;
  Require valid-user
  &lt;/LimitExcept&gt;
  &lt;/Location&gt; </programlisting>
  <para>接下来，您必须创建 <filename>/etc/subversion/passwd</filename> 文件。该文件包含用户认证细节。要添加一个条目，如添加一个用户，您可以在终端提示符后运行下列命令：</para>
	<para>
<screen>
<command>htpasswd2 /etc/subversion/passwd user_name</command>
</screen>
        </para>
	<para>该命令将提示您输入密码。一旦您输入密码。该用户将被添加。现在您可以运行下列命令来访问库：</para>
        <screen><command>svn co http://servername/svn</command></screen>
	<warning>
		<para>该密码是以纯文本传输的。如果您担心密码被截取，建议您使用 SSL 加密。相关细节，请参考下一章节。</para>
	</warning>
			</sect4>
			<sect4 id="access-via-webdav-with-ssl" status="complete">
				<title>通过带有 SSL 加密的 WebDAV 协议来访问 (https://)</title>
					<para>通过带 SSL 加密的 WebDAV 协议 (https://)  访问也使用 http:// 类似，只是您必须在您的 Apache2 web 服务器中安装和配置数字证书。</para>

					<para>您可以安装由证书签署机构如 Verisign 颁发的数字证书。或者，您也可以安装自己签署的证书。</para>
					<para>这一步假设您已经在您的 Apache2 web 服务器中安装和配置了数字证书。现在要访问 Subversion 库，请参考上一章节！除了所用协议之外访问方式完全相同。您必须使用 https:// 来访问 Subversion 库。</para>

			</sect4>
			<sect4 id="access-via-custom-protocol" status="complete">
				<title>通过自身协议访问 (svn://)</title>
					<para>一旦 Subversion 库被创建，您就可以配置访问控制了。您可以通过编辑 <filename> /path/to/repos/project/conf/svnserve.conf</filename> 文件来配置访问控制了。例如，要设置认证，您可以在配置文件中反注释下列行：</para>
					<programlisting># [general]
# password-db = passwd</programlisting>

					<para>在反注释上面几行之后，您可以在 passwd 文件中维护用户列表。因此编辑同一目录中的文件 <filename>passwd </filename>并添加新用户。其语法如下：</para>
					<programlisting>username = password</programlisting>
					<para>更多细节，请参考该文件。</para>

					<para>现在要从本机或不同机器通过 svn:// 自身协议来访问 Subversion，您可以使用 svnserve 命令来运行 svnserver。其语法如下：</para>
					<programlisting>$ svnserve -d --foreground -r /path/to/repos
# -d -- daemon mode
# --foreground -- run in foreground (useful for debugging)
# -r -- root of directory to serve

For more usage details, please refer to:
$ svnserve --help</programlisting>

					<para>一旦您运行该命令，将启动 Subversion 并在缺省端口 (3690) 监听。要访问项目库，您必须在终端提示符后运行下列命令：</para>
					<para>
<screen>
<command>svn co svn://hostname/project project --username user_name</command>
</screen>
                                        </para>
					<para>根据服务器的配置，出现密码提示。一旦您认证通过，将从 Subversion 库检出代码。要让本地副本同步项目库，您可以运行 <command>update</command> 子命令。在终端提示符后的命令语法如下所示：</para>
					<para>
<screen>
<command>cd project_dir ; svn update</command>
</screen>
                                        </para>
					<para>关于 Subversion 子命令的更多细节，您可以参考手册。如为了学到关于 co (checkout) 命令的细节，请在终端提示符后运行下列命令：</para>
                    <para><screen><command>svn co help</command></screen></para>

			</sect4>
			<sect4 id="access-via-custom-protocol-with-ssl" status="complete">
				<title>通过带有 SSL 加密的自身协议 (svn+ssh://) 访问</title>
					<para>配置和服务器处理与用 svn:// 方式是相同的。详情请参考上面的章节。这一步假定您已经完成了上面的步骤并用 <application>svnserve</application> 命令启动了 Subversion 服务器。</para>

					<para>它也假定 ssh 服务器已经在该机上运行并允许连接。为了确认，请尝试使用 ssh 登录该机器。如果您可以登录，一切就绪。如果不能登录，请在继续之前解决它。</para>

					<para>svn+ssh:// 协议使用 SSL 加密来访问 Subversion 库。使用这种方式进行的数据传输是加密的。要访问项目库 (如 checkout)，您必须使用下面的命令语法：</para>
                                        <para>
<screen>
<command>svn co svn+ssh://hostname/var/svn/repos/project</command>
</screen>
                                        </para>

					<note><para>使用这种访问方式您必须使用全路径 (/path/to/repos/project) 来访问 Subversion 库。</para></note>
					<para>根据服务器配置，它将提示输入密码。在使用 ssh 登录时您必须输入密码。一旦您被认证通过之后，它将从 Subversion 库中检出代码。</para>
			</sect4>
			</sect3>

      </sect2>
      <sect2 id="cvs-server" status="complete">
        <title>CVS 服务器</title> 
          <para>CVS 是一个版本控制系统。您可以使用它来记录源文件的历史。</para>
        <sect3 id="cvs-installation" status="complete">
          <title>安装</title>
            <para>在终端提示符后输入下列命令来安装 <application>cvs</application>：<screen>
<command>sudo apt-get install cvs</command>
</screen> 在您安装 <application>cvs</application>之后，您将安装 <application>xinetd</application> 来启动和停用 cvs 服务器。在提示符后输入下列命令以安装
<application>xinetd</application>：<screen>
<command>sudo apt-get install xinetd</command>
</screen></para>
        </sect3>
        <sect3 id="cvs-configuration" status="complete">
          <title>配置</title>
            <para>一旦您安装 cvs，将会自动初始化库。缺省状态下，库存放在 <application>/var/lib/cvs</application> 目录下。您可以通过运行以下命令来改变该路径：<screen>
<command>cvs -d /your/new/cvs/repo init</command>
</screen> 一旦库开始建立，您可以配置 <application>xinetd</application> 来启动 CVS 服务器。您可以拷贝以下行到 <filename> /etc/xinetd/cvspserver</filename> 文件。<programlisting>
service cvspserver
{
     port = 2401
     socket_type = stream
     protocol = tcp
     user = root
     wait = no
     type = UNLISTED
     server = /usr/bin/cvs
     server_args = -f --allow-root /var/lib/cvs pserver
     disable = no
}
</programlisting><note>
<para>如果你改变缺省的库目录 (<application>/var/lib/cvs</application>) 那么您必须要编辑库。</para>
</note> 一旦您配置好 <application>xinetd</application> ，您就可以运行以下命令来启动 cvs 服务器了：<screen>
<command>sudo /etc/init.d/xinetd start</command>
</screen></para>
            <para>您可以执行以下命令来确定 CVS 服务器正在运行：</para>

            <para>
<screen>
<command>sudo netstat -tap | grep cvs</command>
</screen>
            </para>

            <para>当您运行该命令时，您可以看到类似下面的行：</para>

<programlisting>
↵
tcp 0 0 *:cvspserver *:* LISTEN ↵ 
</programlisting>

        <para>在这里您可以继续添加用户，添加新的项目以及管理 CVS 服务器</para>
        <warning>
<para>CVS 允许用户添加独立于 OS 安装的用户。也许最容易的方式就是让 CVS 使用 Linux 的用户，虽然它有潜在的安全隐患。详细请参考 CVS 手册。</para>
        </warning>

        </sect3>
        <sect3 id="cvs-add-projects" status="complete">
          <title>添加项目</title>
            <para>本部分内容说明如何在 CVS 库中添加新项目。创建目录以及该目录所需的文档和源文件。现在运行下列命令将该项目添加到 CVS 库中：<screen>
<command>cd your/project</command>
<command>cvs import -d :pserver:username@hostname.com:/var/lib/cvs -m "Importing my project to CVS repository" . new_project start</command>
</screen><tip>
<para>您可以使用 CVSROOT 环境变量来保存 CVS 根目录。一旦您导出 CVSROOT 环境变量，您可以在上面的 cvs 命令中避免使用 －d 选项。</para>
</tip> 字符串 <emphasis>new_project</emphasis> 是一个 vendor 标签，<emphasis>start</emphasis> 是一个版本标签。它们在此没有任何用处，但由于 CVS 要求要有它们，所以它们必须出现。<warning>
<para>当您新添项目时，您所用的 CVS 用户必须对 CVS 库 (<application>/var/lib/cvs</application>) 有写权限。缺省状态下，<application>src</application> 组有对 CVS 库的写权限，因此，您可以添加用户到该组，然后就该用户就可以在 CVS 库中添加和管理项目了。</para>
</warning></para>
        </sect3>
      </sect2>
      <sect2 id="version-control-ref" status="complete">
        <title>引用</title> 
				<para><ulink url="http://subversion.tigris.org/">Subversion 主页</ulink></para>
				<para><ulink url="http://svnbook.red-bean.com/">Subversion 书 (使用Subversion进行版本控制)</ulink></para>
				<para><ulink url="http://ximbiot.com/cvs/manual/cvs-1.11.21/cvs_toc.html">CVS 手册</ulink></para>
      </sect2>
    </sect1>
	<sect1 id="databases" status="complete">
		<title>数据库</title>
          <para>Ubuntu 提供两个数据库服务器。它们是：<itemizedlist spacing="compact">
                <listitem>
                    <para><application><trademark>MySQL</trademark></application></para>
                </listitem>
                <listitem>
                    <para><application>PostgreSQL</application></para>
                </listitem>
            </itemizedlist> 它们位于主软件库中。该部分内容说明如何安装和配置这些数据库服务器。</para>
      <sect2 id="mysql" status="complete">
        <title>MySQL</title>
          <para>MySQL 是一个快速、多线程、多用户、强大的 SQL 数据库服务器。它旨在成为能用于大型应用、高负载的生产系统以及大规模部署的软件。</para>

        <sect3 id="mysql-installation" status="complete">
          <title>安装</title>
            <para>要安装 MySQL，可以在终端提示符后运行下列命令：</para>

            <para>
<screen>
<command>sudo apt-get install mysql-server mysql-client</command>
</screen>
            </para>

            <para>一旦安装完成，MySQL 服务器应该自动启动。您可以在终端提示符后运行以下命令来检查 MySQL 服务器是否正在运行：</para>

            <para>
<screen>
<command>sudo netstat -tap | grep mysql</command>
</screen>
            </para>

            <para>当您运行该命令时，您可以看到类似下面的行：</para>

<programlisting>
tcp 0 0 localhost.localdomain:mysql *:* LISTEN -
</programlisting>
	<para>如果服务器不能正常运行，您可以通过下列命令启动它：</para>
            <para>
<screen>
<command>sudo /etc/init.d/mysql restart</command>
</screen>
        </para>

        </sect3>
        <sect3 id="mysql-configuration" status="complete">
          <title>配置</title>
            <para>缺省状态下，管理员密码是没有设置的。一旦您安装了 MySQL，您必须要做的第一件事就是配置 MySQL 的管理员密码。要做到这一点，可以运行以下命令：</para>
            <para>
<screen>
<command>sudo mysqladmin -u root password newrootsqlpassword</command>
</screen>
            </para>
            <para>
<screen>
<command>sudo mysqladmin -u root -h localhost password newrootsqlpassword</command>
</screen>
            </para>

            <para>您可以编辑 <filename>/etc/mysql/my.cnf</filename> 文件来进行基本设置 -- 日志文件、端口号等。详情请参考 <filename>/etc/mysql/my.cnf</filename> 文件。</para>
        </sect3>
      </sect2>
      <sect2 id="postgresql" status="complete">
        <title>PostgreSQL</title> 
          <para>PostgreSQL 是一个面向对象的数据库系统，它有着传统商业数据库系统和下一代 DBMS 系统所增进的功能。</para>
        <sect3 id="postgresql-installation" status="complete">
          <title>安装</title>
            <para>要安装 PostgreSQL，可以在命令提示符后运行下列命令：</para>

            <para>
<screen>
<command>sudo apt-get install postgresql</command>
</screen>
            </para>

            <para>一旦安装完成，您就要按您的需要配置 PostgreSQL 服务器，尽管缺省配置已经可以使它可以正常运行了。</para>
            
        </sect3>
        <sect3 id="postgresql-configuration" status="complete">
          <title>配置</title>
            <para>缺省状态下，通过 TCP/IP 的连接是被禁用的。PostgreSQL 支持多客户认证方式。其中 IDENT 认证方式被默认使用。请参考  <ulink url="http://www.postgresql.org/docs/8.1/static/admin.html">PostgreSQL 管理员指南</ulink>。</para>
            
            <para>接下来的讨论假定您希望启用 TCP/IP 连接并对客户认证使用 MD5 模式。PostgreSQL 配置文件被保存在 <filename>/etc/postgresql/&lt;version&gt;/main /etc/postgresql/7.4/main </filename></para>
            
            <tip>
            <para>要配置 <application>ident</application> 认证，请在 <filename>/etc/postgresql/7.4/main/pg_ident.conf</filename> 文件中添加以下几条：</para>
            </tip>

            <para>要启用 TCP/IP 连接，编辑文件 <filename>/etc/postgresql/7.4/main/postgresql.conf</filename>。</para>

            <para>找到 <emphasis>#tcpip_socket = false</emphasis> 行并将其改为 <emphasis>tcpip_socket = true</emphasis>。如果您知道您正在做什么，那么您也可以编辑其他所有参数。详情请参考配置文件或 PostgreSQL 文档。</para>

            <para>缺省状态下，没有为 <emphasis>MD5</emphasis> 客户端认证设置用户证书。因此，首先必须将 PostgreSQL
 服务器配置成使用 <emphasis>trust</emphasis> 客户端认证，用以连接数据库。配置密码并将配置恢复成使用 <emphasis>MD5</emphasis> 客户端认证。要启用 <emphasis>trust</emphasis> 客户端认证，可编辑文件 <filename>/etc/postgresql/7.4/main/pg_hba.conf</filename></para>

            <para>注释所有使用 <emphasis>ident</emphasis> 和 <emphasis>MD5</emphasis> 客户端认证的行并添加下列行：</para>
<programlisting>
local all postgres trust sameuser
</programlisting>

            <para>然后运行下列命令启动 PostgreSQL 服务器：</para>
            <para>
<screen>
<command>sudo /etc/init.d/postgresql start</command>
</screen>
            </para>
            <para>一旦 PostgreSQL 服务器成功启动，在终端提示符后运行下面的命令以连接缺省的 PostgreSQL 模板数据库。</para>

            <para>
<screen>
<command>psql -U postgres -d template1</command>
</screen>
            </para>
            <para>上面的命令是以用户 <emphasis>postgres</emphasis> 的身份连接 PostgreSQL 的 <emphasis>template1</emphasis>  数据库。一旦您连到 PostgreSQL 服务器，您将会在 SQL 提示符下。您可以在 <application>psql</application> 提示符中运行下列命令来为用户 <emphasis role="italics">postgres</emphasis> 配置密码。</para>

            <para>
<screen>
<command>template1=# ALTER USER postgres with encrypted password 'your_password';</command>
</screen>
            </para>
            <para>在配置密码后，编辑文件 <filename>/etc/postgresql/7.4/main/pg_hba.conf</filename> 以使用 <emphasis>MD5</emphasis> 认证：</para>
            <para>注释掉最近添加的 <emphasis role="italics">trust</emphasis> 行并添加下面行：</para>

<programlisting>
local all postgres md5 sameuser
</programlisting>
            <warning>
            <para>无论如何上面配置并不完整。更多的配置参数请参考 <ulink url="http://www.postgresql.org/docs/8.1/static/admin.html"> PostgreSQL 管理员指南</ulink>。</para>
            </warning>
        </sect3>
      </sect2>
    </sect1>
	<sect1 id="email-services" status="complete">
		<title>邮件服务</title>
          <para>在网络或 Internet 上从一个人得到邮件给另一个人的处理过程包含许多系统的协同工作。这些系统中的每一个都必须配置正确以便可以正常工作。发送者使用一个 <emphasis>邮件用户代理</emphasis> (MUA)，或邮件客户端通过一个或多个 <emphasis>邮件传输代理</emphasis> (MTA) 来发送信息，最后一个将信息送到 <emphasis>邮件投递代理</emphasis> (MDA) 以便将其投递到接受者的收件箱中。该信息将会被接受者邮件客户端检索到，通常是通过 POP3 或 IMAP 服务器。</para>
      <sect2 id="postfix" status="complete">
        <title>Postfix</title>
          <para><application>Postfix</application> 是 Ubuntu 中缺省的邮件传输代理 (MTA)。它试图变得快捷、易于管理和安全。它与 MTA <application>sendmail</application> 兼容。这部分内容说明如何安装和配置 <application>postfix</application>。还说明如何将它设置成使用安全连接的 SMTP 服务器 (为了安全发送邮件)。</para>
        <sect3 id="postfix-installation" status="complete">
          <title>安装</title>
            <para>要安装带有 SMTP-AUTH 和 传输层安全 (TLS) 的 <application>postfix</application>，运行下列命令：<screen>
<command>sudo apt-get install postfix</command>
</screen> 当安装进程提问时简单地按回车，下面将详细说明相关配置。</para>
        </sect3>
        <sect3 id="postfix-configuration" status="complete">
          <title>基本配置</title>
            <para>要配置 <application>postfix</application>，运行下列命令：<screen>
<command>sudo dpkg-reconfigure postfix</command>
</screen> 用户界面将显示。在每一屏中，选择下列值：<itemizedlist spacing="compact">
            <listitem><para>Ok</para></listitem>
            <listitem><para>Internet 站点</para></listitem>
            <listitem><para>NONE</para></listitem>
            <listitem><para>mail.example.com</para></listitem>
            <listitem><para>mail.example.com, localhost.localdomain, localhost</para></listitem>
            <listitem><para>No</para></listitem>
            <listitem><para>127.0.0.0/8</para></listitem>
            <listitem><para>Yes</para></listitem>
            <listitem><para>0</para></listitem>
            <listitem><para>+</para></listitem>
            <listitem><para>全部</para></listitem>
            </itemizedlist></para>
            <note>
            <para>把 mail.example.com 作为您的邮件服务器的主机名。</para>
            </note>
	 </sect3>
        <sect3 id="postfix-smtp-authentication" status="complete">
          <title>SMTP 认证</title>
            <para>下一步是为 <application>postfix</application> 的 SMTP AUTH 配置使用 SASL。与其直接编辑配置，不如使用 <command>postconf</command> 命令配置所有 <application>postfix</application> 参数。配置参数被保存在 <filename>/etc/postfix/main.cf</filename> 文件中。如果您希望更新配置一项参数，您可以运行命令或手工在文件中修改。</para>
	<procedure>
		<step><para>配置 Postfix 使用 SASL (saslauthd) 的 SMTP AUTH ：<screen>
postconf -e 'smtpd_sasl_local_domain ='
postconf -e 'smtpd_sasl_auth_enable = yes'
postconf -e 'smtpd_sasl_security_options = noanonymous'
postconf -e 'broken_sasl_auth_clients = yes'
postconf -e 'smtpd_recipient_restrictions = permit_sasl_authenticated,permit_mynetworks,reject_unauth_destination'
postconf -e 'inet_interfaces = all'
echo 'pwcheck_method: saslauthd' &gt;&gt; /etc/postfix/sasl/smtpd.conf
echo 'mech_list: plain login' &gt;&gt; /etc/postfix/sasl/smtpd.conf
</screen></para>
		</step>
		<step><para>接下来为 TLS 配置数字证书。当被询问问题时，按照提示并适当回答。<screen>
openssl genrsa -des3 -rand /etc/hosts -out smtpd.key 1024
chmod 600 smtpd.key
openssl req -new -key smtpd.key -out smtpd.csr
openssl x509 -req -days 3650 -in smtpd.csr -signkey smtpd.key -out smtpd.crt
openssl rsa -in smtpd.key -out smtpd.key.unencrypted
mv -f smtpd.key.unencrypted smtpd.key
openssl req -new -x509 -extensions v3_ca -keyout cakey.pem -out cacert.pem -days 3650
mv smtpd.key /etc/ssl/private/
mv smtpd.crt /etc/ssl/certs/
mv cakey.pem /etc/ssl/private/
mv cacert.pem /etc/ssl/certs/
</screen></para>
		<note><para>您可以从证书颁发机构得到数字证书。或者您可以创建您自己的证书。详情参考 <xref linkend="creating-a-self-signed-certificate"/>。</para></note>
		</step>
		<step><para>配置 Postfix 对接收或发送邮件进行 TLS 加密：<screen>
postconf -e 'smtpd_tls_auth_only = no'
postconf -e 'smtp_use_tls = yes'
postconf -e 'smtpd_use_tls = yes'
postconf -e 'smtp_tls_note_starttls_offer = yes'
postconf -e 'smtpd_tls_key_file = /etc/ssl/private/smtpd.key'
postconf -e 'smtpd_tls_cert_file = /etc/ssl/certs/smtpd.crt'
postconf -e 'smtpd_tls_CAfile = /etc/ssl/certs/cacert.pem'
postconf -e 'smtpd_tls_loglevel = 1'
postconf -e 'smtpd_tls_received_header = yes'
postconf -e 'smtpd_tls_session_cache_timeout = 3600s'
postconf -e 'tls_random_source = dev:/dev/urandom'
postconf -e 'myhostname = mail.example.com'
</screen></para>
		</step>
		</procedure>
            <note>
            <para>在您运行所有命令之后，<application>postfix</application> 的 SMTP AUTH 将被配置。将为 TLS 创建自己签署的证书并与 <application>postfix</application> 一起配置。</para>
            </note>
            <para>现在文件 <filename>/etc/postfix/main.cf</filename> 看上去就象 <ulink url="../sample/postfix_configuration">这样</ulink>。</para>
		<para>postfix 初始配置完成。运行下列命令以开始 postfix 守护程序：<screen><command>sudo /etc/init.d/postfix start</command></screen> 现在 <application>postfix</application> 已经被安装、配置及成功运行。<application>Postfix</application> 支持在 <ulink url="ftp://ftp.isi.edu/in-notes/rfc2554.txt">RFC2554</ulink> 中定义的 SMTP AUTH。它基于 <ulink url="ftp://ftp.isi.edu/in-notes/rfc2222.txt">SASL</ulink>。无论如何在您使用 SMTP 之前必须设置 SASL 认证。</para>
	</sect3>
	<sect3 id="sasl">
	  <title>配置 SASL</title>
            <para><application>libsasl2</application>、<application>sasl2-bin</application> 和 <application>libsasl2-modules</application> 对于使用 SASL 的 SMTP AUTH 是必需的。如果您没有安装它们的话，您可以安装这些应用程序。<screen>
<command>apt-get install libsasl2 sasl2-bin</command>
</screen></para>
	    <para>要让其正常工作的话做一些改动是必须的。因为 <application>Postfix</application> 是被 chroot 在 <filename>/var/spool/postfix</filename> 中运行，<application>SASL</application> 需要被配置在假根目录中运行 (从 <filename>/var/run/saslauthd</filename> 到 <filename>/var/spool/postfix/var/run/saslauthd</filename>)：<screen>
<command>mkdir -p /var/spool/postfix/var/run/saslauthd</command>
<command>rm -rf /var/run/saslauthd</command>
</screen></para>
	    <para>要激活 <application>saslauthd</application>，编辑文件 <filename>/etc/default/saslauthd</filename>，并修改或添加 START 变量。为了将 <application>saslauthd</application> 配置成在假根目录中运行，添加 PWDIR、PIDFILE 和 PARAMS 变量。最终，随您所好配置 MECHANISMS 变量。该文件看起来象这样：<programlisting>
# This needs to be uncommented before saslauthd will be run
# automatically
START=yes

PWDIR="/var/spool/postfix/var/run/saslauthd"
PARAMS="-m ${PWDIR}"
PIDFILE="${PWDIR}/saslauthd.pid"

# You must specify the authentication mechanisms you wish to use.
# This defaults to "pam" for PAM support, but may also include
# "shadow" or "sasldb", like this:
# MECHANISMS="pam shadow"

MECHANISMS="pam"
</programlisting></para>
<note>
<para>如果您喜欢，您可以使用 <emphasis role="strong">shadow</emphasis> 代替 <emphasis role="strong">pam</emphasis>。这将使用 MD5 哈希密码传输并更为安全。需要认证的用户名和密码将是您正在服务器上使用系统的那些用户。</para>
</note>
        <para>接下来更新 <filename>/var/spool/portfix/var/run/saslauthd</filename> 的 dpkg "state"。saslauthd 初始化脚本将使用该设置来创建有着适当权限和所有权的目录：<screen>
<command>dpkg-statoverride --force --update --add root sasl 755 /var/spool/postfix/var/run/saslauthd</command>
</screen></para>
        </sect3>
        <sect3 id="postfix-testing" status="complete">
          <title>测试</title>
            <para>SMTP AUTH 配置完成。现在是启动并测试设置的时候了。您可以运行下列命令来启动 SASL 守护程序：<screen><command>sudo /etc/init.d/saslauthd start</command></screen> 要查看 SMTP-AUTH 和 TLS 是否正常工作，运行下列命令：<screen><command>telnet mail.example.com 25</command></screen> 在您建立到 postfix 邮件服务器连接之后，输入：<screen>ehlo mail.example.com</screen> 如果您看到包括下列行时，那么一切工作正常。输入 <command>quit</command> 退出。<programlisting>
250-STARTTLS
250-AUTH LOGIN PLAIN
250-AUTH=LOGIN PLAIN
250 8BITMIME
</programlisting></para>
        </sect3>
      </sect2>
      <sect2 id="exim4" status="complete">
        <title>Exim4</title>
          <para><application>Exim4</application> 是另一个由剑桥大学开发的用于连接 Internet 的 Unix 系统上的消息传输代理 (MTA)。安装Exim可以代替 <application>sendmail</application>，虽然 <application>exim</application> 的配置与 <application>sendmail</application> 是非常不同。</para>
        <sect3 id="exim4-installation" status="complete">
          <title>安装</title>
            <para>要安装 <application>exim4</application>，运行下列命令： <screen>
<command>sudo apt-get install exim4 exim4-base exim4-config</command>
</screen></para>
        </sect3>
        <sect3 id="exim4-configuration" status="complete">
          <title>配置</title>
            <para>要配置 <application>exim4</application>，运行下列命令： <screen>
<command>sudo dpkg-reconfigure exim4-config</command>
</screen> 用户界面将显示。该用户界面让您配置许多参数。例如，在 <application>exim4</application> 中配置文件被分成多个文件。如果您希望将它们放在一个文件中，您可以根据该用户界面进行配置。</para>

            <para>您在用户界面配置的所有参数被保存在 <filename>/etc/exim4/update-exim4.conf.conf</filename> 文件。如果您希望重新配置，您可以重新运行配置向导或用您喜欢的编辑器手工编辑该文件。一旦您配置好了，您可以运行下列命令来生成主配置文件：<screen>
<command>sudo update-exim4.conf</command>
</screen> 生成主配置文件且被保存在 <filename>/var/lib/exim4/config.autogenerated</filename>. <warning>
            <para>在任何时候，你都不要手工编辑主配置文件 <filename>/var/lib/exim4/config.autogenerated</filename>。它在每次您运行 <command>update-exim4.conf</command> 之后会自动更新。</para>
            </warning> 您可以运行下列命令以启动 <application>exim4</application> 守护程序。 <screen>
<command>sudo /etc/init.d/exim4 start</command>
</screen><emphasis role="strong">TODO:</emphasis> 该内容将覆盖 exim4 的 SMTP AUTH 配置。</para>
        </sect3>
      </sect2>
      <sect2 id="dovecot-server" status="complete">
        <title>Dovecot 服务器</title> 
          <para><application>Dovecot</application> 是一个主要出于安全考虑编写的邮件投递代理。它支持主要收件箱格式：mbox 或 Maidir。这部分说明如何将它设为一个 imap 或 pop3 服务器。</para>
        <sect3 id="dovecot-installation" status="complete">
          <title>安装</title>
            <para>要安装 <application>dovecot</application>，在命令提示符中运行下列命令：<screen>
<command>sudo apt-get install dovecot-common dovecot-imapd dovecot-pop3d</command>
</screen></para>
        </sect3>
        <sect3 id="dovecot-configuration" status="complete">
          <title>配置</title>
            <para>要配置 <application>dovecot</application>，您可以编辑文件 <filename>/etc/dovecot/dovecot.conf</filename>。您可以选择您所使用的协议。它可以是 pop3、pop3 (安全 pop3)、imap 和 imaps (安全 imap)。对这些协议的说明是超出该指南范围的。更多信息请参考 wikipedia 关于 <ulink url="http://en.wikipedia.org/wiki/POP3">POP3</ulink> 和 <ulink url="http://en.wikipedia.org/wiki/Internet_Message_Access_Protocol">IMAP</ulink> 的文章。</para>

            <para>IMAPS 和 POP3S 比简单 IMAP 和 POP3 更安全，因为他们使用 SSL 加密连接。一旦您选择了协议，修改在文件 <filename>/etc/dovecot/dovecot.conf</filename> 中的下列行：<programlisting>
protocols = pop3 pop3s imap imaps
</programlisting> 当 <application>dovecot</application> 启动时协议开始生效。接下来在文件 <filename>/etc/dovecot/dovecot.conf</filename> 的 pop3 部分添加下列行：<programlisting>
pop3_uidl_format = %08Xu%08Xv
</programlisting>。然后选择您所用的收件箱。<application>Dovecot</application> 支持 <emphasis role="strong">maildir</emphasis> 和 <emphasis role="strong">mbox</emphasis> 格式。大多数通常使用 mailbox 格式。它们都有自己的优点，并且在 <ulink url="http://dovecot.org/doc/configuration.txt">dovecot 网站</ulink> 上讨论。</para>
            <para>一旦您选择了您的收件箱格式后，就可以编辑文件 <filename>/etc/dovecot/dovecot.conf</filename> 并修改下列行：<programlisting>
default_mail_env = maildir:~/Maildir # (for maildir)
或
default_mail_env = mbox:~/mail:INBOX=/var/spool/mail/%u # (for mbox)
</programlisting></para>
<note>
<para>如果接收到的邮件类型与您已经配置不同，那么您要配置您的邮件传输代理 (MTA) 用来将该邮件传输到这种类型的收件箱中。</para>
</note>
          <para>一旦您已经配置好了 dovecot，启动 <application>dovecot</application> 守护程序以测试您的设置：<screen><command>sudo /etc/init.d/dovecot start</command></screen> 如果您启用 imap 或 pop3，您也可以试着用命令 <command>telnet localhost pop3</command> 或 <command>telnet localhost imap2</command> 登录。如果您看到类似下面的东西，那么安装就成功了：<programlisting>
bhuvan@rainbow:~$ telnet localhost pop3
Trying 127.0.0.1...
Connected to localhost.localdomain.
Escape character is '^]'.
+OK Dovecot ready.
</programlisting></para>
        </sect3>
        <sect3 id="dovecot-ssl" status="complete">
          <title>Dovecot SSL 配置</title>
            <para>要配置 <application>dovecot</application> 使用 SSL，您可以编辑文件 <filename>/etc/dovecot/dovecot.conf</filename> 并修改下列行：<programlisting>
ssl_cert_file = /etc/ssl/certs/dovecot.pem
ssl_key_file = /etc/ssl/private/dovecot.pem
ssl_disable = no
disable_plaintext_auth = no
</programlisting> 当您安装 <application>dovecot</application> 时，会通过它自动创建 <emphasis role="strong">cert</emphasis> 和 <emphasis role="strong">key</emphasis> 文件。请注意这些钥匙没被签名并会在客户端连接时给出 "bad signature" 的错误。要避免这一点，您可以使用商业证书，甚至更好，使用您自己签署的 SSL 证书。</para>
	</sect3>
	<sect3>
	  <title>邮件服务器的防火墙配置</title>
          <para>要从另一台计算机访问您的邮件服务器，您必须配置您的防火墙以允许连接服务器必要的端口。<itemizedlist>
            <listitem><para>IMAP - 143</para></listitem>
            <listitem><para>IMAPS - 993</para></listitem>
            <listitem><para>POP3 - 110</para></listitem>
            <listitem><para>POP3S - 995</para></listitem>
            </itemizedlist></para>
        </sect3>
      </sect2>
      <sect2 id="mailman" status="complete">
        <title>Mailman</title> 
          <para>Mailman 是一个管理电子邮件讨论及电子通讯列表的开源程序。许多开源的邮件列表 (包括所有的 <ulink url="http://lists.ubuntu.com">Ubuntu 邮件列表</ulink>)使用 Mailman 作为他们的邮件列表软件。它是强大的且易于安装和维护。</para>
        <sect3 id="mailman-installation" status="complete">
          <title>安装</title>
            <para>Mailman 为管理员和用户提供一个 web 界面。因此，它要求 apache 要有 mod_perl 的支持。Mailman 使用外部邮件服务器来发送和接收邮件。它可以与下列邮件服务器很好的工作：</para>
            <para>
            <itemizedlist spacing="compact">
                <listitem>
                    <para><application>Postfix</application></para>
                </listitem>
                <listitem>
                    <para><application>Exim</application></para>
                </listitem>
                <listitem>
                    <para><application>Sendmail</application></para>
                </listitem>
                <listitem>
                    <para><application>Qmail</application></para>
                </listitem>
            </itemizedlist>
            </para>

            <para>我们将看到如何安装 mailman、apache web 服务器和 Exim 邮件服务器。如果您希望安装 mailman 和一个不同的邮件服务器，请参考参考部分。</para>
          <sect4 id="mailman-apache2">
            <title>Apache2</title>
              <para>要安装 apache2 您可以参考 <xref linkend="http-installation"/>。</para>
          </sect4>
          <sect4 id="mailman-exim4">
            <title>Exim4</title>
              <para>要安装 Exim4 您可以在终端提示符后运行下列命令：<screen>↵
<command>sudo apt-get install exim4</command>↵
<command>sudo apt-get install exim4-base</command>↵
<command>sudo apt-get install exim4-config</command>↵
</screen> 一旦安装好 exim4，配置文件被保存在 <filename>/etc/exim4</filename> 目录中。缺省情况下，在 ubuntu 中，exim4 配置文件被分成不同的文件。您可以通过配置 <filename>/etc/exim4/update-exim4.conf</filename> 中的下列变量来改变这一现状：<itemizedlist spacing="compact">
              <listitem>
                <para><application>dc_use_split_config='true'</application></para>
              </listitem>
              </itemizedlist></para>
          </sect4>
          <sect4 id="mailman-mailman">
            <title>Mailman</title>
              <para>要安装 <application>Mailman</application>，在终端提示符后运行下列命令：<screen>
<command>sudo apt-get install mailman</command>
</screen> 它复制安装文件到 <application>/var/lib/mailman</application> 目录，将 CGI 脚本安装到 <application>/usr/lib/cgi-bin/mailman</application>目录，创建 <emphasis>list</emphasis> linux 用户，创建 <emphasis>list</emphasis> linux 用户组。mailman 进程将以该用户运行。</para>
          </sect4>
        </sect3>
        <sect3 id="mailman-configuration" status="complete">
          <title>配置</title>
            <para>本节假定您已经成功安装 <application>mailman</application>、<application>apache2</application>  和<application>exim4</application>。现在您只需要配置它们。</para>
          <sect4 id="mailman-conf-apache2">
            <title>Apache2</title>
              <para>一旦 apache2 安装之后，您可以在 <filename>/etc/apache2/apache2.conf</filename> 文件添加下列行：<programlisting>
Alias /images/mailman/ "/usr/share/images/mailman/"
Alias /pipermail/ "/var/lib/mailman/archives/public/"
</programlisting> Mailman 使用 apache2 来运行它的 CGI 脚本。mailman 的 CGI 脚本被安装在 <application>/usr/lib/cgi-bin/mailman</application> 目录中。因此 mailman 的 url 将是 http://hostname/cgi-bin/mailman/。如果您希望改变这一状况，您可以修改 <filename>/etc/apache2/apache2.conf</filename> 文件。</para>
          </sect4>

          <sect4 id="mailman-conf-exim4">
            <title>Exim4</title>
              <para>一旦 Exim4 安装之后，您可以在终端提示符后使用下列命令启动 Exim 服务器：<screen>↵
<command>sudo apt-get /etc/init.d/exim4 start</command>↵
</screen> 为了使 mailman 可以和 exim4 一起工作，您需要配置 exim4。正如先前所说的那样，在缺省状态下 exim4 使用不同类型的多个配置文件。详情请参考 <ulink url="http://www.exim.org">Exim</ulink> 网站。要运行 mailman，我们可以新建一个配置文件到下列配置类型：<itemizedlist spacing="compact">
              <listitem>
                <para>主</para>
              </listitem>
              <listitem>
                <para>传输</para>
              </listitem>
              <listitem>
                <para>路由器</para>
              </listitem>
              </itemizedlist> Exim 按这些小的配置文件顺序创建出一个主配置文件。因此这些配置文件的顺序是非常重要的。</para>
          </sect4>
          <sect4 id="mailman-conf-main">
            <title>主</title>
              <para>所有隶属于主类别的配置文件都被保存在 <filename>/etc/exim4/conf.d/main/</filename> 目录中。您可以将下面的内容添加到一个名为 <filename>04_exim4-config_mailman</filename> 的新文件中：<programlisting>
↵
# start↵
# Home dir for your Mailman installation -- aka Mailman's prefix↵
# directory.↵
# On Ubuntu this should be "/var/lib/mailman"↵
# This is normally the same as ~mailman↵
MM_HOME=/var/lib/mailman↵
#↵
# User and group for Mailman, should match your --with-mail-gid↵
# switch to Mailman's configure script. Value is normally "mailman"↵
MM_UID=list↵
MM_GID=list↵
#↵
# Domains that your lists are in - colon separated list↵
# you may wish to add these into local_domains as well↵
domainlist mm_domains=hostname.com↵
#
# -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
#
# These values are derived from the ones above and should not need
# editing unless you have munged your mailman installation
#
# The path of the Mailman mail wrapper script
MM_WRAP=MM_HOME/mail/mailman
#
# The path of the list config file (used as a required file when
# verifying list addresses)
MM_LISTCHK=MM_HOME/lists/${lc::$local_part}/config.pck
# end
</programlisting></para>
          </sect4>
          <sect4 id="mailman-conf-transport">
            <title>传输</title>
              <para>所有隶属于传输类型的文件被保存在 <filename>/etc/exim4/conf.d/transport/</filename> 目录中。您可以将下面的内容添加到一个名为 <filename>40_exim4-config_mailman</filename> 的新文件中：<programlisting>
  mailman_transport:
   driver = pipe
   command = MM_WRAP \
               '${if def:local_part_suffix \
                     {${sg{$local_part_suffix}{-(\\w+)(\\+.*)?}{\$1}}} \
                     {post}}' \
               $local_part
    current_directory = MM_HOME
    home_directory = MM_HOME
    user = MM_UID
    group = MM_GID
</programlisting></para>
          </sect4>
          <sect4 id="mailman-conf-router">
            <title>路由器</title>
              <para>所有隶属于路由类的所有配置文件都被保存在 <filename>/etc/exim4/conf.d/router/</filename> 目录中。您可以将下列内容添加到名为 <filename>101_exim4-config_mailman</filename> 的新文件中：<programlisting>
  mailman_router:
   driver = accept
   require_files = MM_HOME/lists/$local_part/config.pck
   local_part_suffix_optional
   local_part_suffix = -bounces : -bounces+* : \
                       -confirm+* : -join : -leave : \
                       -owner : -request : -admin
   transport = mailman_transport↵
</programlisting></para>
<warning>
<para>主类和传输类的配置文件的顺序可以随意。但路由类的配置文件的顺序必须相同。该文件必须在 <application>200_exim4-config_primary</application> 文件之前出现。如果两个配置文件包含相同类型的信息。第一个文件优先。详情请参阅参考部分。</para>
</warning>
          </sect4>
          <sect4 id="mailman-conf-mailman">
            <title>Mailman</title>
              <para>安装 mailman 之后，您可以使用下列命令来运行它：<screen>
<command>sudo /etc/init.d/mailman start</command>
</screen> 一旦 mailman 安装，您必须创建缺省的邮件列表。运行下列命令以创建邮件列表：<screen>
<command>sudo /usr/sbin/newlist mailman</command>
</screen><programlisting>
  Enter the email address of the person running the list: bhuvan at ubuntu.com
  Initial mailman password:
  To finish creating your mailing list, you must edit your <filename>/etc/aliases</filename> (or
  equivalent) file by adding the following lines, and possibly running the
  `newaliases' program:

  ## mailman mailing list
  mailman: "|/var/lib/mailman/mail/mailman post mailman"
  mailman-admin: "|/var/lib/mailman/mail/mailman admin mailman"
  mailman-bounces: "|/var/lib/mailman/mail/mailman bounces mailman"
  mailman-confirm: "|/var/lib/mailman/mail/mailman confirm mailman"
  mailman-join: "|/var/lib/mailman/mail/mailman join mailman"
  mailman-leave: "|/var/lib/mailman/mail/mailman leave mailman"
  mailman-owner: "|/var/lib/mailman/mail/mailman owner mailman"
  mailman-request: "|/var/lib/mailman/mail/mailman request mailman"
  mailman-subscribe: "|/var/lib/mailman/mail/mailman subscribe mailman"
  mailman-unsubscribe: "|/var/lib/mailman/mail/mailman unsubscribe mailman"
↵
  Hit enter to notify mailman owner...

  # 
</programlisting> 我们已经把 exim 配置成可以识别所有来自 mailman 的邮件。因此并不需要在 <filename>/etc/aliases</filename> 中添加任何新的条目。如果您对配置文件做了改动，请确保您在进入下一章节之前重启了这些服务。</para>
          </sect4>
        </sect3>
        <sect3 id="mailman-admin" status="complete">
          <title>管理</title>
<para>我们假定您已经进行了缺省安装。mailman 的 cgi 脚本应该在 <application>/usr/lib/cgi-bin/mailman/</application> 目录中。Mailman 提供了一个基于 web 管理工具。可以在您的浏览器输入下列 url 访问该页：</para>
<para>http://hostname/cgi-bin/mailman/admin</para>

<para>缺省的邮件列表 <emphasis>mailman</emphasis> 将出现在屏幕上。如果您点击邮件列表名，它将询问您的认证密码。如果您输入了正确的密码，您将可以改变该邮件列表的管理设置。您可以使用命令行工具 (<command>/usr/sbin/newlist</command>) 创建一个新的邮件列表，您也可以使用 web 界面来创建新的邮件列表。</para>
        </sect3>
        <sect3 id="mailman-users" status="complete">
          <title>用户</title>
<para>Mailman 为用户提供了一个 web 界面，可以在您的浏览器中输入下列 url 来访问该页：</para>

<para>http://hostname/cgi-bin/mailman/listinfo</para>

<para>缺省邮件列表 <emphasis>mailman</emphasis> 将出现在屏幕上。如果您点击邮件列表名，它将显示订阅表单。您可以输入您的邮件地址、姓名 (可选)及密码来订阅。一个邀请邮件将发送给您。您可以根据该邮件的指示完成订阅。</para>
        </sect3>
        <sect3 id="mailman-references" status="complete">
          <title>引用</title>
<para>
<ulink url="http://www.list.org/mailman-install/index.html">GNU Mailman - 安装手册</ulink>
</para>
<para>
<ulink url="http://www.exim.org/howto/mailman21.html">指南 - 一起使用 Exim 4 和 Mailman 2.1</ulink>
</para>
        </sect3>
      </sect2>
    </sect1>
	</chapter>
