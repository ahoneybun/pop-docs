<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE chapter PUBLIC "-//OASIS//DTD DocBook XML V4.3//EN" 
	"http://www.oasis-open.org/docbook/xml/4.3/docbookx.dtd" [
<!ENTITY % globalent SYSTEM "../../../libs/global.ent">
%globalent;
<!ENTITY % cdo-C SYSTEM "../../../libs/cdo-C.ent">
%cdo-C;
<!ENTITY % gnome-menus-C SYSTEM "../../../ubuntu/libs/gnome-menus-C.ent">
%gnome-menus-C;
<!ENTITY % xinclude SYSTEM "../../../libs/xinclude.mod">
%xinclude;
<!ENTITY language "&EnglishAmerican;">
<!ENTITY ubuntu '<phrase>Ubuntu</phrase>'>
]>
<chapter id="networking-related-applications">
	<title>Networking Related Applications</title>
  <para>Networking Related Applications para ... </para>
	<sect1 id="network-configuration" status="writing">
		<title>Network Configuration</title>
          <para>
            Network Configuration para ...
          </para>
      <sect2 id="ethernet" status="writing">
        <title>Ethernet</title> 
          <para>
            Ethernet para ...
          </para>
          </sect2>
        <sect2 id="wireless" status="writing">
          <title>Wireless</title>
            <para>
              Wireless para ...
            </para>
        </sect2>
        <sect2 id="managing-dns-entries" status="writing">
          <title>Managing DNS Entries</title>
            <para>
              Managing DNS Entries para ...
            </para>
        </sect2>
        <sect2 id="managing-hosts" status="writing">
          <title>Managing Hosts</title>
            <para>
              Managing Hosts para ...
            </para>
        </sect2>
    </sect1>
	<sect1 id="tcpip" status="writing">
		<title>TCP/IP</title>
          <para>
            TCP/IP para ...
          </para>
      <sect2 id="tcpip-introduction" status="writing">
        <title>TCP/IP Introduction</title> 
          <para>
            TCP/IP Introduction para ...
          </para>
          </sect2>
        <sect2 id="tcpip-configuration" status="writing">
          <title>TCP/IP Configuration</title>
            <para>
              TCP/IP Configuration para ...
            </para>
        </sect2>
        <sect2 id="ip-routing" status="writing">
          <title>IP Routing</title>
            <para>
              IP Routing para ...
            </para>
        </sect2>
        <sect2 id="tcp-and-udp" status="writing">
          <title>TCP and UDP</title>
            <para>
              TCP and UDP para ...
            </para>
        </sect2>
        <sect2 id="icmp" status="writing">
          <title>ICMP</title>
            <para>
              ICMP para ...
            </para>
        </sect2>
        <sect2 id="daemons" status="writing">
          <title>Daemons</title>
            <para>
              Daemons para ...
            </para>
        </sect2>
    </sect1>
	<sect1 id="firewall-configuration" status="writing">
		<title>Firewall Configuration</title>
          <para>
            Firewall Configuration para ...
          </para>
        <sect2 id="firewall-introduction" status="writing">
          <title>Firewall Introduction</title>
            <para>
              Firewall Introduction para ...
            </para>
        </sect2>
        <sect2 id="ip-masquerading" status="writing">
          <title>IP Masquerading</title>
            <para>
              IP Masquerading para ...
            </para>
        </sect2>
        <sect2 id="firewall-tools" status="writing">
          <title>Tools</title>
            <para>
              Tools para ...
            </para>
        </sect2>
        <sect2 id="firewall-logs" status="writing">
          <title>Logs</title>
            <para>
              Logs para ...
            </para>
        </sect2>
    </sect1>
	<sect1 id="openssh-server" status="writing">
		<title>OpenSSH Server</title>
      <sect2 id="openssh-introduction" status="writing">
        <title>Introduction</title> 
           <para>
            This section of the Ubuntu Server Starter Guide introduces a powerful collection of tools
            for the remote control of networked computers, and transfer of data between networked 
            computers called <emphasis role="italics">OpenSSH</emphasis>. You will also learn
            about some of the configuration settings possible with the OpenSSH server application, and
            how to change them on your Ubuntu system. 
          </para>
          <para>
            OpenSSH is a freely available version of the Secure Shell (SSH) protocol family of 
            tools for remotely controlling a computer, or transfer of files between computers.
            Traditional tools used to accomplish these functions such as <application>telnet</application>
            or <application>rcp</application> are insecure, and transmit the user's password in
            cleartext when used. OpenSSH provides a server daemon, and client tools to facilitate
            secure, encrypted remote control, and file transfer operations, effectively replacing
            the legacy tools.
          </para>
          <para>
            The OpenSSH server component, <application>sshd</application> listens continuously for
            client connections from any of the client tools. When a connection request occurs,
            <application>sshd</application> sets up the correct connection depending on the type
            of client tool connecting. For example, if the remote computer is connecting with the
            <application>ssh</application> client application, the OpenSSH server sets up a remote
            control session after authentication. If a remote user connects to an OpenSSH server with
            <application>scp</application>, the OpenSSH server daemon initiates a secure copy of files
            between the server and client after authentication. OpenSSH can use many authentication
            methods, including plain password, public key, and <application>Kerberos</application> tickets.
            </para>
          </sect2>
        <sect2 id="openssh-installation" status="writing">
        <title>Installation</title>
        <para>
        Installation of the OpenSSH client, and server applications is simple, and straightforward process, using the 
        <application>apt-get</application> application. To install the OpenSSH client applications on your Ubuntu system, 
        use this command at the prompt:
        </para>
           <para>
               <command>
               apt-get install openssh-client
               </command>
           </para>
        <para>
        To install the OpenSSH server application, and related support files, use this command:
        </para>
           <para>
              <command>
              apt-get install openssh-server
              </command>
           </para>
        </sect2>
        <sect2 id="openssh-configuration" status="writing">
          <title>Configuration</title>
            <para>
              You may configure the default behavior of the OpenSSH server application, <application>sshd</application> 
              by editing the file /etc/ssh/sshd_config. For information about the configuration directives used in this file, you may
              view the appropriate manual page with the following command:
            </para>
               <para>
                  <command>
                  man sshd_config
                  </command>
               </para>
            <para>
            There are many directives in the <application>sshd</application> configuration file controlling such things as communications
            settings, and authentication modes. For example, you may change the default Transmission Control Protocol (TCP) port that your OpenSSH
            server listens for incoming connections on by editing the /etc/ssh/ssh_config file.
            </para>
            <tip>
               <para>Prior to editing the configuration file, you should make a copy of the original file, and protect it 
               from writing so you will have the original settings as a reference, and to re-use as necessary.
               </para>
            </tip>
           <para>
           Copy the /etc/ssh/sshd_config file, and protect it from writing with the commands:
           </para>
             <para>
                <command>sudo cp /etc/ssh/sshd_config /etc/ssh/sshd_config.original</command>
             </para>
             <para>
                <command>sudo chmod a-w /etc/ssh/sshd_config.original</command>
             </para> 
          <para>
          Now edit the /etc/ssh/sshd_config file with the command:
          </para>
               <para>
                  <command>
                  sudo vim /etc/ssh/sshd_config
                  </command>
               </para>
            <para>
            and set the value of the <emphasis role="italic">Port</emphasis> directive to the port number you wish the server
            to bind to, and listen on.  
            </para>
               <itemizedlist>
               <listitem>
               <para>
               To set your OpenSSH to listen on TCP port 2222 instead of the default TCP port 22, change
               the Port directive as such:
               </para>
               <para>
               Port 2222
               </para>
               </listitem>
               </itemizedlist>
            <para>
            After making changes to the /etc/ssh/sshd_config file, save the file, and restart the <application>sshd</application> 
            server application to effect the changes using the command:
            </para>
               <para>
                  <command>
                  sudo /etc/init.d/ssh restart
                  </command>
               </para>
            <para>
            Other examples of configuration directives you may change include configuring the <application>sshd</application> server
            application to accept public key-based login credentials, or having <application>sshd</application> display a pre-login
            banner, such as the contents of the /etc/issue, or /etc/issue.net file.  
            </para>
            <itemizedlist>
            <listitem>
            <para>
            To have <application>sshd</application> allow public key-based login credentials, simply add, or modify the line:
            </para>
               <para>
               RSAAuthentication yes
               </para>
            <para>
            in the /etc/ssh/sshd_config file.
            </para>
            </listitem>
            <listitem>
             <para>
             To make your OpenSSH server display the contents of the /etc/issue.net file as a pre-login
             banner, simply add, or modify the line:
             </para>
               <para>
               Banner  /etc/issue.net
               </para>
               <para>
               in the /etc/ssh/sshd_config file.
               </para>
             </listitem>
             </itemizedlist>
                        <warning>
                           <para>
                           Many other configuration directives for <application>sshd</application> are available for changing the server application's
                           behavior to fit your needs. Be advised however, if your only method of access to a server is <application>ssh</application>,
                           and you make a mistake in configuring <application>sshd</application> via the /etc/ssh/sshd_config file, you may find you
                           are locked out of the server upon restarting it, or that the <application>sshd</application> server refuses to start due
                           to an incorrect configuration directive, so be extra careful when editing this file on a remote server.
                           </para>
                        </warning>
        </sect2>
     </sect1>
	<sect1 id="vsftpd-ftp-server" status="writing">
        <title>FTP Introduction</title> 
            <para>File Transfer Protocol (FTP) is a TCP protocol for uploading and downloading large
                files between computers. FTP works on a client/server model. The server component is
                called a <emphasis>FTP daemon</emphasis>. It continuously listens for FTP requests
                from remote clients. When a request is received it manages the the login and sets up
                the connection. For the duration of a session it executes any of commands sent by
                the FTP client.</para>
            <para>Access to an FTP server can be managed in two ways:</para>
            <itemizedlist spacing="compact">
                <listitem>
                    <para>Anonymous</para>
                </listitem>
                <listitem>
                    <para>Authenticated</para>
                </listitem>
            </itemizedlist>
            <para>In the Anonymous mode, remote clients can access the FTP server by using the
                default user account called &apos;anonymous&quot; or &quot;ftp&quot; and
                sending their email address as the password. In the Authenticated mode a user must
                have an account and password. User access to the FTP server directories and files is
                dependant on the permissions defined for the account used at login. As a general
                rule the FTP daemon will hide the root directory of the FTP server and change it to
                the FTP Home directory. This hides the rest of the file system from remote
            sessions.</para>
            <sect2>
                <title>vsftpd - FTP Server</title>
                <procedure><step>
                    <para>vsftpd is a FTP daemon available in
                    Ubuntu Linux. It is easy to install, setup and
                    maintain.</para></step>
                </procedure>
            <variablelist>
                <varlistentry>
                    <term>Installation:</term>
                    <listitem>
                        <para>At the prompt enter the following command to install
                                <application>vsftpd</application>:</para>
                        <para>
                            <command>sudo apt-get install vsftpd</command>
                        </para>
                    </listitem>
                </varlistentry>
                </variablelist>
                <variablelist>
                <varlistentry>
                    <term>Configuration:</term>
                    <listitem>
                        <para>
                        You may edit the vsftpd configuration file to
                        change the default settings. More information about
                        each configuration parameter is available in
                        the configuration file.
                        </para>
                        <para>
                            <command>sudo vim /etc/vsftpd.conf</command>
                        </para>
                    </listitem>
                </varlistentry>
                <varlistentry>
                    <term>Manage Service:</term>
                    <listitem>
                        <para> <command>sudo /etc/init.d/vsftpd start</command></para>
                        <para><command>sudo /etc/init.d/vsftpd stop</command> </para>
                    </listitem>
                </varlistentry>
            </variablelist>
                </sect2>
    </sect1>
	<sect1 id="network-file-system" status="writing">
		<title>Network File System (NFS)</title>
          <para>
            NFS para ...
          </para>
      <sect2 id="nfs-installation" status="writing">
        <title>Installation</title>
          <para>
            Installation para ...
          </para>
      </sect2>
      <sect2 id="nfs-configuration" status="writing">
        <title>Configuration</title>
          <para>
            Configuration para ...
          </para>
      </sect2>
      <sect2 id="nfs-references" status="writing">
        <title>References</title>
          <para>
            References para ...
          </para>
      </sect2>
    </sect1>
	<sect1 id="dhcp" status="writing">
		<title>Dynamic Host Configuration Protocol (DHCP)</title>
          <para>
            DHCP para ...
          </para>
      <sect2 id="dhcp-installation" status="writing">
        <title>Installation</title>
          <para>
            Installation para ...
          </para>
      </sect2>
      <sect2 id="dhcp-configuration" status="writing">
        <title>Configuration</title>
          <para>
            Configuration para ...
          </para>
      </sect2>
      <sect2 id="dhcp-references" status="writing">
        <title>References</title>
          <para>
            References para ...
          </para>
      </sect2>
    </sect1>
	<sect1 id="dns" status="writing">
		<title>Domain Name Servers (DNS)</title>
          <para>
            DNS para ...
          </para>
      <sect2 id="dns-installation" status="writing">
        <title>Installation</title>
          <para>
            Installation para ...
          </para>
      </sect2>
      <sect2 id="dns-configuration" status="writing">
        <title>Configuration</title>
          <para>
            Configuration para ...
          </para>
        <sect3 id="primary-dns" status="writing">
          <title>Primary DNS</title>
            <para>
              Primary DNS para ...
            </para>
        </sect3>
        <sect3 id="secondary-dns" status="writing">
          <title>Secondary DNS</title>
            <para>
              Secondary DNS para ...
            </para>
        </sect3>
      </sect2>
      <sect2 id="dns-references" status="writing">
        <title>References</title>
          <para>
            References para ...
          </para>
      </sect2>
    </sect1>
	<sect1 id="cups" status="writing">
		<title>CUPS - Print Server</title>
          <para>
            CUPS para ...
          </para>
      <sect2 id="cups-installation" status="writing">
        <title>Installation</title>
          <para>
            Installation para ...
          </para>
      </sect2>
      <sect2 id="cups-configuration" status="writing">
        <title>Configuration</title>
          <para>
            Configuration para ...
          </para>
      </sect2>
    </sect1>
	<sect1 id="http" status="writing">
		<title>HTTP - Apache2 Web Server</title>
      <para>Apache is the most commonly used Web Server on Linux systems. Web Servers are used
          to serve Web Pages requested by client computers. Clients typically request and view
          Web Pages using Web Browser applications such as <application>Firefox</application>,
              <application>Opera</application> or <application>Mozilla</application>.</para>
      <para>Users enter a Uniform Resource Locator (URL) to point to a Web server by means of
          its Fully Qualified Domain Name (FQDN) and a path to the required resource. For example, to view the home page of
          the <ulink url="&ubuntu-web;">Ubuntu Web site</ulink> a user will enter only the FQDN. To request specific information about 
              <ulink url="&ubuntu-paidsupport;">paid
              support</ulink> a user will enter the FQDN followed by a path.</para>
      <para>The most common protocol used to transfer Web pages is the Hyper Text Transfer
          Protocol (HTTP). Protocols such as Hyper Text Transfer Protocol over Secure Sockets Layer (HTTPS), and
          File Transfer Protocol (FTP), a protocol for uploading and downloading files, are also
          supported.</para>
      <para>Apache Web Servers are often used in combination with the <application>MySQL</application>
          database engine, the HyperText Preprocessor (<application>PHP</application>), 
          scripting language, and other popular scripting languages such as
              <application>Python</application> and <application>Perl</application>. This
          configuration is termed LAMP (Linux, Apache, MySQL and Perl/Python/PHP) and forms a
          powerful and robust platform for the development and deployment of Web-based
          applications.</para>
<sect2 id="http-installation" status="writing">
  <title>Installation</title>
          <procedure><step>
                  <para>The Apache2 web server is available in Ubuntu
                  Linux. This section explains howto install
                  Apache2 in Ubuntu Linux.</para></step>
          </procedure>
      <variablelist>
          <varlistentry>
              <term>Packages:</term>
              <listitem>
                  <para><application>apache2</application></para>
                  <para><application>apache2-common</application></para>
              </listitem>
          </varlistentry>
          <varlistentry>
              <term>Installation:</term>
              <listitem>
                  <para>At the prompt enter the following command to install
                          <application>apache2</application> and
                          <application>apache2-common</application>:</para>
                  <para>
                      <command>sudo apt-get install apache2 apache2-common</command>
                  </para>
              </listitem>
          </varlistentry>
          
          </variablelist>
      </sect2>
      <sect2 id="http-configuration" status="writing">
        <title>Configuration</title>
          <para>
          Apache is configured by placing directives in plain text
          configuration files. The main configuration file is usually
          called apache2.conf. The location of this file is set at
          compile-time, but may be overridden with the -f  command line
          flag. In addition, other configuration files may be added
          using the Include  directive, and wildcards can be used to
          include many configuration files. Any directive may be placed
          in any of these configuration files. Changes to the main
          configuration files are only recognized by Apache2 when it is
          started or restarted.</para>

          <para>The server also reads a file containing mime document types;
          the filename is set by the TypesConfig directive, and is
          mime.types by default.</para>

          <para>The default Apache2 configuration file is /etc/apache2/apache2.conf.
          You must edit this file to configure the Apache2 server. You can
          configure the port number, document root, modules, log files, 
          virutal hosts, etc.
          </para>
          <para>
              <command>sudo vim /etc/apache2/apache2.conf</command>
          </para>
        <sect3 id="http-basic-settings" status="writing">
          <title>Basic Settings</title>
            <para>
             This section explains Apache2 server essential configuration
             parameters. You must refer <ulink
             url="http://httpd.apache.org/docs/2.0/">Apache2
             Documentation</ulink> for more details.</para>

             <itemizedlist>

             <listitem><para>
             Enter a valid fully qualified domain name that you have the
             right to use in the Server Name text area. This option
             corresponds to the ServerName  directive in apache2.conf.
             The ServerName directive sets the hostname of the Web
             server.
            </para></listitem>

             <listitem><para>Enter the email address of the person who maintains the
             Web server in the Webmaster email address text area. This
             option corresponds to the ServerAdmin  directive in
             apache2.conf. If you configure the server's error pages to
             contain an email address, this email address will be used
             so that users can report a problem by sending email to the
             server's administrator. The default value is
             root@localhost.</para></listitem>

             <listitem><para>Enter the port number of Apache2 server. 
             This option corresponds to the Listen  directive in
             apache2.conf. The default value is 80. 
             </para></listitem>
            </itemizedlist>

            <tip>
            <para>
            If you set the server to listen to a port under 1024, you
            must be root to start it. For port 1024 and above,
            <application>apache2</application> can be started as a
            regular user.
            </para>
            </tip>
        </sect3>
        <sect3 id="default-settings" status="writing">
          <title>Default Settings</title>
            <para>
             This section explains configuration of the Apache2 server
             default settings.  For example, if you add a virtual host, 
             the settings you configure for the virtual host take
             precedence for that virtual host. For a directive not
             defined within the virtual host settings, the default
             value is used.
            </para>

            <itemizedlist>
            <listitem>
            <para>
             The DirectoryIndex is the default page served by the
             server when a user requests an index of a directory by
             specifying a forward slash (/) at the end of the directory
             name.</para>

             <para>For example, when a user requests the page
             http://www.example.com/this_directory/, they are going to
             get either the DirectoryIndex page if it exists, or a
             server-generated directory list. The server will try to
             find one of the files listed in the DirectoryIndex
             directive and will return the first one it finds. If it
             does not find any of these files and if Options Indexes is
             set for that directory, the server will generate and
             return a list, in HTML format, of the subdirectories and
             files in the directory. 
            </para>
            </listitem>

            <listitem>
            <para>
             Use the Error Code section to configure Apache2 Server
             to redirect the client to a local or external URL in the
             event of a problem or error. This option corresponds to
             the ErrorDocument  directive.
            </para>
            </listitem>


            <listitem>
            <para>
             By default, the server writes the transfer log to the file
             /var/log/apache2/access.log. You can configure a custom
             log format. This option corresponds to LogFormat
             directive. The server writes the error log to the
             /var/log/apache2/error.log file. This option corresponds
             to the ErrorLog directive. The log level can be set using
             the LogLevel directive.
            </para>
            </listitem>

            <listitem>
            <para>
            You can configure the Default Directory Options for all
            directories. This option corresponds to Option directive
            within &lt;Directory&gt; directive. You can configure the
            following options:
            </para>
            <itemizedlist spacing="compact">
                <listitem>
                    <para><emphasis role="bold">ExecCGI</emphasis> — Allow
                    execution of CGI scripts. CGI scripts are not
                    executed if this option is not chosen.</para>
                </listitem>
                <listitem>
                    <para><emphasis role="bold">Includes</emphasis> — Allow server-side includes.</para>
                </listitem>
                <listitem>
                    <para><emphasis
                    role="bold">IncludesNOEXEC</emphasis> — Allow server-side includes,
                    but disable the #exec and #include commands in CGI
                    scripts.</para>
                </listitem>
                <listitem>
                    <para>
                    <emphasis role="bold">Indexes</emphasis> — Display a formatted list of the
                    directory's contents, if no DirectoryIndex (such as
                    index.html) exists in the requested directory.
                    </para>
                </listitem>
                <listitem>
                    <para>
                    <emphasis role="bold">Multiview</emphasis> — Support content-negotiated multiviews;
                    this option is disabled by default.
                    </para>
                </listitem>
                <listitem>
                    <para>
                    <emphasis role="bold">SymLinksIfOwnerMatch</emphasis> — Only follow symbolic links
                    if the target file or directory has the same owner
                      as the link.
                    </para>
                </listitem>
            </itemizedlist>

            </listitem>
            </itemizedlist>
        </sect3>
        <sect3 id="virtual-hosts-settings" status="writing">
          <title>Virtual Hosts Settings</title>
            <para>
Virtual hosts allow you to run different servers for different IP addresses, different host names, or different ports on the same machine. For example, you can run the website for http://www.example.com and http://www.anotherexample.com on the same Web server using virtual hosts. This option corresponds to the &lt;VirtualHost&gt; directive for the default virtual host and IP based virtual hosts. It corresponds to the &lt;NameVirtualHost&gt;  directive for a name based virtual host.
</para>

<para>
The directives set for a virtual host only apply to that particular virtual host. If a directive is set server-wide and not defined within the virtual host settings, the default setting is used. For example, you can define a Webmaster email address and not define individual email addresses for each virtual host. 
    </para>
 <para>Edit the Document Root Directory value to the directory that contains the root document (such as index.html) for the virtual host. This option corresponds to the DocumentRoot  directive within the  &lt;VirtualHost&gt; directive. The default DocumentRoot is /var/www.</para>

 <para>The Webmaster email address corresponds to the ServerAdmin  directive within the VirtualHost  directive. This email address is used in the footer of error pages if you choose to show a footer with an email address on the error pages.</para>

        </sect3>
        <sect3 id="server-settings" status="writing">
          <title>Server Settings</title>
            <para>
This section explains howto configure basic server settings.</para>
                    <para><emphasis role="bold">LockFile</emphasis> — The Lock File value corresponds to the LockFile  directive. This directive sets the path to the lockfile used when the server is compiled with either USE_FCNTL_SERIALIZED_ACCEPT or USE_FLOCK_SERIALIZED_ACCEPT. It must be stored on the local disk. It should be left to the default value unless the logs directory is located on an NFS share. If this is the case, the default value should be changed to a location on the local disk and to a directory that is readable only by root. </para>

<para><emphasis role="bold">PidFile</emphasis> - The PID File value corresponds to the PidFile directive. This directive sets the file in which the server records its process ID (pid). This file should only be readable by root. In most cases, it should be left to the default value.</para>

<para><emphasis role="bold">User</emphasis> - The User value corresponds to the User directive. It sets the userid used by the server to answer requests. This user settings determine the server's access. Any files inaccessible to this user will also be inaccessible to your website's visitors. The default for User is www-data.  </para>
            <warning>
            <para>
 Unless you know exactly what you are doing, do not set the User directive to root. Using root as the User will create large security holes for your Web server.  </para>
            </warning>
 <para>The Group value corresponds to the Group  directive. The Group directive is similar to the User directive. Group sets the group under which the server will answer requests. The default group is also www-data.</para>

        </sect3>
        <sect3 id="apache-modules" status="writing">
          <title>Apache Modules</title>
              <para>

              Apache is a modular server. This implies that only the most
              basic functionality is included in the core server. Extended
              features are available through modules which can be loaded
              into Apache. By default, a base set of modules is included in
              the server at compile-time. If the server is compiled to use
              dynamically loaded  modules, then modules can be compiled
              separately, and added at any time using the LoadModule
              directive. Otherwise, Apache must be recompiled to add or
              remove modules. Configuration directives may be conditionally
	      included on the presence of a particular module by enclosing
              them in an &lt;IfModule&gt; block.

              You can install additional Apache2 modules, and use them
              with your web server. You can install Apache2
              modules using the <command>apt-get</command>
              command. For example, to install the Apache2 module
              for MYSQL authentication, you can run the
                following command:</para>
                
                <para>
                  <command>sudo apt-get install apache2 apache2-common</command>
                </para>
                <para>
                Once you install the module, the module will
                be available under
                /etc/apache2/mods-available directory. You can use
              the <command>a2enmod</command> command to
              enable a module. You can use
              the <command>a2dismod</command> command to
              disable a module. Once you enable the module,
              the module will be available under
              the /etc/apache2/mods-enabled directory.
              </para>
        </sect3>
      </sect2>
      <sect2 id="https-configuration" status="writing">
        <title>HTTPS Configuration</title>
          <para>
            HTTPS Configuration para ...
          </para>
        <sect3 id="certificates-and-security" status="writing">
          <title>Certificates and Security</title>
            <para>
              Certificates and Security para ...
            </para>
        </sect3>
        <sect3 id="types-of-certificates" status="writing">
          <title>Types of Certificates</title>
            <para>
              Types of Certificates para ...
            </para>
        </sect3>
        <sect3 id="generating-a-key" status="writing">
          <title>Generating a Key</title>
            <para>
              Generating a Key para ...
            </para>
        </sect3>
        <sect3 id="generating-a-ca" status="writing">
          <title>Generating a Certificate Request</title>
            <para>
              Generating a Certificate Request para ...
            </para>
        </sect3>
        <sect3 id="creating-a-self-signed-certificate" status="writing">
          <title>Creating a Self Signed Certificate</title>
            <para>
              Creating a Self Signed Certificate para ...
            </para>
        </sect3>
        <sect3 id="testing-the-certificate" status="writing">
          <title>Testing the Certificate</title>
            <para>
              Testing the Certificate para ...
            </para>
        </sect3>
        <sect3 id="accessing-the-server" status="writing">
          <title>Accessing the Server</title>
            <para>
              Accessing the Server para ...
            </para>
        </sect3>
      </sect2>
      <sect2 id="http-references" status="writing">
        <title>References</title>
          <para>
          <ulink url="http://httpd.apache.org/docs/2.0/">Apache2
          Documentation</ulink>
          </para>
      </sect2>
    </sect1>
	<sect1 id="squid" status="writing">
		<title>SQUID - Proxy Server</title>
          <para>
            SQUID para ...
          </para>
      <sect2 id="squid-installation" status="writing">
        <title>Installation</title>
          <para>
            Installation para ...
          </para>
      </sect2>
      <sect2 id="squid-configuration" status="writing">
        <title>Configuration</title>
          <para>
            Configuration para ...
          </para>
      </sect2>
    </sect1>
	<sect1 id="version-control-system" status="writing">
		<title>Version Control System</title>
          <para>
Version control is the art of managing changes to information. It has long been a critical tool for programmers, who typically spend their time making small changes to software and then undoing those changes the next day. But the usefulness of version control software extends far beyond the bounds of the software development world. Anywhere you can find people using computers to manage information that changes often, there is room for version control.</para>
<para>
          </para>
      <sect2 id="subversion" status="writing">
        <title>Subversion</title>
          <para>
Subversion is an open source version control system. Using Subversion, you can record the history of source files and documents. It manages files and directories over time. A tree of files is placed into a central repository. The repository is much like an ordinary file server, except that it remembers every change ever made to files and directories.
          </para>
        <sect3 id="subversion-installation" status="writing">
          <title>Installation</title>
            <para>
To access Subversion repository using HTTP protocol, you must install and configure web server. Apache2 is proven to work with Subversion. Please refer HTTP subsection in Apache2 section to install and configure Apache2 web server.  To access Subversion repository using HTTPS protocol, you must install and configure digital certificate in your Apache 2 web server. Please refer HTTPS subsection in Apache2 section to install and configure the digital certificate.
						</para>
						<para>
		To install Subversion, you run:
            </para>
				<para>
	    <command>sudo apt-get install subversion libapache2-svn</command>
			</para>

        </sect3>
        <sect3 id="subversion-configuration" status="writing">
          <title>Server Configuration</title>
            <para>
	This step assumes you have installed above mentioned packages on your system. This section explains how to create Subversion repository and access the project.</para>
			<sect4 id="create-svn-repos" status="writing">
				<title>Create Subversion Repository</title>
<para>The Subversion repository can be created using the following command:</para>

  <para><command>svnadmin create /path/to/repos/project</command></para>
			</sect4>

        </sect3>
        <sect3 id="access-methods" status="writing">
          <title>Access Methods</title>
<para>Subversion repositories can be accessed (checkout) through many different methods-on local disk, or through various network protocols. A repository location, however, is always a URL. The table describes how different URL schemas map to the available access methods.</para>
				<table><title>Access Methods</title>

					<tgroup cols="2">
						<colspec colname="1"/>
						<colspec colname="2"/>
						<thead>
							<row>
								<entry><para>Schema</para></entry>
								<entry><para>Access Method</para></entry>
							</row>
						</thead>
						<tbody>
							<row>
								<entry><para>file:///</para></entry>
								<entry><para>direct repository access (on local disk)</para></entry>
							</row>
							<row>
								<entry><para>http:///</para></entry>
								<entry><para>Access via WebDAV protocol to Subversion-aware Apache2 web server</para></entry>
							</row>
							<row>
								<entry><para>https:///</para></entry>
								<entry><para>Same as http://, but with SSL encryption</para></entry>
							</row>
							<row>
								<entry><para>svn:///</para></entry>
								<entry><para>Access via custom protocol to an svnserve server</para></entry>
							</row>
							<row>
								<entry><para>svn+ssh:///</para></entry>
								<entry><para>Same as svn://, but through an SSH tunnel</para></entry>
							</row>
						</tbody>
					</tgroup>
				</table>

				<para>
In this section, we will see howto configure Subversion for all these access methods. Here, we cover the basics. For more advanced usage details, you are always recommended to refer the <ulink url="http://svnbook.red-bean.com/">svn book</ulink>.
				</para>
			<sect4 id="direct-repos-access" status="writing">
				<title>Direct repository access (file://)</title>
<para> This is the simplest of all access methods. It does not require any Subversion server process to be running. This access method is used to access Subversion from the same machine. The syntax is as follows:</para>

  <para><command>svn co file:///path/to/repos/project</command></para>
  <para>or</para>
	<para><command>svn co file://localhost/path/to/repos/project</command></para>
	<note>
		<para>If you do not specify the hostname, you must use three forward slashes (///). If you specify the hostname, you must use two forward slashes (//).</para>
	</note>
		<para>The repository permission is depend on filesystem permission. If the user has read/write permission, he can checkout/commit the changes to the repository.</para>
			</sect4>
			<sect4 id="access-via-webdav" status="writing">
				<title>Access via WebDAV protocol (http://)</title>
<para> To access the Subversion repository via WebDAV protocol, you must configure your Apache 2 web server. You must add the following snippet in your /etc/apache2/apache2.conf file:</para>

	<programlisting> &lt;Location /svn&gt;
  DAV svn
  SVNPath /path/to/repos
  AuthType Basic
  AuthName "Your repository name"
  AuthUserFile /etc/subversion/passwd
  &lt;LimitExcept GET PROPFIND OPTIONS REPORT&gt;
  Require valid-user
  &lt;/LimitExcept&gt;
  &lt;/Location&gt; </programlisting>
  <para>Next, you must create /etc/subversion/passwd file. This file contains user authentication details. To add an entry, ie.. to add a user, you can run the following command:</para>
	<para><command>htpasswd2 /etc/subversion/passwd user_name</command></para>
	<para>It prompts you to enter the password. Once you enter the password, the user is added. Now, to access the repository you can run the following command:</para>
	<warning>
		<para>
			The password is transmitted as plain text. If you are worried about password snooping, you are advised to use SSL encryption. For details, please refer next section.
		</para>
	</warning>
			</sect4>
			<sect4 id="access-via-webdav-with-ssl" status="writing">
				<title>Access via WebDAV protocol with SSL encryption (https://)</title>
					<para> 
						Accessing Subversion repository via WebDAV protocol with SSL encryption (https://) is similar to http:// except you must install and configure the digital certificate in your Apache2 web server.
					</para>

					<para>
						You can install a digital certificate issued by Signing authority like Verisign. Alternatively, you can install your own self signed certificate.
					</para>
					<para>
						This step assumes you have installed and configured digital certificate in your Apache 2 web server. Now to access Subversion repository please refer the above section! Yeah, the access methods are exactly the same except the protocl. You must use https:// to access the Subversion repository.
					</para>

			</sect4>
			<sect4 id="access-via-custom-protocol" status="writing">
				<title>Access via custom protocol (svn://)</title>
					<para> 
					Once the Subversion repository is created, you can configure the access control. You can edit /path/to/repos/project/conf/svnserve.conf file to configure the access control.  For example, to setup authentication you can uncomment the following lines in the configuration file: </para>
					<programlisting># [general]
# password-db = passwd</programlisting>

					<para>
					fter uncommenting the above lines, you can maintain the user list in passwd file. So, edit the file passwd in the same directory and add new user. The syntax is as follows:
					</para>
					<programlisting>username = password</programlisting>
					<para>
					For more details, please refer the file.
					</para>

					<para>
					Now, to access Subversion via svn:// custom protocol either from the same machine or different machine, you can run svnserver using svnserve command. The syntax is as follows:
					</para>
					<programlisting>$ svnserve -d --foreground -r /path/to/repos
# -d -- daemon mode
# --foreground -- run in foreground (useful for debugging)
# -r -- root of directory to serve

For more usage details, please refer,
$ svnserve --help</programlisting>

					<para>Once you run this command, Subversion starts listening on default port (3690). To access the project repository, you must run the following command: </para>
					<para><command>svn co svn://hostname/project project --username user_name</command></para>
					<para>Based on server configuration, it prompts for password. Once it is authenticated, it checks out the code from Subversion repository.  To synchronize the project repository with the local copy, you can run <command>update</command> sub-command. The syntax is as follows:</para>
					<para><command>cd project_dir ; svn update</command></para>
					<para>For more details about using each Subversion sub-command, you can refer the manual. For example, to learn more about co (checkout) command, please run:</para>
					<para><command>svn co help</command></para>

			</sect4>
			<sect4 id="access-via-custom-protocol-with-ssl" status="writing">
				<title>Access via custom protocol with SSL encryption (svn+ssh://)</title>
					<para> The configuration and server process is same as svn:// method. For details, please refer the above section. This step assumes, you have followed the above step and run Subversion server using svnserve command.</para>

					<para>It is also assumed that the ssh server is running in that machine and it is allowing incoming connections. To confirm, please try to login to that machine using ssh. If you can login, then everything is perfect. If you cannot login, please address it before continuing further.</para>

					<para>svn+ssh:// protocol is used to access Subversion repository using SSL encryption. As you know, the data transfer is encrypted. To access the project repository, you must run the following command: </para>

					<note><para> You must use full path (/path/to/repos/project) to access Subversion repository using this access method. </para></note>
					<para>
					Based on server configuration, it prompts for password. You must enter the password you use to login via ssh. Once it is authenticated, it checks out the code from Subversion repository.
					</para>
			</sect4>
			</sect3>

      </sect2>
      <sect2 id="cvs-server" status="writing">
        <title>CVS Server</title> 
          <para>
            CVS Server para ...
          </para>
        <sect3 id="cvs-installation" status="writing">
          <title>Installation</title>
            <para>
              Installation para ...
            </para>
        </sect3>
        <sect3 id="cvs-configuration" status="writing">
          <title>Configuration</title>
            <para>
              Configuration para ...
            </para>
        </sect3>
      </sect2>
      <sect2 id="version-control-ref" status="writing">
        <title>References</title> 
				<para><ulink url="http://subversion.tigris.org/">Subversion Home Page</ulink></para>
				<para><ulink url="http://svnbook.red-bean.com/">Subversion Book</ulink></para>
      </sect2>
    </sect1>
	<sect1 id="databases" status="writing">
		<title>Databases</title>
          <para>
            Ubuntu Linux provides two Database servers. They are:
            <itemizedlist spacing="compact">
                <listitem>
                    <para><application><trademark>MySQL</trademark></application></para>
                </listitem>
                <listitem>
                    <para><application>PostgreSQL</application></para>
                </listitem>
            </itemizedlist>

            They are available in main repository. This section
            explain how to install and configure these database
            servers on Ubuntu Linux.
          </para>
      <sect2 id="mysql" status="writing">
        <title>MySQL</title>
          <para>
          MySQL is a fast, multi-threaded, multi-user and robust SQL
          database server. MySQL Server is intended for
          mission-critical, heavy-load production systems as well as
          for embedding into mass-deployed software.
          </para>

        <sect3 id="mysql-installation" status="writing">
          <title>Installation</title>
            <para>
            To install MySQL, you can run the following command in the
            command prompt:
            </para>

            <para>
            <command>sudo apt-get install mysql-server mysql-client</command>
            </para>

            <para>
            Once the installation is complete, the MySQL server would be
            started automatically. You can run the following command to
            check whether MySQL server is running:
            </para>

            <para>
            sudo netstat -tap | grep mysql
            </para>

            <para>
            When you run this command, you must see the following line
            or something similar:
            </para>

<programlisting>
tcp        0      0 localhost.localdomain:mysql           *:* LISTEN -
</programlisting>
        </sect3>
        <sect3 id="mysql-configuration" status="writing">
          <title>Configuration</title>
            <para>
            By default, the administrator password is not set. Once you
            install MySQL, first thing you must do is to configure
            MySQL administrator password. To configure MySQL
            administrator password, please run the following commands:
            </para>
            <para>
            <command>sudo mysqladmin -u root password newrootsqlpassword</command>
            </para>
            <para>
            <command>sudo mysqladmin -u root -h localhost password newrootsqlpassword</command>
            </para>

            <para>
            You can edit /etc/mysql/my.cnf file to configure MySQL basic
            settings, log file, port number, etc. Please refer
            /etc/mysql/my.cnf file for more details.
            </para>
        </sect3>
      </sect2>
      <sect2 id="postgresql" status="writing">
        <title>PostgreSQL</title> 
          <para>
          PostgreSQL is an object-relational database system that has
          the features of traditional commercial database systems with
          enhancements to be found in next-generation DBMS systems.
          </para>
        <sect3 id="postgresql-installation" status="writing">
          <title>Installation</title>
            <para>
            To install PostgreSQL, you can run the following command in the
            command prompt:
            </para>

            <para>
            <command>sudo apt-get install postgresql</command>
            </para>

            <para>
            Once the installation is complete, you must configure
            PostgreSQL server based on your needs. The default
            PostgreSQL configuration is viable. You are recommended to
            configure it based on your needs.</para>
            
        </sect3>
        <sect3 id="postgresql-configuration" status="writing">
          <title>Configuration</title>
            <para>By default, the TCP/IP enabled connection is disabled.
            PostgreSQL supports multiple client authentication methods.
            By default, IDENT authentication method is used. You are
            recommended to refer the PostgreSQL Administrator's Guide for
            details. </para>
            
            <para>We assume, you wish to enable TCP/IP connections and
            use MD5 method for client authentication. PostgreSQL configuration files are stored in
            <emphasis role="italics">/etc/postgresql/&lt;version&gt;/main</emphasis>
            directory. For example, if you install PostgreSQL 7.4, the
            configuration files are stored in
            <emphasis role="italics">/etc/postgresql/7.4/main</emphasis> directory.
            </para>
            
            <tip>
            <para>
             To configure <emphasis role="italics">ident</emphasis>
             authentication method, you must add entries to <emphasis
             role="italics">/etc/init.d/postgresql/7.4/main/pg_ident.conf</emphasis>
             file.
            </para>
            </tip>

            <para>To enable TCP/IP connections, you must open
            appropriate configuration file using following command: </para>

            <para> <command>sudo vim
            /etc/postgresql/7.4/main/postgresql.conf</command></para>

            <para>Locate the line <emphasis role="italics">#tcpip_socket =
            false</emphasis> and change it as
            <emphasis role="italics">tcpip_socket =
            true</emphasis>. You may
            also edit all other parameters, if you are sure about what
            you do. For details, refer this configuration file.
            Alternatively, you can also refer PostgreSQL documentation.
            </para>

            <para>By default, the user credentials is not set for
            <emphasis role="italics">MD5</emphasis> client
            authentication method. So, we can first configure the PostgreSQL server to use
            <emphasis role="italics">trust</emphasis> client
            authentication method, connect to the database,
            configure the password and revert the configuration back to use
            <emphasis role="italics">MD5</emphasis> client authentication method.
            To enable <emphasis role="italics">trust</emphasis> client
            authentication method, you must open the file using following command: </para>

            <para> <command>sudo vim
            /etc/postgresql/7.4/main/pg_hba.conf</command></para>

            <para>Comment all the existing lines using
            <emphasis role="italics">ident</emphasis> and
            <emphasis role="italics">MD5</emphasis>
            client authentication methods and add the following
            line:</para>
<programlisting>
local   all         postgres                          trust sameuser
</programlisting>

            <para>Once you add the above line, you can save the
            configuration file and exit. Run the following command to
            start PostgreSQL server:
            </para>
            <para><command>sudo /etc/init.d/postgresql
            start</command></para>

            <para>Once PostgreSQL server is successfully started, you
            can run the following command to connect to default
            PostgreSQL template database</para>

            <para><command>psql -U postgres -d
            template1</command></para>

            <para>The above command connects to PostgreSQL
            database <emphasis role="italics">template1</emphasis> as user
            <emphasis role="italics">postgres</emphasis>. Once you connect to PostgreSQL
            server, you will be in the SQL prompt. You can run the
            following SQL command at your SQL prompt to configure the
            password for the user <emphasis
            role="italics">postgres</emphasis>.</para>

            <para><command>template1=# ALTER USER postgres with
            encrypted password 'your_password';</command></para>

            <para>Once you configure the password, you can edit
            <emphasis
            role="italics">/etc/postgresql/7.4/main/pg_hba.conf</emphasis> to use
            <emphasis role="italics">MD5</emphasis> authentication
            method.  To use <emphasis role="italics">MD5</emphasis>
            authentication method, you can open the configuration file
            using following command:</para>

            <para> <command>sudo vim
            /etc/postgresql/7.4/main/pg_hba.conf</command></para>

            <para>Comment the recently added <emphasis
            role="italics">trust</emphasis> line and add the following
            line: </para>

<programlisting>
local   all         postgres                          md5 sameuser
</programlisting>
            <warning>
            <para>
             By no means, the above configuration is complete. You are
             recommended to refer PostgreSQL Administrator's Guide to
             configure more parameters.
            </para>
            </warning>
        </sect3>
      </sect2>
    </sect1>
	<sect1 id="email-services" status="writing">
		<title>Email Services</title>
          <para>
            Email Services para ...
          </para>
      <sect2 id="postfix" status="writing">
        <title>PostFix</title>
          <para>
            PostFix is a default email server in Ubuntu Linux. It
            attempts to be fast, easy to administer and secure. It is
            compatible with sendmail email server.
          </para>
        <sect3 id="postfix-installation" status="writing">
          <title>Installation</title>
            <para>
              Installation para ...
            </para>
        </sect3>
        <sect3 id="postfix-configuration" status="writing">
          <title>Configuration</title>
            <para>
              Configuration para ...
            </para>
        </sect3>
      </sect2>
      <sect2 id="courier-imap-server" status="writing">
        <title>Courier IMAP Server</title> 
          <para>
            Courier IMAP Server para ...
          </para>
        <sect3 id="courier-installation" status="writing">
          <title>Installation</title>
            <para>
              Installation para ...
            </para>
        </sect3>
        <sect3 id="courier-configuration" status="writing">
          <title>Configuration</title>
            <para>
              Configuration para ...
            </para>
        </sect3>
      </sect2>
      <sect2 id="mailman" status="writing">
        <title>Mailman</title> 
          <para>
            Mailman para ...
          </para>
        <sect3 id="mailman-installation" status="writing">
          <title>Installation</title>
            <para>
              Installation para ...
            </para>
        </sect3>
        <sect3 id="mailman-configuration" status="writing">
          <title>Configuration</title>
            <para>
              Configuration para ...
            </para>
        </sect3>
      </sect2>
      <sect2 id="newsgroups" status="writing">
        <title>Newsgroups (NNTP)</title> 
          <para>
            Newsgroups para ...
          </para>
        <sect3 id="nntp-installation" status="writing">
          <title>Installation</title>
            <para>
              Installation para ...
            </para>
        </sect3>
        <sect3 id="nntp-configuration" status="writing">
          <title>Configuration</title>
            <para>
              Configuration para ...
            </para>
        </sect3>
      </sect2>
    </sect1>
	</chapter>
