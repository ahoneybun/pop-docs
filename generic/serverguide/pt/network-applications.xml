<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE chapter PUBLIC "-//OASIS//DTD DocBook XML V4.3//EN" "http://www.oasis-open.org/docbook/xml/4.3/docbookx.dtd" [
<!ENTITY % globalent SYSTEM "../../../libs/global.ent">
<!-- NAMES --><!ENTITY canonical-name "Canonical Ltd.">
<!ENTITY project-name "Ubuntu Documentation Project">
<!ENTITY ubuntu "<phrase>Ubuntu</phrase>">
<!-- VERSIONS --><!ENTITY distro-version "Dapper Drake">
<!ENTITY distro-rev "6.06 LTS">
<!ENTITY distro-release-date "June 2006">
<!ENTITY linux-kernel-version "2.6.15">
<!ENTITY gcc-version "4.0.3">
<!ENTITY glibc-version "2.3.6">
<!ENTITY python-version "2.4.3">
<!-- AUTHORS --><!ENTITY author-ubuntu-documentation-project SYSTEM "../common/authors/ubuntu-documentation-project.xml">
<!ENTITY author-christoph-haas SYSTEM "../common/authors/christoph-haas.xml">
<!ENTITY author-alexander-poslavsky SYSTEM "../common/authors/alexander-poslavsky.xml">
<!ENTITY author-alan-hood SYSTEM "../common/authors/alan-hood.xml">
<!ENTITY author-johnathon-hornbeck SYSTEM "../common/authors/johnathon-hornbeck.xml">
<!ENTITY author-nick-loeve SYSTEM "../common/authors/nick-loeve.xml">
<!ENTITY author-gordon-ingram SYSTEM "../common/authors/gordon-ingram.xml">
<!ENTITY author-sean-wheller SYSTEM "../common/authors/sean-wheller.xml">
<!ENTITY author-enrico-zini SYSTEM "../common/authors/enrico-zini.xml">
<!ENTITY author-kevin-muligan SYSTEM "../common/authors/kevin-muligan.xml">
<!ENTITY author-ari-torhamo SYSTEM "../common/authors/ari-torhamo.xml">
<!ENTITY author-jeff-schering SYSTEM "../common/authors/jeff-schering.xml">
<!ENTITY author-corey-burger SYSTEM "../common/authors/corey-burger.xml">
<!ENTITY author-niel-tallim SYSTEM "../common/authors/niel-tallim.xml">
<!ENTITY author-henry-meyerding SYSTEM "../common/authors/henry-meyerding.xml">
<!ENTITY author-matthew-east SYSTEM "../common/authors/matthew-east.xml">
<!ENTITY author-jerome-gotangco SYSTEM "../common/authors/jerome-gotangco.xml">
<!ENTITY author-johnathan-jesse SYSTEM "../common/authors/johnathan-jesse.xml">
<!ENTITY author-greg-taylor SYSTEM "../common/authors/greg-taylor.xml">
<!ENTITY author-troy-williams SYSTEM "../common/authors/troy-williams.xml">
<!ENTITY author-matt-galvin SYSTEM "../common/authors/matt-galvin.xml">
<!ENTITY author-robert-stoffers SYSTEM "../common/authors/robert-stoffers.xml">
<!ENTITY author-jordan-mantha SYSTEM "../common/authors/jordan-mantha.xml">
<!ENTITY author-venkat-raghavan SYSTEM "../common/authors/venkat-raghavan.xml">
<!ENTITY author-brian-burger SYSTEM "../common/authors/brian-burger.xml">
<!ENTITY author-rocco-stanzione SYSTEM "../common/authors/rocco-stanzione.xml">
<!ENTITY glossary SYSTEM "../common/C/glossary.xml">
<!-- LEGAL URLs --><!ENTITY gpl-url '<ulink url="http://www.gnu.org/licenses/gpl.html">GNU General Public License</ulink>'>
<!ENTITY cc "http://creativecommons.org/">
<!ENTITY cc-attrib '<ulink url="http://creativecommons.org/licenses/by-sa/2.0/">Attribution-ShareAlike 2.0</ulink>'>
<!ENTITY cc-fulldeed-url "http://creativecommons.org/licenses/by-sa/2.0/legalcode/">
<!ENTITY fdl-url '<ulink url="http://www.gnu.org/copyleft/fdl.html">GNU Free Documentation License</ulink>'>
<!ENTITY cc-disclaimer-url "http://creativecommons.org/licenses/disclaimer-popup?lang=en">
<!-- CANONICAL URL RESOURCES --><!ENTITY canonical-url "http://www.canonical.com">
<!-- UBUNTU URL RESOURCES --><!ENTITY ubuntu-packages "http://packages.ubuntu.com">
<!ENTITY ubuntu-dpkgfile "ubuntu5.10.tar">
<!ENTITY ubuntu-web "http://www.ubuntu.com">
<!ENTITY ubuntu-main "http://www.ubuntu.com">
<!ENTITY ubuntu-download "http://www.ubuntu.com/download">
<!ENTITY ubuntu-forums "http://www.ubuntu.com/community/forums">
<!ENTITY ubuntu-components "http://www.ubuntu.com/ubuntu/components">
<!ENTITY ubuntu-lists "http://lists.ubuntu.com">
<!ENTITY ubuntu-wiki "http://wiki.ubuntu.com">
<!ENTITY ubuntu-irc "irc.freenode.net channel #ubuntu">
<!ENTITY ubuntu-bugzilla "https://launchpad.net/distros/ubuntu/+bugs">
<!ENTITY ubuntu-doc-bugs "https://launchpad.net/products/ubuntu-doc/+bugs">
<!ENTITY ubuntu-paidsupport "http://www.ubuntu.com/support/supportoptions/paidsupport">
<!ENTITY ubuntu-freesupport "http://www.ubuntu.com/support/supportoptions/freesupport">
<!ENTITY ubuntu-comments "http://www.ubuntuforums.org/showthread.php?p=21787">
<!ENTITY ubuntu-documentation "http://help.ubuntu.com">
<!ENTITY ubuntu-documentation-repos "https://docteam.ubuntu.com/repos/trunk">
<!ENTITY ubuntu-doc-team "https://wiki.ubuntu.com/DocumentationTeam">
<!ENTITY ubuntu-doc-list "http://lists.ubuntu.com/mailman/listinfo/ubuntu-doc">
<!ENTITY ubuntu-shipit "http://shipit.ubuntu.com">
<!ENTITY ubuntu-launchpad "https://launchpad.ubuntu.com">
<!ENTITY ubuntu-rosetta "https://launchpad.ubuntu.com/rosetta">
<!ENTITY ubuntu-planet "http://planet.ubuntu.com">
<!ENTITY ubuntu-philosophy "http://www.ubuntu.com/ubuntu/philosophy">
<!ENTITY ubuntu-participate "http://www.ubuntu.com/community/participate/">
<!-- UBUNTU WIKI RESOURCES --><!ENTITY wiki-UserDocumentation "https://wiki.ubuntu.com/UserDocumentation">
<!ENTITY restricted-formats "https://wiki.ubuntu.com/RestrictedFormats">
<!ENTITY wiki-RestrictedFormats "https://wiki.ubuntu.com/RestrictedFormats">
<!ENTITY wiki-XChatHowto "https://wiki.ubuntu.com/XChatHowto">
<!ENTITY wiki-RootSudo "https://wiki.ubuntu.com/RootSudo">
<!ENTITY wiki-HowToGetHelp "https://wiki.ubuntu.com/HowToGetHelp">
<!ENTITY transcode "https://wiki.ubuntu.com/DVDRippingandEncoding">
<!ENTITY wiki-Wine "https://wiki.ubuntu.com/Wine">
<!ENTITY wiki-Cedega "https://wiki.ubuntu.com/Cedega">
<!ENTITY wiki-Nano "https://wiki.ubuntu.com/NanoHowto">
<!ENTITY wiki-locoteams "https://wiki.ubuntu.com/LoCoTeamList">
<!ENTITY wiki-BasicCommands "https://wiki.ubuntu.com/BasicCommands">
<!ENTITY wiki-filepermissions "https://wiki.ubuntu.com/FilePermissions">
<!-- KUBUNTU URL RESOURCES --><!ENTITY kubuntu-web "http://www.kubuntu.org">
<!ENTITY kubuntu-main "http://www.kubuntu.org">
<!ENTITY kubuntu-download "http://releases.ubuntu.com/kubuntu/">
<!ENTITY kubuntu-packages "http://packages.ubuntu.com/breezy/">
<!ENTITY kubuntu-cdpackages-nodefault "http://people.ubuntu.com/~cjwatson/seeds/kubuntu-breezy/ship">
<!ENTITY kubuntu-lists "http://lists.ubuntu.com/archives/kubuntu-users/">
<!ENTITY kubuntu-lists-users "http://lists.ubuntu.com/mailman/listinfo/kubuntu-users/">
<!ENTITY kubuntu-lists-devel "http://lists.ubuntu.com/mailman/listinfo/kubuntu-devel/">
<!ENTITY kubuntu-mirrors "http://distrowatch.com/kubuntu">
<!ENTITY kubuntu-forums "http://ubuntuforums.org/forumdisplay.php?f=68">
<!ENTITY kubuntu-forums2 "http://kubuntuforums.net">
<!ENTITY kubuntu-wiki "http://www.ubuntu.com/wiki/Kubuntu">
<!ENTITY kubuntu-irc "irc.freenode.net channel kubuntu">
<!ENTITY kubuntu-documentation-site "http://www.kubuntu.org/documentation.php">
<!ENTITY kubuntu-wiki-UserDocumentation "https://wiki.kubuntu.com/UserDocumentation">
<!-- XUBUNTU URL RESOURCES --><!ENTITY xubuntu-irc "irc.freenode.net channel xubuntu">
<!-- DEBIAN RESOURCES --><!ENTITY debian-apt "http://www.debian.org/doc/user-manuals#apt-howto">
<!-- EXTERNAL URL RESOURCES --><!ENTITY linmodem "http://www.linmodems.org/">
<!ENTITY gnome "http://www.gnome.org/">
<!ENTITY linuxorg "http://www.linux.org/">
<!ENTITY ooo "http://www.openoffice.org/">
<!ENTITY kde "http://www.kde.org/">
<!ENTITY lugww "http://lugww.counter.li.org/">
<!ENTITY ubuntu-watch "http://distrowatch.com/ubuntu/">
<!ENTITY realplayer-download "http://www.real.com/linux/">
<!ENTITY nvu-download "http://www.nvu.com/download.html">
<!ENTITY sunjava-download "http://java.sun.com/j2se/1.5.0/download.jsp">
<!ENTITY xorg "http://www.x.org">
<!ENTITY dyndns "http://www.dyndns.org">
<!ENTITY shoutcast "http://www.shoutcast.com/">
<!ENTITY freedomtoaster "http://www.freedomtoaster.org/">
<!-- ubuntu-screenshots TODO --><!ENTITY kubuntu-screenshots "http://shots.osdir.com/slideshows/slideshow.php?release=306&amp;slide=1">
<!ENTITY mozilla "http://www.mozilla.org/">
<!ENTITY mozilla-firefox "http://www.mozilla.org/products/firefox/">
<!ENTITY gnu "http://www.gnu.org/">
<!ENTITY gnu-philosophy "http://www.gnu.org/philosophy/">
<!ENTITY win4lin "http://www.win4lin.com">
<!ENTITY codeweavers "http://www.codeweavers.com">
<!ENTITY kernel "http://www.kernel.org">
<!ENTITY google "http://www.google.com">
<!ENTITY kdelook " http://www.kde-look.org">
<!ENTITY lulu-store "http://www.lulu.com/ubuntu-doc">
<!-- this entity controls the url for addons--><!ENTITY java-download "http://java.sun.com/j2se/1.5.0/download.jsp">
<!ENTITY skype-deb "skype_1.2.0.17-1_i386.deb">
<!ENTITY skype-download "http://www.skype.com/go/getskype-linux-deb">
<!ENTITY scanmodem-gz "scanModem.gz">
<!ENTITY scanmodem-url "http://linmodems.technion.ac.il/packages/scanModem.gz">
<!ENTITY ext2fs-url "http://www.fs-driver.org/index.html">
<!ENTITY mvb-tar "mvb_1.6.tgz">
<!ENTITY mvb-url "http://www.xscd.com/pub/mvb/&mvb-tar;">
<!-- TLDP --><!ENTITY ldp-pre-install-check "http://tldp.org/HOWTO/Pre-Installation-Checklist/">
<!-- LANGUAGES (sorted by two letter code)--><!ENTITY Afar "aa">
<!ENTITY Abkhazian "ab">
<!ENTITY Afrikaans "af">
<!ENTITY Amharic "af">
<!ENTITY Arabic "ar">
<!ENTITY Assamese "as">
<!ENTITY Aymara "ay">
<!ENTITY Azerbaijani "az">
<!ENTITY Bashkir "ba">
<!ENTITY Byelorussian "be">
<!ENTITY Bulgarian "bg">
<!ENTITY Bihari "bh">
<!ENTITY Bislama "bi">
<!ENTITY Bangla "bn">
<!ENTITY Bengali "bn">
<!ENTITY Tibetan "bo">
<!ENTITY Breton "br">
<!ENTITY Catalan "ca">
<!ENTITY Corsican "co">
<!ENTITY Czech "cs">
<!ENTITY Welsh "cy">
<!ENTITY Danish "da">
<!ENTITY German "de">
<!ENTITY Bhutani "dz">
<!ENTITY Greek "el">
<!-- <!ENTITY EnglishAmerican 'en'> --><!ENTITY EnglishAmerican "C">
<!ENTITY Esperanto "eo">
<!ENTITY Spanish "es">
<!ENTITY Estonian "et">
<!ENTITY Basque "eu">
<!ENTITY Persian "fa">
<!ENTITY Finnish "fi">
<!ENTITY Fiji "fj">
<!ENTITY Faeroese "fo">
<!ENTITY French "fr">
<!ENTITY Frisian "fy">
<!ENTITY Irish "ga">
<!ENTITY Gaelic "gd">
<!ENTITY ScotsGaelic "gd">
<!ENTITY Galician "gl">
<!ENTITY Guarani "gn">
<!ENTITY Gujarati "gu">
<!ENTITY Hausa "ha">
<!ENTITY Hindi "hi">
<!ENTITY Croatian "hr">
<!ENTITY Hungarian "hu">
<!ENTITY Armenian "hy">
<!ENTITY Interlingua "ia">
<!ENTITY Interlingue "ie">
<!ENTITY Inupiak "ik">
<!ENTITY Indonesian "in">
<!ENTITY Icelandic "is">
<!ENTITY Italian "it">
<!ENTITY Hebrew "iw">
<!ENTITY Japanese "ja">
<!ENTITY Yiddish "ji">
<!ENTITY Javanese "jw">
<!ENTITY Georgian "ka">
<!ENTITY Kazakh "kk">
<!ENTITY Greenlandic "kl">
<!ENTITY Cambodian "km">
<!ENTITY Kannada "kn">
<!ENTITY Korean "ko">
<!ENTITY Kashmiri "ks">
<!ENTITY Kurdish "ku">
<!ENTITY Kirghiz "ky">
<!ENTITY Latin "la">
<!ENTITY Lingala "ln">
<!ENTITY Laothian "lo">
<!ENTITY Lithuanian "lt">
<!ENTITY Latvian "lv">
<!ENTITY Lettish "lv">
<!ENTITY Malagasy "mg">
<!ENTITY Maori "mi">
<!ENTITY Macedonian "mk">
<!ENTITY Malayalam "ml">
<!ENTITY Mongolian "mn">
<!ENTITY Moldavian "mo">
<!ENTITY Marathi "mr">
<!ENTITY Malay "ms">
<!ENTITY Maltese "mt">
<!ENTITY Burmese "my">
<!ENTITY Nauru "na">
<!ENTITY Nepali "ne">
<!ENTITY Dutch "nl">
<!ENTITY Norwegian "no">
<!ENTITY Occitan "oc">
<!ENTITY Afan "om">
<!ENTITY Oromo "om">
<!ENTITY Oriya "or">
<!ENTITY Punjabi "pa">
<!ENTITY Polish "pl">
<!ENTITY Pushto "ps">
<!ENTITY Pashto "ps">
<!ENTITY Portuguese "pt">
<!ENTITY Quechua "qu">
<!ENTITY Rhaeto-Romance "rm">
<!ENTITY Kirundi "rn">
<!ENTITY Romanian "ro">
<!ENTITY Russian "ru">
<!ENTITY Kinyarwanda "rw">
<!ENTITY Sanskrit "sa">
<!ENTITY Sindhi "sd">
<!ENTITY Sangro "sg">
<!ENTITY Serbo-Croatian "sh">
<!ENTITY Singhalese "si">
<!ENTITY Slovak "sk">
<!ENTITY Slovenian "sl">
<!ENTITY Samoan "sm">
<!ENTITY Shona "sn">
<!ENTITY Somali "so">
<!ENTITY Albanian "sq">
<!ENTITY Serbian "sr">
<!ENTITY Siswati "ss">
<!ENTITY Sesotho "st">
<!ENTITY Sudanese "su">
<!ENTITY Swedish "sv">
<!ENTITY Swahili "sw">
<!ENTITY Tamil "ta">
<!ENTITY Tegulu "te">
<!ENTITY Tajik "tg">
<!ENTITY Thai "th">
<!ENTITY Tigrinya "ti">
<!ENTITY Turkmen "tk">
<!ENTITY Tagalog "tl">
<!ENTITY Setswana "tn">
<!ENTITY Tonga "to">
<!ENTITY Turkish "tr">
<!ENTITY Tsonga "ts">
<!ENTITY Tatar "tt">
<!ENTITY Twi "tw">
<!ENTITY Ukrainian "uk">
<!ENTITY Urdu "ur">
<!ENTITY Uzbek "uz">
<!ENTITY Vietnamese "vi">
<!ENTITY Volapuk "vo">
<!ENTITY Wolof "wo">
<!ENTITY Xhosa "xh">
<!ENTITY Yoruba "yo">
<!ENTITY Chinese "zh">
<!ENTITY Zulu "zu">
<!ENTITY % genericent SYSTEM "../../libs/generic.ent">
<!ENTITY sg-title "Server Guide">
<!ENTITY secguide-title "Security Guide">
<!ENTITY installguide-rev "0.1">
<!ENTITY % cdo-C SYSTEM "../../../libs/cdo-C.ent">
<!-- COMMON DOC OBJECTS --><!ENTITY copyright SYSTEM "../common/C/copyright.xml">
<!ENTITY conventions SYSTEM "../common/C/conventions.xml">
<!ENTITY feedback SYSTEM "../common/C/feedback.xml">
<!ENTITY publisher SYSTEM "../common/C/publisher.xml">
<!ENTITY legalnotice SYSTEM "../common/C/legalnotice.xml">
<!ENTITY disclaimer SYSTEM "../common/C/disclaimer.xml">
<!ENTITY inline-ubuntu-icon SYSTEM "../common/C/inlinemediaobject-ubuntu-icon.xml">
<!ENTITY inline-ubuntu-icon-header SYSTEM "../common/C/inlinemediaobject-ubuntu-icon-header.xml">
<!ENTITY relative-ubuntu-icon SYSTEM "../common/C/mediaobject-relative-ubuntu-icon.xml">
<!ENTITY ubuntu-icon SYSTEM "../common/C/mediaobject-ubuntu-icon.xml">
<!ENTITY gpl SYSTEM "../common/C/gpl.xml">
<!ENTITY fdl SYSTEM "../common/C/fdl.xml">
<!ENTITY cc-by-sa SYSTEM "../common/C/ccbysa.xml">
<!ENTITY % gnome-menus-C SYSTEM "../../../ubuntu/libs/gnome-menus-C.ent">
<!-- MENUS --><!-- Please keep entries alphabetical, it makes them much easier to find & use --><!ENTITY about-me SYSTEM "../menus/C/about-me.xml">
<!ENTITY accessories SYSTEM "../menus/C/accessories.xml">
<!ENTITY acro-read SYSTEM "../menus/C/acro-read.xml">
<!ENTITY administration SYSTEM "../menus/C/administration.xml">
<!ENTITY amule SYSTEM "../menus/C/amule.xml">
<!ENTITY archive-man SYSTEM "../menus/C/archive-man.xml">
<!ENTITY assistive-technology-preferences SYSTEM "../menus/C/assistive-technology-preferences.xml">
<!ENTITY azureus SYSTEM "../menus/C/azureus.xml">
<!ENTITY blender3d SYSTEM "../menus/C/blender3d.xml">
<!ENTITY boot SYSTEM "../menus/C/boot.xml">
<!ENTITY calculator SYSTEM "../menus/C/calculator.xml">
<!ENTITY character-map SYSTEM "../menus/C/character-map.xml">
<!ENTITY desktop-background SYSTEM "../menus/C/desktop-background.xml">
<!ENTITY desktop-preferences SYSTEM "../menus/C/desktop-preferences.xml">
<!ENTITY device-manager SYSTEM "../menus/C/device-manager.xml">
<!ENTITY dictionary SYSTEM "../menus/C/dictionary.xml">
<!ENTITY disks SYSTEM "../menus/C/disks.xml">
<!ENTITY downloader-x SYSTEM "../menus/C/downloader-x.xml">
<!ENTITY file-management SYSTEM "../menus/C/file-management.xml">
<!ENTITY firefox SYSTEM "../menus/C/firefox.xml">
<!ENTITY firestarter-firewall-tool SYSTEM "../menus/C/firestarter-firewall-tool.xml">
<!ENTITY font SYSTEM "../menus/C/font.xml">
<!ENTITY gaim SYSTEM "../menus/C/gaim.xml">
<!ENTITY games SYSTEM "../menus/C/games.xml">
<!ENTITY gftp SYSTEM "../menus/C/gftp.xml">
<!ENTITY gimp SYSTEM "../menus/C/gimp.xml">
<!ENTITY gnome-app-install SYSTEM "../menus/C/gnomeappinstall.xml">
<!ENTITY gnome-config-editor SYSTEM "../menus/C/gnome-config-editor.xml">
<!ENTITY gparted SYSTEM "../menus/C/gparted.xml">
<!ENTITY graphics SYSTEM "../menus/C/graphics.xml">
<!ENTITY gthumb SYSTEM "../menus/C/gthumb.xml">
<!ENTITY home-folder SYSTEM "../menus/C/home-folder.xml">
<!ENTITY inkscape SYSTEM "../menus/C/inkscape.xml">
<!ENTITY internet SYSTEM "../menus/C/internet.xml">
<!ENTITY keyboard SYSTEM "../menus/C/keyboard.xml">
<!ENTITY keyboard-shortcuts SYSTEM "../menus/C/keyboard-shortcuts.xml">
<!ENTITY limewire SYSTEM "../menus/C/limewire.xml">
<!ENTITY login-screen-setup SYSTEM "../menus/C/login-screen-setup.xml">
<!ENTITY logout SYSTEM "../menus/C/logout.xml">
<!ENTITY menu-editor SYSTEM "../menus/C/menu-editor.xml">
<!ENTITY menus-and-toolbars SYSTEM "../menus/C/menus-and-toolbars.xml">
<!ENTITY mouse SYSTEM "../menus/C/mouse.xml">
<!ENTITY multimedia-systems-selector SYSTEM "../menus/C/multimedia-systems-selector.xml">
<!ENTITY network-proxy SYSTEM "../menus/C/network-proxy.xml">
<!ENTITY networking SYSTEM "../menus/C/networking.xml">
<!ENTITY nvu SYSTEM "../menus/C/nvu.xml">
<!ENTITY open-office SYSTEM "../menus/C/open-office.xml">
<!ENTITY palmos-devices SYSTEM "../menus/C/palmos-devices.xml">
<!ENTITY preferred-applications SYSTEM "../menus/C/preferred-applications.xml">
<!ENTITY printing SYSTEM "../menus/C/printing.xml">
<!ENTITY qtparted SYSTEM "../menus/C/qtparted.xml">
<!ENTITY remote-desktop SYSTEM "../menus/C/remote-desktop.xml">
<!ENTITY removable-drives-and-media SYSTEM "../menus/C/removable-drives-and-media.xml">
<!ENTITY realplayer SYSTEM "../menus/C/realplayer.xml">
<!ENTITY rhythmbox SYSTEM "../menus/C/rhythmbox.xml">
<!ENTITY route-planner SYSTEM "../menus/C/route-planner.xml">
<!ENTITY screen-resolution SYSTEM "../menus/C/screen-resolution.xml">
<!ENTITY screensaver SYSTEM "../menus/C/screensaver.xml">
<!ENTITY scribus SYSTEM "../menus/C/scribus.xml">
<!ENTITY services SYSTEM "../menus/C/services.xml">
<!ENTITY sessions SYSTEM "../menus/C/sessions.xml">
<!ENTITY shared-folders SYSTEM "../menus/C/shared-folders.xml">
<!ENTITY skype SYSTEM "../menus/C/skype.xml">
<!ENTITY software-properties SYSTEM "../menus/C/software-properties.xml">
<!ENTITY sound SYSTEM "../menus/C/sound.xml">
<!ENTITY soundandvideo SYSTEM "../menus/C/soundandvideo.xml">
<!ENTITY synaptic SYSTEM "../menus/C/synaptic.xml">
<!ENTITY systemtools SYSTEM "../menus/C/systemtools.xml">
<!ENTITY terminal SYSTEM "../menus/C/terminal.xml">
<!ENTITY text-editor SYSTEM "../menus/C/text-editor.xml">
<!ENTITY theme SYSTEM "../menus/C/theme.xml">
<!ENTITY time-date SYSTEM "../menus/C/time-date.xml">
<!ENTITY totem SYSTEM "../menus/C/totem.xml">
<!ENTITY ubuntu-update-manager SYSTEM "../menus/C/ubuntu-update-manager.xml">
<!ENTITY users SYSTEM "../menus/C/users.xml">
<!ENTITY users-groups SYSTEM "../menus/C/users-groups.xml">
<!ENTITY windows SYSTEM "../menus/C/windows.xml">
<!ENTITY xchat-gnome SYSTEM "../menus/C/xchat-gnome.xml">
<!ENTITY xine SYSTEM "../menus/C/xine.xml">
<!ENTITY xmms SYSTEM "../menus/C/xmms.xml">
<!ENTITY % xinclude SYSTEM "../../../libs/xinclude.mod">
<!ELEMENT xi:include (xi:fallback)?>
<!ATTLIST xi:include xmlns:xi CDATA #FIXED "http://www.w3.org/2001/XInclude">
<!ATTLIST xi:include href CDATA #REQUIRED>
<!ATTLIST xi:include parse (xml | text) "xml">
<!ATTLIST xi:include xpointer CDATA #IMPLIED>
<!ATTLIST xi:include encoding CDATA #IMPLIED>
<!ATTLIST xi:include accept CDATA #IMPLIED>
<!ATTLIST xi:include accept-charset CDATA #IMPLIED>
<!ATTLIST xi:include accept-language CDATA #IMPLIED>
<!ELEMENT xi:fallback ANY>
<!ATTLIST xi:fallback xmlns:xi CDATA #FIXED "http://www.w3.org/2001/XInclude">
<!ENTITY % local.preface.class "| xi:include">
<!ENTITY % local.part.class "| xi:include">
<!ENTITY % local.chapter.class "| xi:include">
<!ENTITY % local.divcomponent.mix "| xi:include">
<!ENTITY % local.para.char.mix "| xi:include">
<!ENTITY % local.info.class "| xi:include">
<!ENTITY % local.common.attrib "xmlns:xi            CDATA       #FIXED       'http://www.w3.org/2001/XInclude'">
<!ENTITY language "&EnglishAmerican;">
]>
<chapter id="networking" status="complete">
	<title>Rede</title>
  <para>Uma rede consiste em dois ou mais dispositivos, tais como computadores, impressoras e equipamento relacionado ligados por cablagem ou sem fios com a finalidade de partilhar e distribuir informação entre os dispositivos ligados.</para>
  <para>Esta secção do Guia do Servidor Ubuntu fornece informação geral e específica sobre redes, incluindo uma apresentação de conceitos de redes e uma discussão detalhada dos protocolos de rede e aplicações de servidor mais populares.</para>
	<sect1 id="network-configuration" status="complete">
		<title>Configuração de Rede</title>
          <para>O Ubuntu vem com alguns utilitários em ambiente gráfico para configuração de dispositivos de rede.  Este documento está orientado para administradores de servidores, e focar-se-á na gestão da rede a partir da linha de comandos.</para>
      <sect2 id="ethernet" status="complete">
        <title>Ethernet</title> 
          <para>A maioria da configuração dos dispositivos ethernet está centralizada num único ficheiro, <filename>/etc/network/interfaces</filename>. Se não tiver dispositivos ethernet, apenas a interface loopback aparecerá neste ficheiro, de forma semelhante a esta: <screen># Este ficheiro descreve os interfaces de rede disponíveis no seu sistema
# e como os activar. Para mais informação veja o manual de interfaces(5).

# A interface de rede loopback
auto lo
iface lo inet loopback
address 127.0.0.1
netmask 255.0.0.0</screen> Se tiver apenas um dispositivo ethernet, eth0, que obtém a sua configuração de um servidor DHCP, e que deva ser activado automaticamente no arranque do sistema, são necessárias apenas duas linhas adicionais: <screen>auto eth0
iface eth0 inet dhcp</screen> A primeira linha especifica que que o dispositivo eth0 deve  ser automaticamente activado no arranque. A segunda linha significa que a interface (<quote>iface</quote>) eth0 deve ter um endereço IPv4 (substitua <quote>inet</quote> por <quote>inet6</quote> para um dispositivo IPv6) e que deve obter a sua configuração automaticamente a partir de DHCP. Assumindo que a sua rede e o servidor DHCP estão correctamente configurados, esta máquina não deve necessitar de configuração adicional para funcionar. O servidor DHCP fornecerá a porta de ligação (gateway) por omissão (implementado através do comando <application>route</application>), o endereço IP do dispositivo (implementado através do comando <application>ifconfig</application>, e os servidores de DNS utilizados na rede (implementado no ficheiro <filename>/etc/resolv.conf</filename>).</para>
		<para>Para configurar o seu dispositivo ethernet com um endereço IP fixo e uma configuração personalizada, algumas informações serão necessárias. Suponha que pretende atribuir o endereço IP 192.168.0.2 ao dispositivo eth1, com a máscara de rede habitual 255.255.255.0. A sua porta de ligação por omissão é 192.168.0.1 .  Deverá introduzir o seguinte no ficheiro <filename>/etc/network/interfaces</filename>: <screen>iface eth1 inet static
	address 192.168.0.2
	netmask 255.255.255.0
	gateway 192.168.0.1</screen> Neste caso necessita especificar os servidores de DNS manualmente em <filename>/etc/resolv.conf</filename>, que deverá ficar semelhante a isto: <screen>search mydomain.com
nameserver 192.168.0.1
nameserver 4.2.2.2</screen> A directiva <emphasis role="italics">search</emphasis> acrescenta mydomain.com às pesquisas de nomes de computadores ao tentar resolver nomes na sua rede. Por exemplo, se o domínio da sua rede for mydomain.com e você tentar efectuar um ping para o computador <quote>mybox</quote>, a pesquisa de DNS será modificada para <quote>mybox.mydomain.com</quote> para resolução de nomes. As directivas <emphasis role="italics">nameserver</emphasis> especificam os servidores de DNS a utilizar para converter os nomes dos computadores para endereços IP. Se você utilizar os seus próprios servidores de nomes, coloque-os aqui. Caso contrário, pergunte ao seu Fornecedor de Serviços de Internet quais os servidores de DNS primário e secundário a utilizar, e coloque-os no <filename>/etc/resolv.conf</filename> como indicado acima.</para>
		<para>Muitas mais configurações são possíveis, incluindo interfaces de marcação telefónica PPP, redes IPv6, dispositivos VPN, etc.. Consulte <application>man 5 interfaces</application> para saber mais informações e opções suportadas. Lembre-se que o ficheiro <filename>/etc/network/interfaces</filename> é utilizado pelos scripts <application>ifup</application>/<application>ifdown</application> como a configuração de mais alto nível que pode ser utilizada noutras distribuições de Linux, e que os tradicionais utilitários de baixo nível, tais como <application>ifconfig</application>, <application>route</application>, e <application>dhclient</application> ainda estão disponíveis para configurações ad hoc.</para>
      </sect2>
      <sect2 id="managing-dns-entries" status="complete">
          <title>Gerindo Entradas de DNS</title>
            <para>Esta secção explica como configurar o servidor de nomes a utilizar aquando da conversão de endereços IP para nomes de máquinas e vice versa. Não explica como configurar um sistema como servidor de nomes.</para>
            <para>Para gerir entradas de DNS, pode adicionar, editar ou remover nomes de DNS do ficheiro <filename>/etc/resolv.conf</filename>. Um ficheiro de exemplo <ulink url="../sample/resolv.conf">sample file</ulink> é dado abaixo:</para>
<programlisting>
search com
nameserver 204.11.126.131
nameserver 64.125.134.133
nameserver 64.125.134.132
nameserver 208.185.179.218
</programlisting>
            
            <para>A palavra <application>search</application> indica a cadeia de carácteres a juntar no final de um nome de computador incompleto. Aqui, mencioná-mo-lo como <application>com</application>. Assim, quando executamos o comando: <command>ping ubuntu</command>, ele será interpretado como <command>ping ubuntu.com</command>.</para> 

            <para>A palavra <application>nameserver</application> indica o endereço IP do servidor de nomes. Este será utilizado para determinar um endereço IP ou um nome de computador. Este ficheiro pode ter entradas para vários servidores de nomes. Os servidores de nomes serão utilizadores pela pesquisa de rede pela mesma ordem.</para>

            <warning>
            <para>Se os nomes dos servidores DNS são obtidos dinamicamente a partir de DHCP ou PPPOE (obtidos a partir do seu ISP), não adicione entradas de "nameserver" neste ficheiro. Eles serão actualizados automaticamente.</para>
            </warning>

        </sect2>
        <sect2 id="managing-hosts" status="complete">
          <title>Gerindo Computadores</title>
            <para>Para gerir servidores, pode adicionar, editar, ou remover servidores do ficheiro <filename>/etc/hosts</filename>. Este ficheiro contém endereços IP e os correspondentes nomes associados. Quando o seu sistema tenta traduzir o nome de uma máquina para um endereço IP ou determinar o nome de uma máquina para um endereço IP, vai verificar o ficheiro <filename>/etc/hosts</filename> antes de recorrer aos servidores de nomes. Se o endereço IP está listado no ficheiro <filename>/etc/hosts</filename>, os servidores de nomes não são utilizados. Este comportamento pode ser alterado por edição do ficheiro <filename> /etc/nsswitch.conf</filename>.</para>

            <para>Se a sua rede contém computadores cujos endereços IP não estão listados em DNS, é recomendado que os adicione ao ficheiro <filename>/etc/hosts</filename>.</para>
        </sect2>
    </sect1>
	<sect1 id="tcpip" status="complete">
		<title>TCP/IP</title>
          <para>O <emphasis role="italics">Transmission Control Protocol</emphasis> e o <emphasis role="italics">Internet Protocol</emphasis> (TCP/IP) é um conjunto padrão de protocolos desenvolvido nos finais dos anos 70 pelo Defense Advanced Research Projects Agency (DARPA) como forma de comunicação entre diferentes tipos de computadores e redes de computadores. O TCP/IP é a força impulsionadora da Internet, e como tal este é o conjunto de protocolos mais populares da Terra.</para>
      <sect2 id="tcpip-introduction" status="complete">
        <title>Introdução ao TCP/IP</title> 
          <para>Os dois componentes do protocolo TCP/IP lidam com diferentes aspectos das redes de computadores. O <emphasis>Internet Protocol</emphasis>, o "IP" do TCP/IP é um protocolo independente da conexão que lida apenas com o encaminhamento de pacotes na rede utilizando o <emphasis role="italics">IP datagram</emphasis> como a unidade básica de informação na rede. O datagrama IP consiste num cabeçalho seguido de uma mensagem. O <emphasis>Transmission Control Protocol</emphasis> é o "TCP" do TCP/IP e permite aos computadores da rede estabelecer ligações que podem ser utilizadas para intercâmbio de séries de dados. O TCP também garante que os dados entre ligações são entregues e chegam a um computador da rede pela mesma ordem em que foram enviados de outro computador da rede.</para>
          </sect2>
        <sect2 id="tcpip-configuration" status="complete">
          <title>Configuração de TCP/IP</title>
            <para>A configuração do protocolo TCP/IP consiste em vários elementos que devem ser ajustados editando os ficheiros apropriados, ou aplicando soluções tais como o servidor Dynamic Host Configuration Protocol (DHCP) que por sua vez pode ser configurado para fornecer as configurações de TCP/IP correctas ao cliente, automaticamente. Os dados desta configuração devem ser ajustados correctamente por forma a facilitar o correcto funcionamento na rede do seu sistema Ubuntu.</para>
            <para>Os elementos da configuração comum do TCP/IP e as suas finalidades são as seguintes <itemizedlist>
               <listitem>
                  <para><emphasis role="bold">Endereço IP</emphasis> O endereço IP é um identificador único apresentado como quatro números decimais limitados entre zero (0) e duzentos e cinquenta e cinco (255), separados por pontos (.), cada um dos quatro números reprensenta oito (8) bits do endereço, para um comprimento total do endereço de trinta e dois (32) bits. Este formato é chamado <emphasis>dotted quad notation</emphasis>.</para>
               </listitem>
               <listitem>
                  <para><emphasis role="bold">Netmask</emphasis> A Máscara de Sub-rede, (ou simplesmente <emphasis>netmask</emphasis> é uma máscara de bits, ou um conjuntos de marcas que separam as partes do endereço IP significativas para a rede, das significativas para a <emphasis>sub-rede</emphasis>. Por exemplo, numa rede classe C, a máscara de rede padrão é 255.255.255.0 o que mascára os três primeiros bytes do endereço IP e permite que o último byte se mantenha disponível para indicar os computadores na sub-rede.</para>
               </listitem>
               <listitem>
                  <para><emphasis role="bold">Endereço de Rede</emphasis> O Endereço de Rede representa os bytes correspondentes a porção relativa à rede de um endereço IP. Por exemplo, a máquina 12.128.1.2 numa rede da Classe A que utilize o 12.0.0.0 como endereço de rede, utiliza o doze (12) para representar o primeiro byte do endereço IP, (parte relativa à rede) e zeros (0) em todos os três bytes restantes para representar potenciais endereços de máquinas. Máquinas numa rede utilizando os endereços IP privados como o 192.168.1.100, muito comuns, utilizariam por sua vez um Endereço de Rede 192.168.1.0, que especifica os primeiros três bytes de uma rede da Classe C 192.168.1 e zero (0) para todos os possíveis endereços de máquinas na rede.</para>
               </listitem>
               <listitem>
                  <para><emphasis role="bold">Endereço de Difusão</emphasis> O Endereço de difusão <emphasis role="italics">Broadcast Address</emphasis> é um endereço que permite o envio de dados da rede para todos os computadores de uma sub-rede simultaneamente, em vez de especificar um computador em particular. O endereço de difusão padrão para redes IP é 255.255.255.255, mas este endereço de difusão não pode ser utilizado para enviar uma mensagem para todos os computadores na Internet porque os <emphasis role="italics">routers</emphasis> o bloqueiam. Por exemplo, para o popular IP de redes privadas Classe C 192.168.1.0, o endereço de difusão deve ser configurado como 192.168.1.255. Mensagens de Difusão <emphasis role="italics">Broadcast Messages</emphasis> são habitualmente produzidas por protocolos de rede tais como o Address Resolution Protocol (ARP) e o Routing Information Protocol (RIP).</para>
               </listitem>
               <listitem>
                  <para><emphasis role="bold">Porta de Ligação</emphasis> A Porta de Ligação <emphasis role="italics">Gateway</emphasis>, é o endereço IP pelo qual uma rede em particular ou um computador na rede pode ser alcançado. Se um computador da rede deseja comunicar com outro, e esse outro não está localizado na mesma rede, então uma <emphasis>porta de ligação</emphasis> tem que ser utilizada. Em muitos casos, o Endereço da Porta de Ligação será o de um <emphasis role="italics">router</emphasis> da mesma rede, que por sua vez fará a passagem do tráfego para outras redes ou computadores, tais como Servidores de Internet. O valor do endereço da Porta de Ligação tem que ser correcto, caso contrário o seu sistema não poderá comunicar com outros computadores fora da mesma rede.</para>
               </listitem>
               <listitem>
                  <para><emphasis role="bold">Endereço dos Servidores de Nomes</emphasis> Os Endereços de Servidores de Nomes <emphasis role="italics">Nameserver Addresses</emphasis> representam os endereços IP dos sistemas dos Serviços de Nomes de Domínios <emphasis role="bold">Domain Name Service</emphasis> (DNS) que convertem (resolvem) o nome dos computadores em endereços IP. Existem três níveis de Endereços de Servidores de Nomes que podem ser especificados por ordem de precedência: O Servidor de Nomes <emphasis>Primário</emphasis>, o Servidor de Nomes <emphasis>Secundário</emphasis> e o Servidor de Nomes <emphasis>Terciário</emphasis>. Para que o seu sistema tenha capacidade de converter os nomes dos computadores nos respectivos endereços IP, tem que especificar Endereços de Servidores de Nomes válidos, para os quais tenha permissões para utilizar na configuração TCP/IP do seu sistema. Em muitos casos estes endereços podem ser, e são, fornecidos pelo seu fornecedor de serviços de rede, mas existem muitos servidores de nomes de acesso público e gratuito, tais como os servidores de nível 3 (Verizon) com endereços IP desde 4.2.2.1 até 4.2.2.6 .</para>
                     <tip>
                        <para>O endereço IP, máscara de rede <emphasis role="italics">Netmask</emphasis>, endereço da rede <emphasis role="italics">Network Address</emphasis>, endereço de difusão <emphasis role="italics">Broadcast Address</emphasis>e o endereço da porta de ligação <emphasis role="italics">Gateway Address</emphasis> são geralmente especificados através de directivas apropriadas no ficheiro <filename>/etc/network/interfaces</filename> . Os Endereços dos Servidores de Nomes <emphasis role="italics">Nameserver Addresses</emphasis> são geralmente especificados através das directivas <emphasis>nameserver</emphasis> no ficheiro <filename>/etc/resolv.conf</filename> . Para mais informação, consulte a página do manual do sistema para <filename>interfaces</filename> ou <filename>resolv.conf</filename> respectivamente, introduzindo os seguintes comandos na linha de comandos:</para>
                     </tip>
                    <para>Aceda à página do manual de sistema para <filename>interfaces</filename> com o seguinte comando:</para>
                    <para>
<screen>
<command>man interfaces</command>
</screen>
                    </para>
                    <para>Aceda à página do manual de sistema para <filename>resolv.conf</filename> com o seguinte comando:</para>
                    <para>
<screen><command>man resolv.conf</command></screen>
                    </para>
               </listitem>
            </itemizedlist></para>
        </sect2>
        <sect2 id="ip-routing" status="complete">
          <title>Encaminhamento IP</title>
            <para>O encaminhamento de IP <emphasis role="italics">IP Routing</emphasis> é a forma de especificar e descobrir caminhos numa rede TPC/IP pelos quais os dados da rede podem ser enviados. O encaminhamento utiliza um conjunto de <emphasis>tabelas de encaminhamento</emphasis> <emphasis role="italics">routing tables</emphasis> para dirigir o envio de pacotes de dados da rede desde a sua origem até ao seu destino, frequentemente através de muitos nós de rede intermediários conhecidos como <emphasis>routers</emphasis>. O Encaminhamento de IP é a principal forma de descobrir caminhos na Internet. Existem duas formas principais de Encaminhamento de IP: <emphasis>Encaminhamento Estático</emphasis> <emphasis role="italics">Static Routing</emphasis> e <emphasis>Encaminhamento Dinâmico</emphasis>  <emphasis role="italics">Dynamic Routing</emphasis>.</para>
            <para>O encaminhamento estático implica a adição manual de rotas IP às tabelas de encaminhamento do sistema, e isto é feito habitualmente manipulando as tabelas de encaminhamento com o comando <application>route</application>. O encaminhamento estático goza de muitas vantagens sobre o encaminhamento dinâmico, como a simplicidade de implementação em redes pequenas, previsibilidade (a tabela de encaminhamento é sempre calculada previamente, e como tal o caminho é exactamente o mesmo cada vez que é utilizado) e pouca sobrecarga dos outros <emphasis role="italics">routers</emphasis> e ligações de rede devido à falta de um protocolo de encaminhamento dinâmico. No entanto, o encaminhamento estático também possui algumas desvantagens. Por exemplo, o encaminhamento estático está limitado a pequenas redes e não possui uma boa escalabilidade. O encaminhamento estático também falha por completo a adaptação a quebras da rede e a falhas ao longo do caminho, devido à natureza fixa da mesma.</para>
            <para>O Encaminhamento Dinâmico depende de redes grandes, com múltiplas rotas IP possíveis desde a origem até ao destino, e utiliza protocolos de encaminhamento especiais, tais como o Protocolo de Informação de Rotas <emphasis role="italics">Router Information Protocol</emphasis> (RIP), que maneja os ajustes automáticos das tabelas de encaminhamento que tornam o encaminhamento dinâmico possível. O encaminhamento dinâmico tem várias vantajens sobre o encaminhamento estático, tais como uma maior escalabilidade e a capacidade para se adaptar a falhas e quebras ao longo dos caminhos da rede. Adicionalmente, são necessárias menos configurações manuais das tabelas de encaminhamento, dado que os <emphasis role="italics">routers</emphasis> aprendem uns com os outros acerca da sua existência e dos caminhos (rotas) possíveis. Isto também elimina a possibilidade de introduzir erros nas tabelas de encaminhamento por erro humano. No entanto o encaminhamento dinâmico não é perfeito, e apresenta desvantagens como sejam, maior complexidade e sobrecarga adicional nas comunicações dos <emphasis role="italics">routers</emphasis>, o que não beneficia os utilizadores finais, e ainda consome largura de banda.</para>
        </sect2>
        <sect2 id="tcp-and-udp" status="complete">
          <title>TCP e UDP</title>
            <para>O TCP é um protocolo baseado na ligação, e oferece correcção de erros e a garantia de entrega de dados através daquilo que é conhecido como <emphasis>controlo de fluxo<emphasis> <emphasis role="italics">flow control</emphasis>. O controlo de fluxo determina quando é necessário parar o envio de dados, e reenviar dados já enviados devido a problemas, como por exemplo <emphasis>colisões</emphasis>, isto assegura a completa e correcta entrega dos dados. O TCP é tipicamente utilizado para troca de informações importantes como sejam as transacções de bases de dados.</emphasis></emphasis></para>
            <para>O Protocolo de Datagrama do Utilizador <emphasis role="italics">User Datagram Protocol</emphasis> (UDP), por outro lado, é um protocolo <emphasis>independente da ligação</emphasis> <emphasis>connectionless</emphasis> que raramente lida com a transmissão de dados importantes, dado que não possui controlo de fluxo ou qualquer outro método que assegure uma entrega fiável dos dados. O UDP é habitualmente utilizado em aplicações como a transmissão de áudio e vídeo, visto ser consideravelmente mais rápido que o TCP, exactamente por não ter a correcção de erros e o controlo de fluxo, e em que a perda de alguns pacotes não é catrastófica.</para>
        </sect2>
        <sect2 id="icmp" status="complete">
          <title>ICMP</title>
            <para>O Protocolo de Controlo de Mensagens da Internet <emphasis role="italics">Internet Control Messaging Protocol</emphasis> (ICMP) é uma extensão do Internet Protocol (IP) tal como definido no Request For Comments (RFC) #792 e suporta pacotes de rede que contenham informação de controlo, de erros e de mensagens. O ICMP é utilizado por aplicações de rede como o utilitário <application>ping</application>, que pode determinar a disponibilidade de um computador ou dispositivo de rede. Exemplos de algumas mensagens de erro devolvidas pelo ICMP que são úteis  para computadores da rede ou dispositivos como os <emphasis role="italics">routers</emphasis>, incluem <emphasis>Destination Unreachable</emphasis> and <emphasis>Time Exceeded</emphasis>.</para>
        </sect2>
        <sect2 id="daemons" status="complete">
          <title>Serviços</title>
            <para>Serviços <emphasis role="italics">Daemons</emphasis> são aplicações especiais do sistema que funcionam de forma contínua na rectaguarda e que aguardam pedidos para as funções que fornecem vindos das outras aplicações. Muitos serviços são centrados na rede; isto é, um grande número de serviços executados na rectaguarda de um sistema Ubuntu pode fornecer funcionalidades relacionadas com a rede. Alguns exemplos desses serviços de rede incluem o <emphasis>Hyper Text Transport Protocol Daemon</emphasis> (httpd), que fornece a funcionalidade de um servidor web; o <emphasis>Secure SHell Daemon</emphasis> (sshd), que fornece acesso remoto seguro e a capacidade de transferência de ficheiros; e o <emphasis>Internet Message Access Protocol Daemon</emphasis> (imapd), que fornece serviços de correio electrónico.</para>
        </sect2>
    </sect1>
	<sect1 id="firewall-configuration" status="help">
		<title>Configuração da <emphasis role="italics">Firewall</emphasis></title>
          <para>O kernel (núcleo) do Linux inclui o sub-sistema <emphasis>Netfilter</emphasis> que é utilizado para manipular ou decidir o destino do tráfego de encaminhado para ou de passagem pelo servidor. Todas as modernas soluções de <emphasis role="italics">firewall</emphasis> utilizam este sistema para filtragem de pacotes.</para>
        <sect2 id="firewall-introduction" status="help">
          <title>Introdução à <emphasis role="italics">Firewall</emphasis></title>
            <para>O sistema de filtragem de pacotes do kernel seria de pouca utilidade sem um interface de utilizador para o gerir. Esta é a finalidade das tabelas de ip <emphasis role="italics">iptables</emphasis>. Quando um pacote chega ao servidor, será encaminhado para o sub-sistema Netfilter, para aceitação, manipulação ou rejeição baseado nas regras que lhe são fornecidas à área do utilizador através das <emphasis role="italics">iptables</emphasis>. Assim, as <emphasis role="italics">iptables</emphasis> são tudo o que é necessário para gerir a sua <emphasis role="italics">firewall</emphasis> se estiver familiarizado com elas, mas existem muitos interfaces disponíveis para simplificar a tarefa.</para>
        </sect2>
        <sect2 id="ip-masquerading" status="help">
          <title>Mascaramento de IP</title>
            <para>
              The purpose of IP Masquerading is to allow machines with private, non-routable IP
			  addresses on your network to access the Internet through the machine doing the
			  masquerading.  Traffic from your private network destined for the Internet must be
			  manipulated for replies to be routable back to the machine that made the request.
			  To do this, the kernel must modify the <emphasis>source</emphasis>
			  IP address of each packet so that replies will be routed back to it, rather than
			  to the private IP address that made the request, which is impossible over the 
			  Internet.  Linux uses <emphasis>Connection Tracking</emphasis>
			  (conntrack) to keep track of which connections belong to which machines and reroute
			  each return packet accordingly.  Traffic leaving your private network is thus
			  "masqueraded" as having originated from your Ubuntu gateway machine.
			  This process is referred to in Microsoft documentation as Internet
			  Connection Sharing.
            </para>
			<para>Isso pode ser conseguido com uma única regra de iptables, que pode diferir ligeiramente na sua configuração de rede: <screen>sudo iptables -t nat -A POSTROUTING -s 192.168.0.0/16 -o ppp0 -j MASQUERADE</screen> O comando anterior assume que o espaço do seu endereço privado é 192.168.0.0/16 e que o seu interface com a internet é o ppp0. A sintaxe explica-se da seguinte forma: <itemizedlist>
				  <listitem><para>-t nat -- a regra deve ser adicionada na tabela de nat</para></listitem>
				  <listitem><para>-A POSTROUTING -- a regra deve ser adicionada (-A) à cadeia de POSTROUTING</para></listitem>
				  <listitem><para>-s 192.168.0.0/16 -- a regra aplica-se a tráfego originário do grupo de endereços indicado</para></listitem>
				  <listitem><para>-o ppp0 -- a regra aplica-se a tráfego definido para ser encaminhado através do dispositivo de rede especificado</para></listitem>
				  <listitem><para>-j MASQUERADE -- O tráfego coberto por esta regra será "encaminhado - jump" (-j) para o alvo MASCARADO  para ser manipulado conforme acima descrito</para></listitem>
			  </itemizedlist></para>
			<para>Cada entrada da tabela de filtragem (a tabela por omissão, e onde a maioria ou mesmo toda a filtragem de pacotes ocorre) tem uma <emphasis>política</emphasis> de ACCEPT por defeito, mas se está a criar uma firewall em adição a um equipamento de gateway, poderá ter alterado esta política para DROP ou REJECT, o que em qualquer dos casos exigirá que o seu tráfego mascarado seja autorizado através do comando FORWARD para que a regra funcione: <screen>sudo iptables -A FORWARD -s 192.168.0.0/16 -o ppp0 -j ACCEPT
sudo iptables -A FORWARD -d 192.168.0.0/16 -m state --state ESTABLISHED,RELATED -i ppp0 -j ACCEPT</screen> Este comando permitirá o estabelecimento das ligações a partir da sua rede local para a internet e que todo o tráfego relacionado regresse à máquina que o iniciou.</para>
        </sect2>
        <sect2 id="firewall-tools" status="help">
          <title>Ferramentas</title>
            <para>Existem muitas ferramentas disponíveis que o ajudam a construir uma firewall completa sem ter um conhecimento aprofundado do iptables. Para quem prefere uma interface gráfica, a aplicação <application>Firestarter</application> é bastante popular e fácil de usar, e  a <application>fwbuilder</application> é muito poderosa e possui um aspecto bastante semelhante a aplicações comerciais como por exemplo a Checkpoint Firewall-1. Se prefere uma ferramenta de linha de comandos assente em ficheiros de configuração de texto puro, a <application>Shorewall</application> é uma solução muito poderosa que o vai ajudar a configurar uma firewall avançada para qualquer rede. Se a sua rede é relativamente simples, ou se não possui uma rede,  a <application>ipkungfu</application>  deverá oferecer-lhe uma firewall pronta a funcionar "out-of-the-box" sem necessidade de configuração, e permitirá a criação de uma firewall mais avançada através da edição de ficheiros de configuração simples mas bem documentados. Outra aplicação interessante é a <application>fireflier</application>, desenhada para ser uma aplicação de firewall para o desktop. É constituída por um servidor (fireflier-server)  e uma escolha de clientes de interface gráfico (GTK ou QT), comportando-se como as populares aplicações de firewall interactivas para windows.</para>
        </sect2>
        <sect2 id="firewall-logs" status="help">
          <title>Registos</title>
            <para>Os registos da Firewall são essenciais para o reconhecimento de ataques, compreender os problemas de funcionamento das regras criadas, ou mesmo detectar actividade não habitual na sua rede. Deverá incluir regras de registo na sua firewall para que estes sejam criados, e estas deverão ser colocadas antes de qualquer regra de terminação (uma regra com um alvo que decide o destino do pacote como por exemplo ACCEPT, DROP ou REJECT). Por exemplo:<screen>sudo iptables -A INPUT -m state --state NEW -p tcp --dport 80 -j LOG --log-prefix "NEW_HTTP_CONN: "</screen>
Um pedido na porta 80 solicitado a partir da máquina local, gerará um registo no dmesg com este aspecto:</para>
			<para>
			  <programlisting>[4304885.870000] NEW_HTTP_CONN: IN=lo OUT= MAC=00:00:00:00:00:00:00:00:00:00:00:00:08:00 SRC=127.0.0.1 DST=127.0.0.1 LEN=60 TOS=0x00 PREC=0x00 TTL=64 ID=58288 DF PROTO=TCP SPT=53981 DPT=80 WINDOW=32767 RES=0x00 SYN URGP=0</programlisting>
			</para>
			<para>Este registo aparecerá também no <filename>/var/log/messages</filename>, <filename>/var/log/syslog</filename>, e <filename>/var/log/kern.log</filename>. Este comportamento pode ser modificado editando o <filename>/etc/syslog.conf</filename> apropriadamente ou instalando e configurando o <application>ulogd</application> e usando-o em vez do LOG. O serviço <application>ulogd</application> é um servidor que escuta ordens de criação de registo originadas no kernel, especificamente de firewalls, e pode criar o registo em qualquer ficheiro, ou mesmo numa base de dados application&gt;PostgreSQL</para>
        </sect2>
    </sect1>
	<sect1 id="openssh-server" status="complete">
		<title>Servidor OpenSSH</title>
      <sect2 id="openssh-introduction">
        <title>Introdução</title> 
           <para>Esta secção do Guia de Servidor do <phrase>Ubuntu</phrase> introduz uma poderosa colecção de ferramentas para o controlo remoto de computadores em rede, e tranferência de dados entre os mesmos, chamada <emphasis>OpenSSH</emphasis>. Irá também aprender acerca de algumas configurações possíveis com a aplicação de servidor OpenSSH e como as alterar no seu sistema Ubuntu.</para>
          <para>OpenSSH é uma versão livre do protocolo Secure Shell (SSH) e da família de ferramentas para controlar remotamente um computador ou transferir ficheiros entre computadores. Ferramentas tradicionais para executar essas funções, tais como <application>telnet</application> ou <application>rcp</application>, são inseguras e transmitem as palavras passe dos utilizadores em texto simples quando utilizadas. O OpenSSH fornece um serviço para o servidor e ferramentas cliente para facilitar um controlo remoto seguro, codificado e operações de transferência de ficheiros, substituindo efectivamente as ferramentas padrão.</para>
          <para>O componente <application>sshd</application> do servidor OpenSSH, aguarda continuamente ligações de qualquer das ferramentas dos clientes. Quando um pedido de ligação ocorre, o <application>sshd</application> configura a ligação correcta dependendo do tipo de ferramenta do cliente que se está a ligar. Por exemplo, se o computador remoto se está a ligar com a aplicação cliente <application>ssh</application>, o processo do servidor OpenSSH inicia uma ligação de controlo remoto após a autenticação. Se o utilizador remoto usa uma aplicação <application>scp</application> o processo do servidor OpenSSH inicia uma cópia segura dos ficheiros entre o servidor e o cliente após a autenticação. O OpenSSH pode utilizar vários métodos de autenticação, incluindo palavras passe simples, chaves públicas e senhas <application>Kerberos</application>.</para>
          </sect2>
        <sect2 id="openssh-installation">
        <title>Instalação</title>
        <para>A instalação das aplicações cliente e servidor do OpenSSH  é simples. Para instalar a aplicação cliente OpenSSH no seu sistema Ubuntu, utilize este comando num terminal:</para>
           <para>
<screen>
<command>sudo apt-get install openssh-client</command>
</screen>
           </para>
        <para>Para instalar a aplicação servidor OpenSSH, e ficheiros de suporte associados, utilize este comando num terminal:</para>
           <para>
<screen>
<command>sudo apt-get install openssh-server</command>
</screen>
           </para>
        </sect2>
        <sect2 id="openssh-configuration">
          <title>Configuração</title>
            <para>Pode alterar o comportamento predefinido da aplicação servidor OpenSSH, <application>sshd</application>, editando o ficheiro <filename>/etc/ssh/sshd_config</filename>. Para informações sobre as directivas de configuração usadas neste ficheiro, pode consultar a página de manual apropriada com o seguinte comando, executado num terminal:</para>
               <para>
<screen>
<command>man sshd_config</command>
</screen>
               </para>
            <para>Existem muitas directivas no ficheiro de configuração  do <application>sshd</application> controlando coisas como as configurações das comunicações e os modos de autenticação. De seguida apresentam-se exemplos de directivas de configuração que podem ser alteradas ao editar o ficheiro <filename>/etc/ssh/ssh_config</filename>.</para>
            <tip>
               <para>Antes de editar o ficheiro de configuração, deverá fazer uma cópia do original e protegê-lo contra escrita por forma a ter sempre as configurações originais como referência ou para o reutilizar se necessário.</para>
               <para>Copie o ficheiro <filename>/etc/ssh/sshd_config</filename> e proteja-o contra escrita com os seguintes comandos, executados num terminal:</para>
	    </tip>
               <para>
<screen>
<command>sudo cp /etc/ssh/sshd_config /etc/ssh/sshd_config.original</command>
<command>sudo chmod a-w /etc/ssh/sshd_config.original</command>
</screen>
               </para> 
            <para>A seguir apresentam-se exemplos de directivas que pode alterar:</para>
           <itemizedlist>
               <listitem>
               <para>Para ajustar o OpenSSH para aceitar pedidos (escutar) o protocolo TCP na porta 2222, em vez da porta por omissão TPC porta 22, altere a directiva Port como se segue:</para>
               <para>Port 2222</para>
               </listitem>
	<listitem>
            <para>Para fazer com que o <application>sshd</application> permita credenciais de login baseadas em chaves públicas, adicione simplesmente a linha seguinte:</para>
               <para>PubkeyAuthentication yes</para>
            <para>no ficheiro <filename>/etc/ssh/sshd_config</filename>, ou se a linha já estiver presente assegure-se de que não está comentada.</para>
            </listitem>
            <listitem>
             <para>Para fazer com que o seu servidor OpenSSH mostre o conteúdo do ficheiro <filename>/etc/issue.net</filename> como uma mensagem de pré-login, adicione simplesmente ou modifique a seguinte linha:</para>
               <para>Banner /etc/issue.net</para>
               <para>no ficheiro <filename>/etc/ssh/sshd_config</filename>.</para>
             </listitem>
             </itemizedlist>
	    <para>Após a marcação de alterações no ficheiro <filename>/etc/ssh/sshd_config</filename>, grave o ficheiro e reinicie a aplicação servidor <application>sshd</application> para tornar efectivas as alterações utilizando o comando seguinte num terminal:</para>
               <para>
<screen>
<command>sudo /etc/init.d/ssh restart</command>
</screen>
               </para>
		<warning>
                           <para>Muitas outras directivas de configuração para o <application>sshd</application> estão disponíveis para alterar o comportamento do servidor de forma a satisfazer as suas necessidades pessoais. Tenha em atenção que, se o seu único método de acesso ao servidor for via <application>ssh</application>, e se ocorrer um erro na configuração do <application>sshd</application> ao alterar o ficheiro <filename>/etc/ssh/sshd_config</filename>, poderá ficar bloqueado do lado de fora após reiniciar o servidor, ou que a aplicação de servidor <application>sshd</application> se recuse a iniciar em virtude de uma directiva de configuração incorrecta. Assim, tenha especial atenção quando edita este ficheiro remotamente.</para>
                        </warning>
        </sect2>
   <sect2 id="openssh-references" status="complete">
      <title>Referências</title>
      <para>
      <ulink url="http://www.openssh.org/">Sítio web do OpenSSH</ulink>
      </para>
      <para>
      <ulink url="https://wiki.ubuntu.com/AdvancedOpenSSH">Página wiki do OpenSSH avançado</ulink>
      </para>
   </sect2>
     </sect1>
	<sect1 id="ftp-server" status="complete">
        <title>Servidor FTP</title> 
            <para>O Protocolo de Transferência de Ficheiros (FTP) <emphasis role="italics">File Transfer Protocol</emphasis> é um protocolo TCP para a realização de transferências de ficheiros entre computadores. O FTP funciona num modelo cliente/servidor. O componente de servidor é chamado <emphasis>FTP daemon</emphasis>. Este escuta continuamente solicitações FTP de clientes remotos. Quando uma solicitação é recebida, ele gere o registo e prepara a ligação. Durante a sessão estabelecida executa todos os comandos enviados pelo cliente FTP.</para>
            <para>O acesso a um servidor FTP pode ser conseguido de duas formas:</para>
            <itemizedlist spacing="compact">
                <listitem>
                    <para>Anónimo</para>
                </listitem>
                <listitem>
                    <para>Autenticado</para>
                </listitem>
            </itemizedlist>
            <para>Em modo anónimo, clientes remotos podem aceder ao servidor FTP utilizando a conta de utilizador por omissão chamada "anonymous" ou "ftp" e enviando um endereço de correio electrónico como palavra passe. Em modo autenticado o utilizador necessita de uma conta de utilizador e uma palavra passe. O acesso do utilizador aos directórios e ficheiros de um servidor FTP depende das permissões definidas para a conta de utilizador utilizada para aceder ao servidor. Como regra geral, o gestor FTP esconde o directório raiz do servidor FTP e muda-o para o directório "Home". Isto esconde de sessões remotas o resto do sistema de ficheiros.</para>
            <sect2 id="vsftpd-ftp-server-installation" status="complete">
                <title>vstpd - Instalação do Servidor FTP</title>
                    <para>vsftpd é um serviço disponível no Ubuntu. É fácil de instalar, configurar e manter. Para instalar o <application>vsftpd</application> pode executar o seguinte comando: <screen> <command>sudo apt-get install vsftpd</command> </screen></para>

                </sect2>
            <sect2 id="vsftpd-ftp-server-configuration" status="complete">
                <title>vsftpd - Configuração do Servidor FTP</title>
                <para>Pode editar o ficheiro de configuração do vsftpd <filename>/etc/vsftpd.conf</filename> para alterar os valores padrão.  Por omissão apenas o acesso FTP anónimo é permitido. Se pretender desactivar esta opção, deve alterar a linha: <programlisting>
anonymous_enable=YES
</programlisting> para <programlisting>
anonymous_enable=NO
</programlisting> . Por omissão, os utilizadores locais do sistema não podem iniciar sessão no servidor FTP. Para alterar esta configuração deve retirar o comentário à linha: <programlisting>
#local_enable=YES
</programlisting> . Por omissão, os utilizadores locais têm permissão para transferir ficheiros do servidor FTP (download). Não têm  permissão para transferir ficheiros para o servidor FTP (upload). Para alterar esta configuração, deve retirar o comentário da linha: <programlisting>
#write_enable=YES
</programlisting> . Similarmente, por omissão, os utilizadores anónimos não têm permissão para transferir ficheiros para o servidor FTP. Para alterar esta configuração, deve retirar o comentário da linha: <programlisting>
#anon_upload_enable=YES
</programlisting> . O ficheiro de configuração é constítuido por muitos parâmetros. A informação acerca de cada parâmetro está disponível no próprio ficheiro de configuração. Em alternativa, pode consultar a página do manual, <command>man 5 vsftpd.conf</command> para detalhes de cada parâmetro.</para>
                <para>Uma vez configurado o <application>vsftpd</application> pode-se dar início ao servidor. O seguinte comando pode ser utilizado para correr o servidor <application>vsftpd</application>: <screen> <command>sudo /etc/init.d/vsftpd start</command> </screen></para>
				<note><para>Note-se que os valores por omissão no ficheiro de configuração são definidos como estão por razões de segurança. Cada uma das alterações anteriores torna o sistema um pouco menos seguro, pelo que só devem ser feitas se necessário.</para></note>
                </sect2>
    </sect1>
	<sect1 id="network-file-system" status="complete">
		<title>Sistema de Ficheiros de Rede - Network File System (NFS)</title>
          <para>O NFS permite a um sistema partilhar directórios e ficheiros com outras pessoas através de uma rede. Utilizando o NFS, utilizadores e programas podem aceder  a ficheiros num sistema remoto quase como se fossem ficheiros locais.</para>

          <para>Alguns dos benefícios mais notáveis que o NFS providencia são:</para>

          <itemizedlist>
          <listitem>
      <para>Estações de trabalho locais utilizam menos espaço em disco porque os dados frequentemente utilizados podem ser guardados num máquina única e permanecer, mesmo assim, acessíveis a outros através da rede.</para>
          </listitem>
          <listitem>
      <para>Não existe necessidade de os utilizadores terem directórios pessoais em cada máquina da rede. Os directórios pessoais podem ser configurados no servidor NFS e disponibilizados através da rede.</para>
          </listitem>
          <listitem>

      <para>Dispositivos de armazenamento como as disquetes, unidades de CDROM e unidades de memória USB podem ser utilizados por outras máquinas na rede. Isto pode reduzir o número de dispositivos deste tipo dentro da rede.</para>
          </listitem>
          </itemizedlist>

      <sect2 id="nfs-installation" status="complete">
        <title>Instalação</title>
      
          <para>Num terminal insira o seguinte comando para instalar o servidor NFS:</para>
          <para>
<screen>
<command>sudo apt-get install nfs-kernel-server</command>
</screen>
          </para>
      </sect2>
      <sect2 id="nfs-configuration" status="complete">
        <title>Configuração</title>
          <para>Pode configurar os directórios a ser exportados adicionando-os ao ficheiro <filename>/etc/exports</filename>. Por exemplo:</para>
          <para>
<screen>
/ubuntu *(ro,sync,no_root_squash)
/home *(rw,sync,no_root_squash)
</screen>
          </para>

          <para>Pode substituir * com um dos formatos de nome de máquina. Faça a declaração do nome de máquina tão especifica quanto possível para que sistemas não desejados não possam aceder à montagem NFS.</para>

          <para>Para iniciar o servidor NFS, pode correr o seguinte comando num terminal:</para>
          <para>
<screen>
<command>sudo /etc/init.d/nfs-kernel-server start</command>
</screen>
          </para>
      </sect2>
      <sect2 id="nfs-client-configuration" status="complete">
        <title>Configuração do Cliente NFS</title>
          <para>Utilize o comando <application>mount</application> para montar um directório NFS partilhado por outra máquina, digitando uma linha de comando similar à seguinte num terminal:</para>
          <para>
<screen>
<command>sudo mount example.hostname.com:/ubuntu /local/ubuntu</command>
</screen>
</para>
      <warning>
      <para>O directório a utilizar como ponto de montagem <filename>/local/ubuntu</filename> tem que existir. Não devem existir ficheiros ou sub-directórios no directório <filename>/local/ubuntu</filename> .</para>
      </warning>

      <para>Uma forma alternativa de montar uma partilha NFS de outra máquina é adicionar uma linha ao ficheiro <filename>/etc/fstab</filename>. A linha deve declarar o nome do servidor NFS, o directório exportado por esse servidor, e o directório da máquina local  onde essa partilha deve ser montada.</para>

      <para>A sintaxe geral da linha no ficheiro <filename>/etc/fstab</filename> é a que se segue:</para>
      
      <para>
<programlisting>
nome_de_maquina.exemplo.com:/ubuntu /local/ubuntu nfs rsize=8192,wsize=8192,timeo=14,intr
</programlisting>
      </para>
      </sect2>
      <sect2 id="nfs-references" status="complete">
        <title>Referências</title>
				<para><ulink url="http://nfs.sourceforge.net/">Perguntas frequentes sobre NFS em Linux</ulink></para>
      </sect2>
    </sect1>
	<sect1 id="dhcp" status="complete">
		<title>Protocolo de Configuração Dinâmica da Máquina <emphasis role="italics">Dynamic Host Configuration Protocol</emphasis> (DHCP)</title>
            <para>O Protocolo de Configuração Dinâmica da Máquina <emphasis role="italics">Dynamic Host Configuration Protocol</emphasis> (DHCP) é um serviço de rede que permite que as máquinas recebam as configurações de rede a partir de um servidor, em vez de ser necessário configurar cada uma individualmente. Os computadores configurados como clientes do DHCP não têm controlo sobre as configurações que recebem desse servidor, e a configuração é transparente para o utilizador do computador.</para>
            <para>As configurações mais comuns fornecidas por um servidor DHCP a clientes DHCP incluem:</para>
            <itemizedlist spacing="compact">
                <listitem>
                    <para>Endereço-IP e Máscara de Rede</para>
                </listitem>
                <listitem>
                    <para>DNS</para>
                </listitem>
                <listitem>
                    <para>WINS</para>
                </listitem>
            </itemizedlist>
            <para>Contudo, um servidor DHCP pode também disponibilizar propriedades como:</para>
            <itemizedlist spacing="compact">
                <listitem>
                    <para>Nome do Anfitrião</para>
                </listitem>
                <listitem>
                    <para>Nome de Domínio</para>
                </listitem>
                <listitem>
                    <para>Porta de Ligação por Omissão <emphasis role="italics">Default Gateway</emphasis></para>
                </listitem>
                <listitem>
                    <para>Servidor horário</para>
                </listitem>
                <listitem>
                    <para>Servidor de Impressão</para>
                </listitem>
            </itemizedlist>
            <para>A vantagem de usar o DHCP é a de automatizar alterações na rede, por exemplo a alteração do nome do servidor de domínios (DNS), só necessita de ser realizada no servidor de DHCP, e todas as máquinas da rede serão reconfiguradas automaticamente da próxima vez que os seus clientes DHCP sondarem por informações. Adicionalmente é mais fácil adicionar computadores à rede, já que não é necessário verificar a disponibilidade de um endereço IP. Da mesma forma conflitos na atribuição de endereços IP são também reduzidos.</para>
            <para>Um servidor de DHCP pode fornecer configurações usando dois métodos:</para>
            <variablelist>
                <varlistentry>
                    <term>Endereço MAC</term>
                    <listitem>
                        <para>Este método implica usar o DHCP para identificar endereços únicos de hardware de cada dispositivo de rede ligado na rede, e indicar continuamente uma configuração única e constante cada vez que um cliente DHCP realiza uma solicitação ao servidor DHCP usando esse dispositivo de rede.</para>
                    </listitem>
                </varlistentry>
                <varlistentry>
                    <term>Gama de endereços <emphasis role="italics">Address Pool</emphasis></term>
                    <listitem>
                        <para>Este método implica definir uma gama (pool) de endereços IP a partir da qual os clientes DHCP são fornecidos, com propriedades e configurações dinâmicas, e numa lógica de servir primeiro o primeiro a chegar (first come first serve). Quando um cliente DHCP abandona a rede por um determinado período de tempo, a configuração expira, e o endereço é devolvido à gama dos disponíveis para ser utilizado por outro cliente DHCP.</para>
                    </listitem>
                </varlistentry>
            </variablelist>
            <para>O Ubuntu é fornecido com o servidor e o cliente DHCP. O servidor é o <application>dhcpd</application> (dynamic host configuration protocol daemon). O cliente fornecido com o Ubuntu é o <application>dhclient</application> e deve ser instalado em todas as máquinas que requeiram uma configuração automática. Ambos os programas são fáceis de instalar e configurar, e são iniciados automáticamente no arranque do sistema.</para>
      <sect2 id="dhcp-installation" status="complete">
        <title>Instalação</title>
          <para>Num terminal, digite o seguinte comando para instalar o <application>dhcpd</application>:</para>
          <para>
<screen>
<command>sudo apt-get install dhcpd</command>
</screen>
          </para>
          <para>Vai obter a resposta seguinte, que explica o que fazer de seguida:</para>
          <screen>
Por favor note que se está a instalar o servidor DHCP pela primeira
vez necessita configurá-lo. Por favor pare (/etc/init.d/dhcp stop)
o serviço de DHCP, edite o /etc/dhcpd.conf para corresponder às
suas configurações e necessidades, e reinicie o serviço DHCP
(/etc/init.d/dhcp start).

Também necessita editar o /etc/default/dhcp para especificar os
interfaces de rede que o dhcpd deve escutar. Por omissão escuta o eth0.

NOTA: As mensagens do dhcpd são enviadas para o syslog.
Procure aí por mensagens de disgnóstico.

A iniciar o servidor DHCP: dhcpd falhou ao iniciar - verifique o syslog para diagnósticos.  </screen>
      </sect2>
      <sect2 id="dhcp-configuration" status="complete">
        <title>Configuração</title>
            <para>A mensagem de erro com que a instalação termina pode ser um pouco confusa, mas os passos seguintes vão ajudá-lo a configurar o serviço:</para>
            <para>De forma mais comum, o que pretende fazer é designar um endereço IP aleatório. Isto pode ser feito com configurações como as seguintes:</para>
            <screen>
# Exemplo de  /etc/dhcpd.conf
# (adicione comentários aqui) 
default-lease-time 600;
max-lease-time 7200;
option subnet-mask 255.255.255.0;
option broadcast-address 192.168.1.255;
option routers 192.168.1.254;
option domain-name-servers 192.168.1.1, 192.168.1.2;
option domain-name "mydomain.org";

subnet 192.168.1.0 netmask 255.255.255.0 {
range 192.168.1.10 192.168.1.100;
range 192.168.1.150 192.168.1.200;
} </screen>
            <para>Isto resulta num servidor DHCP atribuindo um endereço IP da gama 192.168.1.10-192.168.1.100 ou 192.168.1.150-192.168.1.200 . Esse endereço será atribuído por um período de 600 segundos, se o cliente não especificar outro intervalo de tempo. Caso contrário, o tempo máximo (permitido) de atribuição será de 7200 segundos. O servidor também "aconselhará" o cliente a utilizar a máscara de rede 255.255.255.0 , 192.168.1.255 como endereço de difusão, 192.168.1.254 como router/gateway e 192.168.1.1 e 192.168.1.2 clomo os seus servidores de DNS.</para>
            <para>Se necessitar de especificar um servidor WINS para os seus clientes Windows, vai ter de incluir a opção netbios-name-servers, por exemplo:</para>
            <screen>
option netbios-name-servers 192.168.1.1; </screen>
            <para>As configurações dhcpd foram retiradas do DHCP mini-HOWTO, que pode ser encontrado em <ulink url="http://www.tldp.org/HOWTO/DHCP/index.html">here</ulink>.</para>
      </sect2>
      <sect2 id="dhcp-references" status="complete">
        <title>Referências</title>
          <para>
            <ulink url="http://www.dhcp-handbook.com/dhcp_faq.html">Perguntas frequentes sobre o DHCP</ulink>
          </para>
      </sect2>
    </sect1>
	<sect1 id="dns" status="complete">
		<title>Serviço de Nomes de Domínios <emphasis role="italics">Domain Name Service</emphasis> DNS</title>
            <para>O Serviço de Nomes de Domínios <emphasis role="italics">Domain Name Service</emphasis> DNS é um serviço da Internet que cria um "mapa" que associa endereços IP e os nomes completos dos domínios, <emphasis role="italics">fully qualified domain names</emphasis> (FQDN). Deste modo o DNS diminui a necessidade de memorizar endereços IP. Os computadores que executam o DNS chamam-se <emphasis>servidores de nomes</emphasis> '<emphasis role="italics">name servers</emphasis>'. O Ubuntu vem com a a aplicação <application>BIND</application> (Berkley Internet Naming Daemon), o programa mais comum para manter um servidor de nomes em GNU/Linux.</para>
            <!-- things to do: IPv6-->
      <sect2 id="dns-installation" status="complete">
        <title>Instalação</title>
          <para>Na linha de comandos, digite o comando seguinte para instalar o <application>dns</application>:</para>
          <para>
<screen>
<command>sudo apt-get install bind</command>
</screen>
          </para>
      </sect2>
      <sect2 id="dns-configuration" status="complete">
        <title>Configuração</title>
          <para>Os ficheiros de configuração DNS são guardados no directório <filename>/etc/bind</filename>. O ficheiro de configuração principal é o <filename>/etc/bind/named.conf</filename>. O conteúdo do ficheiro de configuração por omissão é mostrado de seguida:</para>

          <para>
<programlisting>
// Este é o ficheiro principal de configuração do servidor BIND DNS.
//
// Por favor leia  /usr/share/doc/bind/README.Debian para informações sobre 
// a estrutura dos ficheiros de configuração do BIND na Debian para o BIND 8.2.1 
// e posteriores,  *ANTES* de alterar este ficheiro de configuração
//

include "/etc/bind/named.conf.options";

// reduzir pormenor do registo em assuntos fora do nosso controlo
logging {
	category lame-servers { null; };
	category cname { null; };
};


// inicializar o servidor com conhecimento dos servidores de raiz
zone "." {
        type hint;
        file "/etc/bind/db.root";
};

// Ser autoritário para as zonas de encaminhamento e retorno do localhost, e para
// zonas de broadcast seguindo a RFC 1912

zone "localhost" {
        type master;
        file "/etc/bind/db.local";
};

zone "127.in-addr.arpa" {
        type master;
        file "/etc/bind/db.127";
};

zone "0.in-addr.arpa" {
        type master;
        file "/etc/bind/db.0";
};

zone "255.in-addr.arpa" {
        type master;
        file "/etc/bind/db.255";
};

// Adicionar aqui definições de local 
include "/etc/bind/named.conf.local";
</programlisting>
          </para>

          <para>A linha <application>include</application> especifica o ficheiro que contém as opções de DNS. A linha <application>directory</application> no ficheiro de opções indica ao DNS onde procurar os ficheiros. Todos os ficheiros que o BIND usa serão relativos a este directório.</para>

          <para>O ficheiro chamado <filename>/etc/bind/db.root</filename> descreve o nome dos servidores root no mundo. Os servidores alteram com o tempo e devem ser actualizados de vez em quando.</para>

          <para>A secção <application>zone</application> define um servidor mestre, e está colocada num ficheiro mencionado com a etiqueta file. Cada ficheiro de zona contém três registos de recurso (RRs): um SOA RR, um NS RR e um  PTR RR. O SOA é o diminutivo de Start of Authority - Início de Autoridade. O "@" é uma anotação especial indicando a origem. NS é o RR de Servidor de Nome. O PTR é o apontador do nome de domínio. Para iniciar o servidor DNS, digite o seguinte comando num terminal ou linha de comandos:</para>
           <para>
<screen>
<command>sudo /etc/init.d/bind start</command>
</screen>
           </para>
          <para>Pode recorrer à documentação mencionada na secção de referências para detalhes.</para>
      </sect2>
      <sect2 id="dns-references" status="complete">
        <title>Referências</title>
          <para>
            <ulink url="http://www.tldp.org/HOWTO/DNS-HOWTO.html">DNS Como Fazer (HOWTO)</ulink>
          </para>
      </sect2>
    </sect1>
	<sect1 id="cups" status="complete">
		<title>Servidor de Impressão - CUPS</title>
          <para>O mecanismo principal de impressão e serviços associados no Ubuntu é o <emphasis role="bold">Common UNIX Printing System</emphasis> (CUPS). Este sistema de impressão é uma "camada" (layer) portável, disponível gratuitamente que se tornou o novo standard para impressão na maioria das distribuições GNU/Linux.</para>
          <para>O CUPS gere os trabalhos de impressão e filas de espera e oferece capacidade de impressão em rede usando o standard Internet Printing Protocol (IPP), oferecendo simultaneamente suporte para uma enorme diversidade de impressoras, desde agulhas a laser, e muitas outras. O CUPS suporta ainda o PostScript Printer Description (PPD) e a auto detecção de impressoras de rede, e possui um ambiente de configuração e administração muito simples e assente em tecnologia web.</para>
      <sect2 id="cups-installation" status="complete">
        <title>Instalação</title>
          <para>Para instalar o CUPS no seu computador Ubuntu, utilize simplesmente o comando <application>sudo</application> com o <application>apt-get</application> e indicar os pacotes a instalar como primeiro parâmetro. A instalação completa do CUPS tem muitas dependências de outros pacotes, mas todos eles podem ser indicados no mesmo comando. Digite o seguinte comando num terminal para instalar o CUPS:</para>
          <para>
<screen>
<command>sudo apt-get install cupsys cupsys-client</command>
</screen>
          </para>
          <para>Após autenticação com a sua palavra passe (com privilégios de administrador), os pacotes devem ser descarregados e instalados sem erros. Ao concluir a instalação, o servidor CUPS será iniciado automaticamente. Para resolução de problemas pode aceder aos erros do servidor CUPS através do ficheiro de registo de eventos <filename>/var/log/cups/error_log</filename>. Se o registo de erros não apresentar informação suficiente para ajudar a resolver os problemas que encontrou, o detalhe dos registos do CUPS pode ser aumentado alterando a directiva <emphasis role="bold">LogLevel</emphasis> no ficheiro de configuração, mencionado acima, de "info" para "debug" ou até "debug2" que registará todos os eventos. Se efectuar esta alteração, lembre-se de repor a directiva original ap+os resolver o problema, para impedir que o ficheiro de registo atinga um tamanho excessivo.</para>
      </sect2>
      <sect2 id="cups-configuration" status="complete">
        <title>Configuração</title>
          <para>O comportamento do Common UNIX Printing System é configurado através de directivas incluídas no ficheiro <filename>/etc/cups/cupsd.conf</filename>. O ficheiro de configuração do CUPS utiliza a mesma sintaxe que o ficheiro de configuração primário do servidor HTTP Apache, por isso, os utilizadores familiarizados com a edição desse ficheiro devem sentir-se à vontade ao editar o ficheiro de configuração do CUPS. Alguns exemplos de configurações que pode pretender alterar inicialmente são mostrados aqui.</para>
          <tip>
               <para>Antes de editar o ficheiro de configuração, deve fazer uma cópia do ficheiro original e protegê-la contra a escrita, desta forma vai ter as configurações originais como referência, e para reutilizar se necessário.</para>
               <para>Copie o ficheiro <filename>/etc/cups/cupsd.conf</filename> e proteja-o contra a escrita introduzindo os seguintes comandos num terminal:</para>
               </tip>
               <para>
<screen>
<command>sudo cp /etc/cups/cupsd.conf /etc/cups/cupsd.conf.original</command>
<command>sudo chmod a-w /etc/cups/cupsd.conf.original</command>
</screen>
               </para>
          <itemizedlist>
                <listitem>
                <para><emphasis role="bold">ServerAdmin</emphasis>: Para configurar o endereço de correio electrónico do administrador do servidor CUPS, edite simplesmente o ficheiro <filename>/etc/cups/cupsd.conf</filename> com o seu editor de texto favorito, e modifique a linha <emphasis role="italics">ServerAdmin</emphasis> colocando aí o respectivo endereço. Por exemplo, se você for o administrador do servidor CUPS e o seu endereço de correio electrónico for 'bjoy@somebigco.com', deve alterar a linha ServerAdmin para o seguinte:</para>
                <para>
<screen>
ServerAdmin bjoy@somebigco.com
</screen>
                </para>
                </listitem>
          </itemizedlist>
                <para>Para mais exemplos de directivas de configuração do ficheiro de configuração do servidor CUPS, consulte a página de manual de sistema associada digitando o seguinte comando num terminal:</para>
               <para>
<screen>
<command>man cupsd.conf</command>
</screen>
               </para>
                               <note>
                <para>Sempre que faça alterações ao ficheiro de configuração <filename>/etc/cups/cupsd.conf</filename>, precisa de reiniciar o servidor CUPS executando o comando seguinte num terminal:</para>
                </note>
                <para>
<screen>
<command>sudo /etc/init.d/cupsys restart</command>
</screen>
                </para>
	<para>Algumas configurações extra do servidor CUPS são feitas no ficheiro <filename>/etc/cups/cups.d/ports.conf</filename>:</para>
          <itemizedlist>
                <listitem>
                <para><emphasis role="bold">Listen</emphasis>: Por omissão no Ubuntu, o servidor CUPS apenas escuta o interface loopback no endereço IP <emphasis>127.0.0.1</emphasis>. Para instruir o servidor CUPS para escutar o endereço do endereço IP do interface de rede real, deve especificar o nome do computador ou o endereço IP, ou ainda opcionalmente, um par Endereço IP/Porta através da directiva Listen. Por exemplo, se o seu servidor CUPS estiver instalado numa rede local no endereço IP <emphasis role="italics">192.168.10.250</emphasis> e quer torná-lo acessível a outros sistemas nesta sub-rede, deve editar o ficheiro <filename>/etc/cups/cups.d/ports.conf</filename> e adicionar uma directiva Listen da seguinte forma:</para>
                <para>
<screen>
Listen 127.0.0.1:631           # existing loopback Listen
Listen /var/run/cups/cups.sock # existing socket Listen
Listen 192.168.10.250:631      # Listen on the LAN interface, Port 631 (IPP)
</screen>
                </para>
                <para>No exemplo acima, pode comentar ou remover a referência ao endereço de Loopback (127.0.0.1) se não pretender que o <application>cupsd </application> espere ligações nessa interface, mas espere ligações somente nas interfaces Ethernet da Rede de Área Local (LAN). Para activar a recepção de ligações em todas as interfaces de rede às quais um determinado nome de máquina está associado, incluindo o Loopback, pode criar uma entrada Listen para o nome de máquina <emphasis>socrates</emphasis> como a seguinte:</para>
                <para>
<screen>
Listen socrates:631 # Vigiar em todas as interfaces para o nome de máquina 'socrates'
</screen>
                </para> 
				<para>ou omitindo a directiva Listen e usando <emphasis>Port</emphasis> em seu lugar, como em:</para>
<para>
<screen>
Port 631 # Vigiar a porta 631 em todas as interfaces
</screen>
</para>
                </listitem>
	</itemizedlist>

      </sect2>
      <sect2 id="cups-references" status="complete">
        <title>Referências</title>
        <para>
        <ulink url="http://www.cups.org/">Página Web do CUPS</ulink>
        </para>
        </sect2>
    </sect1>
	<sect1 id="httpd" status="complete">
		<title>HTTPD - Servidor Web Apache2</title>
      <para>O Apache é o servidor Web mais utilizado nos sistemas GNU/Linux. Os servidores Web são utilizados para apresentar as páginas Web solicitadas pelos computadores cliente. Os clientes habitualmente solicitam e visualizam as páginas Web utilizando navegadores <emphasis role="italics">browsers</emphasis> tais como <application>Firefox</application>, <application>Opera</application> ou <application>Mozilla</application></para>
      <para>Os utilizadores indicam um endereço <emphasis role="italics">Uniform Resource Locator</emphasis> (URL) para um servidor Web como o seu nome completo <emphasis role="italics">Fully Qualified Domain Name</emphasis> (FQDN) e caminho para o recurso requerido. Por exemplo, para visualizar a página principal <ulink url="http://www.ubuntu.com">Ubuntu Web site</ulink> o utilizador indica apenas o FQDN. Para solicitar informação acerca <ulink url="http://www.ubuntu.com/support/supportoptions/paidsupport">suporte pago</ulink>, o utilizador indica o FQDN seguido do caminho.</para>
      <para>O protocolo mais utilizado para transferir páginas Web é o Protocolo de Transferência de Hiper Texto <emphasis role="">Hyper Text Transfer Protocol</emphasis> (HTTP). Protocolos tais como o Protocolo de Transferência de Hiper Texto sobre Camadas de Ligação Segura <emphasis role="">Hyper Text Transfer Protocol over Secure Sockets Layer</emphasis> (HTTPS), ou o Protocolo de transferência de Ficheiros <emphasis role="">File Transfer Protocol</emphasis> (FTP), que é um protocolo utilizado para enviar e receber ficheiros entre computadores, são também suportados.</para>
      <para>Os servidores de Web Apache são frequentemente utilizados conjuntamente com o motor de base de dados <application>MySQL</application>, a linguagem HyperText Preprocessor (<application>PHP</application>), e outras linguagens populares como <application>Python</application> e <application>Perl</application>. Esta configuração é designada por LAMP (Linux, Apache, MySQL and Perl/Python/PHP) e constitui uma plataforma poderosa e robusta para o desenvolvimento e distribuição de aplicações baseadas na Web.</para>
<sect2 id="http-installation" status="complete">
  <title>Instalação</title>
                  <para>O servidor web Apache2 está disponível no Ubuntu Linux. Para instalar o Apache2:</para>
          <procedure><step>
                	  <para>Num terminal escreva o seguinte comando: <screen>
<command>sudo apt-get install apache2</command>
</screen></para>
			</step>
	    </procedure>
      </sect2>
      <sect2 id="http-configuration" status="complete">
        <title>Configuração</title>
          <para>O Apache é configurado adicionando <emphasis>directivas</emphasis> em ficheiros de configuração de texto simples. O ficheiro de configuração principal é o <filename>apache2.conf</filename>. Adicionalmente, outros ficheiros de configuração podem ser adicionados utilizando a directiva <emphasis>Include</emphasis>, podendo ser utilizados caractéres de escape para adicionar muitos ficheiros de configuração. Qualquer directiva pode ser colocada em qualquer destes ficheiros de configuração. Alterações nos ficheiros de configuração principais só são reconhecidas pelo Apache2 quando ele for iniciado ou reiniciado.</para>

          <para>O servidor lê também um ficheiro contendo tipos de documentos mime; este ficheiro é definido pela directiva <emphasis>TypesConfig</emphasis>, e tem o nome <filename>mime.types</filename> por omissão.</para>

          <para>O ficheiro de configuração do Apache2, por omissão, é o <filename>/etc/apache2/apache2.conf</filename> . Este ficheiro pode ser editado para configurar o servidor Apache2. Podem ser configurados o número da porta, a pasta de documentos de raiz, módulos, ficheiros de registo, máquinas virtuais, etc..</para>
        <sect3 id="http-basic-settings" status="complete">
          <title>Configurações Básicas</title>
            <para>Esta secção explica os parâmetros de configuração essenciais do servidor Apache2. Utilize <ulink url="http://httpd.apache.org/docs/2.0/">Documentação Apache2 </ulink> para mais detalhes.</para>

             <itemizedlist>

             <listitem><para>
             Apache2 ships with a virtual-host-friendly default configuration.
			 That is, it is configured with a single default virtual host (using
			 the <emphasis>VirtualHost</emphasis> directive) which can modified or used as-is if you
			 have a single site, or used as a template for additional virtual hosts
			 if you have multiple sites.  If left alone, the default virtual host
			 will serve as your default site, or the site users will see if the
			 URL they enter does not match the <emphasis>ServerName</emphasis> directive of any of your 
			 custom sites.  To modify the default virtual host, edit the file
			 <filename>/etc/apache2/sites-available/default</filename>.  If you
			 wish to configure a new virtual host or site, copy that file into the
			 same directory with a name you choose.  For example,
			 <command>sudo cp /etc/apache2/sites-available/default /etc/apache2/sites-available/mynewsite</command>
			 Edit the new file to configure the new site using some of the directives
			 described below.
            </para></listitem>

             <listitem><para>
			 The <emphasis>ServerAdmin</emphasis> directive specifies the email address to be advertised
			 for the server's administrator.  The default value is webmaster@localhost.
			 This should be changed to an email address that is delivered to you (if you
			 are the server's administrator).  If your website has a problem, Apache2
			 will display an error message containing this email address to report the
			 problem to.  Find this directive in your site's configuration file in
			 /etc/apache2/sites-available.
			 </para></listitem>

             <listitem><para>
             The <emphasis>Listen</emphasis> directive specifies the port, and optionally the IP address,
			 Apache2 should listen on. If the IP address is not specified, Apache2
			 will listen on all IP addresses assigned to the machine it runs on.
			 The default value for the Listen directive is 80.  Change this to
			 127.0.0.1:80 to cause Apache2 to listen only on your loopback interface
			 so that it will not be available to the Internet, to (for example) 81
			 to change the port that it listens on, or leave it as is for normal
			 operation.  This directive can be found and changed in its own file,
			 <filename>/etc/apache2/ports.conf</filename>
             </para></listitem>

			 <listitem><para>
			 The <emphasis>ServerName</emphasis> directive is optional and specifies what FQDN your
			 site should answer to.  The default virtual host has no ServerName
			 directive specified, so it will respond to all requests that do not
			 match a ServerName directive in another virtual host.  If you have
			 just acquired the domain name ubunturocks.com and wish to host it on
			 your Ubuntu server, the value of the ServerName directive in your
			 virtual host configuration file should be ubunturocks.com.  Add this
			 directive to the new virtual host file you created earlier 
			 (<filename>/etc/apache2/sites-available/mynewsite</filename>).
			 
			 <tip><para>You may also want your site to respond to www.ubunturocks.com, since
				many users will assume the www prefix is appropriate.  Use the
				<emphasis>ServerAlias</emphasis> directive for this.  You may also use wildcards in the
				ServerAlias directive.  For example,
				<command>ServerAlias *.ubunturocks.com</command>
				will cause your site to respond to any domain request ending in
				.ubunturocks.com.
			 </para></tip>
			 </para></listitem>

			 <listitem><para>
			 The <emphasis>DocumentRoot</emphasis> directive specifies where Apache should look for the
			 files that make up the site.  The default value is /var/www.  No site
			 is configured there, but if you uncomment the <emphasis>RedirectMatch</emphasis> directive
			 in <filename>/etc/apache2/apache2.conf</filename> requests will be
			 redirected to /var/www/apache2-default where the default Apache2 site
			 awaits.  Change this value in your site's virtual host file, and
			 remember to create that directory if necessary!
			 </para></listitem>
            </itemizedlist>

			<tip><para>
			The /etc/apache2/sites-available directory is <emphasis role="bold">
			not</emphasis> parsed by Apache2.  Symbolic links in /etc/apache2/sites-enabled
			point to "available" sites.  Use the a2ensite (Apache2
			Enable Site) utility to create those symbolic links, like so:
			<command>sudo a2ensite mynewsite</command>
			where your site's configuration file is <filename>
			/etc/apache2/sites-available/mynewsite</filename>.  Similarly, the
			a2dissite utility should be used to disable sites.
			</para></tip>

        </sect3>
        <sect3 id="default-settings" status="complete">
          <title>Configurações Predefinidas</title>
            <para>
             This section explains configuration of the Apache2 server
             default settings.  For example, if you add a virtual host, 
             the settings you configure for the virtual host take
             precedence for that virtual host. For a directive not
             defined within the virtual host settings, the default
             value is used.
            </para>

            <itemizedlist>
            <listitem>
            <para>
             The <emphasis>DirectoryIndex</emphasis> is the default page served by the
             server when a user requests an index of a directory by
             specifying a forward slash (/) at the end of the directory
             name.</para>

             <para>For example, when a user requests the page
             http://www.example.com/this_directory/, he or she will
             get either the DirectoryIndex page if it exists, a
             server-generated directory list if it does not and the
			 Indexes option is specified, or a Permission Denied page
			 if neither is true.  The server will try to
             find one of the files listed in the DirectoryIndex
             directive and will return the first one it finds. If it
             does not find any of these files and if Options Indexes is
             set for that directory, the server will generate and
             return a list, in HTML format, of the subdirectories and
             files in the directory.  The default value, found in
			 <filename>/etc/apache2/apache2.conf</filename> is "
			 index.html index.cgi index.pl index.php index.xhtml".
			 Thus, if Apache2 finds a file in a requested directory
			 matching any of these names, the first will be displayed.
            </para>
            </listitem>

            <listitem>
            <para>
             The <emphasis>ErrorDocument</emphasis> directive allows you to specify a file
			 for Apache to use for specific error events.  For example,
			 if a user requests a resource that does not exist, a 404
			 error will occur, and per Apache2's default configuration,
			 the file <filename>/usr/share/apache2/error/HTTP_NOT_FOUND.html.var
			 </filename> will be displayed.  That file is not in the
			 server's DocumentRoot, but there is an Alias directive in
			 <filename>/etc/apache2/apache2.conf</filename> that redirects
			 requests to the /error directory to /usr/share/apache2/error/.
			 To see a list of the default ErrorDocument directives, use this
			 command:
			 <command>grep ErrorDocument /etc/apache2/apache2.conf</command>
            </para>
            </listitem>


            <listitem>
            <para>
             By default, the server writes the transfer log to the file
             /var/log/apache2/access.log. You can change this on a per-site
			 basis in your virtual host configuration files with the <emphasis>CustomLog</emphasis>
			 directive, or omit it to accept the default, specified in <filename>
			 /etc/apache2/apache2.conf</filename>.  You may also specify the file
			 to which errors are logged, via the <emphasis>ErrorLog</emphasis> directive, whose default
			 is <filename>/var/log/apache2/error.log</filename>.  These are kept
			 separate from the transfer logs to aid in troubleshooting problems
			 with your Apache2 server.  You may also specify the <emphasis>LogLevel</emphasis> (the
			 default value is "warn") and the <emphasis>LogFormat</emphasis> (see <filename>
			 /etc/apache2/apache2.conf</filename> for the default value).
			 </para>
            </listitem>

            <listitem>
            <para>
            Some options are specified on a per-directory basis rather than per-server.
			Option is one of these directives.  A Directory stanza is enclosed in 
			XML-like tags, like so:
			<screen><command>&lt;Directory /var/www/mynewsite&gt;
				...
			&lt;/Directory&gt;</command></screen>
			The Options directive within a Directory stanza accepts one or more of the
			following values (among others), separated by spaces:
            </para>
            <itemizedlist spacing="compact">
                <listitem>
                    <para><emphasis role="bold">ExecCGI</emphasis> - Permitir execução de scripts CGI. Os scripts CGI não são executados se esta opção não for escolhida. <tip><para>Grande parte dos ficheiros não devem ser executados como scripts CGI. Isso seria muito perigoso. Scripts CGI devem ser mantidos num directório separado e fora do DocumentoRaiz, e apenas esse directório deve ter a opção ExecCGI definida. Isto é o predefinido, e a localização por defeito dos scripts CGI é /usr/lib/cgi-bin.</para></tip></para>
                </listitem>
                <listitem>
                    <para><emphasis role="bold">Includes</emphasis> - Allow server-side includes.
					Server-side includes allow an HTML file to <emphasis>
					include</emphasis> other files.  This is not a common option.  See
					<ulink url="http://httpd.apache.org/docs/2.0/howto/ssi.html">the Apache2
					SSI Howto</ulink> for mor information.</para>
                </listitem>
                <listitem>
                    <para><emphasis role="bold">IncludesNOEXEC</emphasis> - Allow server-side includes,
                    but disable the #exec and #include commands in CGI
                    scripts.</para>
                </listitem>
                <listitem>
                    <para>
                    <emphasis role="bold">Indexes</emphasis> - Display a formatted list of the
                    directory's contents, if no DirectoryIndex (such as index.html) exists in the 
					requested directory.
					<caution><para>For security reasons, this should usually not be set, and certainly
					should not be set on your DocumentRoot directory.  Enable this option carefully on
					a per-directory basis only if you are certain you want users to see the entire
					contents of the directory.</para></caution>
                    </para>
                </listitem>
                <listitem>
                    <para>
                    <emphasis role="bold">Multiview</emphasis> - Support content-negotiated multiviews;
                    this option is disabled by default for security reasons.  See the <ulink url="http://httpd.apache.org/docs/2.0/mod/mod_negotiation.html#multiviews">Apache2
					documentation on this option</ulink>.
                    </para>
                </listitem>
                <listitem>
                    <para>
                    <emphasis role="bold">SymLinksIfOwnerMatch</emphasis> - Only follow symbolic links
                    if the target file or directory has the same owner as the link.
                    </para>
                </listitem>
            </itemizedlist>

            </listitem>
            </itemizedlist>
        </sect3>
        <sect3 id="virtual-hosts-settings" status="complete">

          <title>Virtual Hosts Settings</title>
            <para>
			Virtual hosts allow you to run different servers for different IP addresses, different host 
			names, or different ports on the same machine. For example, you can run the website for 
			http://www.example.com and http://www.anotherexample.com on the same Web server using virtual 
			hosts. This option corresponds to the &lt;VirtualHost&gt; directive for the default virtual 
			host and IP-based virtual hosts. It corresponds to the &lt;NameVirtualHost&gt; directive for 
			a name-based virtual host.
			</para>

			<para>
			The directives set for a virtual host only apply to that particular virtual host. If a 
			directive is set server-wide and not defined within the virtual host settings, the default 
			setting is used. For example, you can define a Webmaster email address and not define 
			individual email addresses for each virtual host. 
    		</para>
 
 			<para>
			Set the DocumentRoot directive to the directory that contains the root document (such as 
			index.html) for the virtual host. The default DocumentRoot is <filename>/var/www</filename>.
			</para>

			<para>
			The ServerAdmin directive within the VirtualHost stanza is email the address used in the 
			footer of error pages if you choose to show a footer with an email address on the error pages.
			</para>

        </sect3>
        <sect3 id="server-settings" status="complete">
          <title>Server Settings</title>
            <para>
This section explains how to configure basic server settings.</para>
                    <para><emphasis role="bold">LockFile</emphasis> - The LockFile directive sets the path 
					to the lockfile used when the server is compiled with either USE_FCNTL_SERIALIZED_ACCEPT 
					or USE_FLOCK_SERIALIZED_ACCEPT. It must be stored on the local disk. It should be left 
					to the default value unless the logs directory is located on an NFS share. If this is 
					the case, the default value should be changed to a location on the local disk and to a 
					directory that is readable only by root. </para>

					<para><emphasis role="bold">PidFile</emphasis> - The PidFile directive sets the file in which the server 
					records its process ID (pid). This file should only be readable by root. In most cases, it should be left 
					to the default value.</para>

<para><emphasis role="bold">User</emphasis> - The User directive sets the userid used by the server to answer requests. This 
setting determines the server's access. Any files inaccessible to this user will also be inaccessible to your website's visitors. 
The default value for User is www-data.  </para>
            <warning>
            <para>
 Unless you know exactly what you are doing, do not set the User directive to root. Using root as the User will create large security holes for your Web server.  </para>
            </warning>
 <para>The Group directive is similar to the User directive. Group sets the group under which the server will answer requests. The default group is also www-data.</para>

        </sect3>
        <sect3 id="apache-modules" status="complete">
          <title>Módulos Apache</title>
              <para>

              Apache is a modular server. This implies that only the most
              basic functionality is included in the core server. Extended
              features are available through modules which can be loaded
              into Apache. By default, a base set of modules is included in
              the server at compile-time. If the server is compiled to use
              dynamically loaded  modules, then modules can be compiled
              separately, and added at any time using the LoadModule
              directive. Otherwise, Apache must be recompiled to add or
              remove modules. Ubuntu compiles Apache2 to allow the dynamic
			  loading of modules.  Configuration directives may be conditionally
	      included on the presence of a particular module by enclosing
              them in an &lt;IfModule&gt; block.

              You can install additional Apache2 modules and use them
              with your Web server. You can install Apache2
              modules using the <application>apt-get</application>
              command. For example, to install the Apache2 module
              for MYSQL authentication, you can run the
                following command from a terminal prompt:</para>
                
                <para>
<screen>
<command>sudo apt-get install libapache2-mod-auth-mysql</command>
</screen>
                </para>
                <para>
                Once you install the module, the module will
                be available in the
                <filename>/etc/apache2/mods-available</filename> directory. You can use
              the <application>a2enmod</application> command to
              enable a module. You can use
              the <application>a2dismod</application> command to
              disable a module. Once you enable the module,
              the module will be available in the
              the <filename>/etc/apache2/mods-enabled</filename> directory.
              </para>
        </sect3>
      </sect2>
      <sect2 id="https-configuration" status="complete">
        <title>Configuração HTTPS</title>
          <para>
           The <application>mod_ssl</application> module adds
           an important feature to the Apache2 server - the ability to
           encrypt communications.  Thus, when your browser is
           communicating using SSL encryption, the
           https:// prefix is used at the beginning of the Uniform
           Resource Locator (URL) in the browser navigation bar.
          </para>

          <para>
          The <application>mod_ssl</application> module is available in
          <application>apache2-common</application> package. If you have
          installed this package, you can run the following command from a terminal prompt to
          enable the <application>mod_ssl</application> module:
          </para>

          <para>
<screen>
<command>sudo a2enmod ssl</command>
</screen>
          </para>
        <sect3 id="certificates-and-security" status="complete">
          <title>Certificados e Segurança</title>
            <para>
              To set up your secure server, use public key cryptography to
              create a public and private key pair. In most cases, you
              send your certificate request (including your public key),
              proof of your company's identity, and payment to a
              Certificate Authority (CA). The
              CA verifies the certificate request and your identity, and
              then sends back a certificate for your secure server. 
            </para>
             <para>
             Alternatively, you can create your own self-signed
             certificate. Note, however, that self-signed certificates
             should not be used in most production environments.
             Self-signed certificates are not automatically accepted by
             a user's browser.  Users are prompted by the browser to
             accept the certificate and create the secure connection.
             </para>

             <para>
              Once you have a self-signed certificate or a signed
              certificate from the CA of your choice, you need to
              install it on your secure server.
             </para>
        </sect3>
        <sect3 id="types-of-certificates" status="complete">
          <title>Types of Certificates</title>
            <para>
             You need a key and a certificate to operate your secure
             server, which means that you can either generate a
             self-signed certificate or purchase a CA-signed
             certificate.  A CA-signed certificate provides two important
              capabilities for your server:
            </para>

            <itemizedlist>
            <listitem>
            <para>
            Browsers (usually) automatically recognize the certificate
            and allow a secure connection to be made without prompting
            the user.
            </para>
            </listitem>
            <listitem>
            <para>
             When a CA issues a signed certificate, it is
             guaranteeing the identity of the organization that is
             providing the web pages to the browser.
            </para>
            </listitem>
            </itemizedlist>

            <para>
             Most Web browsers that support SSL have a list of CAs whose
             certificates they automatically accept. If a browser
             encounters a certificate whose authorizing CA is not in the
             list, the browser asks the user to either accept or decline
             the connection.
            </para>
            <para>
             You can generate a self-signed certificate for your secure server, but
            be aware that a self-signed certificate does not provide the same
            functionality as a CA-signed certificate. A self-signed certificate is
            not automatically recognized by most Web browsers, and a self-signed
            certificate does not provide any guarantee concerning the identity of
            the organization that is providing the website. A CA-signed certificate
            provides both of these important capabilities for a secure server. 
            The process of getting a certificate from a CA is fairly
            easy. A quick overview is as follows:
            </para>

            <orderedlist>
            <listitem>
               <para>Create a private and public encryption key pair.</para>
            </listitem>
            <listitem>
                 <para>Create a certificate request based on the public key. The
              certificate request contains information about your server and the
              company hosting it.</para>
            </listitem>
            <listitem>
                 <para>Send the certificate request, along with documents proving your
              identity, to a CA. We cannot tell you which certificate authority to
              choose. Your decision may be based on your past experiences, or on the
              experiences of your friends or colleagues, or purely on monetary
              factors.</para>

                    <para>Once you have decided upon a CA, you need to follow the
              instructions they provide on how to obtain a certificate
              from them.</para>
            </listitem>
            <listitem>
               <para>When the CA is satisfied that you are indeed who you claim to be,
            they send you a digital certificate.</para>
            </listitem>
            <listitem>
               <para>Install this certificate on your secure server, and begin handling
            secure transactions. </para>
            </listitem>
            </orderedlist>

            <para>Whether you are getting a certificate from a CA or generating your own
            self-signed certificate, the first step is to generate a key.
            </para>
        </sect3>
        <sect3 id="generating-a-csr" status="complete">
          <title>Generating a Certificate Signing Request (CSR)</title>
            <para>
            To generate the Certificate Signing Request (CSR), you should create your
            own key. You can run the following command from a terminal prompt to create the
            key:
            </para>

            <para>
<screen>
<command>openssl genrsa -des3 -out server.key 1024</command>
</screen>
            </para>
<programlisting>
Generating RSA private key, 1024 bit long modulus
.....................++++++
.................++++++
unable to write 'random state'
e is 65537 (0x10001)
Enter pass phrase for server.key:
</programlisting>

        <para>
        You can now enter your passphrase. For best security, it should
        at least contain eight characters. The minimum length when
		specifying -des3 is four characters. It should include numbers
        and/or punctuation and not be a word in a dictionary. Also
        remember that your passphrase is case-sensitive. 
        </para>

        <para>
        Re-type the passphrase to verify. Once you have re-typed it
        correctly, the server key is generated and stored in
        <filename>server.key</filename> file.
        </para>

        <warning>
        <para>
        You can also run your secure web server without a passphrase.
        This is convenient because you will not need to enter the
        passphrase every time you start your secure web server. But it
        is highly insecure and a compromise of the key means a
        compromise of the server as well.
        </para>
        </warning>

        <para>
        In any case, you can choose to run your secure web server without
        a passphrase by leaving out the -des3 switch in the generation
        phase or by issuing the following command at a terminal prompt:
        </para>

        <para>
<screen>
<command>openssl rsa -in server.key -out server.key.insecure</command>
</screen>
        </para>
        <para>
        Once you run the above command, the insecure key will be stored
        in the <filename>server.key.insecure</filename> file. You can use this
        file to generate the CSR without passphrase.
        </para>

        <para>
        To create the CSR, run the following command at a terminal prompt:
        </para>

        <para>
<screen>
<command>openssl req -new -key server.key -out server.csr</command>
</screen>
        </para>

        <para>It will prompt you enter the passphrase. If you enter the
        correct passphrase, it will prompt you to enter Company Name,
        Site Name, Email Id, etc. Once you enter all these details, your
        CSR will be created and it will be stored in the
        <filename>server.csr</filename> file. You can submit this CSR file
        to a CA for processing. The CAN will use this CSR file and issue
        the certificate. On the other hand, you can create self-signed
        certificate using this CSR.</para>

        </sect3>
        <sect3 id="creating-a-self-signed-certificate" status="complete">
          <title>Creating a Self-Signed Certificate</title>
            <para>
            To create the self-signed certificate, run the
            following command at a terminal prompt:
            </para>

            <para>
<screen>
<command>openssl x509 -req -days 365 -in server.csr -signkey server.key -out server.crt</command>
</screen>
            </para>

            <para>The above command will prompt you to enter the
            passphrase. Once you enter the correct passphrase, your
            certificate will be created and it will be stored in the
            <filename>server.crt</filename> file.  </para>
        <warning>
        <para>
            If your secure server is to be used in a production environment, you
            probably need a CA-signed certificate.  It is not
            recommended to use self-signed certificate.
        </para>
        </warning>
        </sect3>
        <sect3 id="installing-the-certificate" status="complete">
          <title>Instalação do Certificado</title>

            <para>You can install the key file
            <filename>server.key</filename> and certificate file
            <filename>server.crt</filename> or the certificate file issued
            by your CA by running following commands at a terminal prompt:
            </para>
            <para>
<screen>
<command>sudo cp server.crt /etc/ssl/certs</command>
<command>sudo cp server.key /etc/ssl/private</command>
</screen>
            </para>
            <para>
            You should add the following four lines to the
            <filename>/etc/apache2/sites-available/default</filename>
            file or the configuration file for your secure virtual
			host. You should place them in the <emphasis>VirtualHost</emphasis> section. They
            should be placed under the <emphasis>DocumentRoot</emphasis> line:
            </para>
<programlisting>
SSLEngine on

SSLOptions +FakeBasicAuth +ExportCertData +CompatEnvVars +StrictRequire

SSLCertificateFile /etc/ssl/certs/server.crt
SSLCertificateKeyFile /etc/ssl/private/server.key
</programlisting>
          
            <para>
            HTTPS should listen on port number 443. You should add the
            following line to the <filename>/etc/apache2/ports.conf</filename>
            file:
            </para>
<programlisting>
Listen 443
</programlisting>

        </sect3>
        <sect3 id="accessing-the-server" status="complete">
          <title>Accessing the Server</title>
            <para>
            Once you install your certificate, you should restart your
            web server. You can run the following command at a terminal prompt to
            restart your web server:
            </para>
            <para>
<screen>            
<command>sudo /etc/init.d/apache2 restart</command>
</screen>
            </para>
        <note><para>
        You should remember and enter the passphrase every time you
        start your secure web server.
        </para></note>

            <para>You will be prompted to enter the passphrase. Once you
            enter the correct passphrase, the secure web server will be
            started. You can access the secure server pages by typing
            https://your_hostname/url/ in your
            browser address bar.</para>

        </sect3>
      </sect2>
      <sect2 id="http-references" status="complete">
        <title>Referências</title>
          <para>
          <ulink url="http://httpd.apache.org/docs/2.0/">Documentação Apache2</ulink>
          </para>
          <para>
          <ulink url="http://www.modssl.org/docs/">Documentação Mod SSL</ulink>
          </para>
      </sect2>
    </sect1>
	
	<sect1 id="squid" status="complete">
		<title>Squid - Proxy Server</title>
          <para>
          Squid is a full-featured web proxy cache server application which provides proxy and cache services for Hyper Text
          Transport Protocol (HTTP), File Transfer Protocol (FTP), and other popular network protocols.  Squid can implement
          caching and proxying of Secure Sockets Layer (SSL) requests and caching of Domain Name Server (DNS) lookups, and perform
          transparent caching. Squid also supports a wide variety of caching protocols, such as Internet Cache Protocol, (ICP)
          the Hyper Text Caching Protocol, (HTCP) the Cache Array Routing Protocol (CARP), and the Web Cache Coordination 
          Protocol. (WCCP) 
          </para>
          <para>
          The Squid proxy cache server is an excellent solution to a variety of proxy and caching server needs, and scales from
          the branch office to enterprise level networks while providing extensive, granular access control mechanisms and
          monitoring of critical parameters via the Simple Network Management Protocol (SNMP).  When selecting a computer system
          for use as a dedicated Squid proxy, or caching servers, ensure your system is configured with a large amount of physical
          memory, as Squid maintains an in-memory cache for increased performance.
          </para>
      <sect2 id="squid-installation" status="complete">
        <title>Instalação</title>
          <para>Num terminal, insira o seguinte comando para instalar o servidor Squid:</para>
          <para>
<screen>
<command>sudo apt-get install squid squid-common</command>
</screen>
          </para>
      </sect2>
      <sect2 id="squid-configuration" status="complete">
        <title>Configuração</title>
          <para>
            Squid is configured by editing the directives contained within the <filename>/etc/squid/squid.conf</filename> configuration file.
            The following examples illustrate some of the directives which may be modified to affect the behavior of the Squid server.
            For more in-depth configuration of Squid, see the References section. 
          </para>
             <tip>
               <para>Prior to editing the configuration file, you should make a copy of the original file and protect it 
               from writing so you will have the original settings as a reference, and to re-use as necessary.
               </para>
               <para>Copy the <filename>/etc/squid/squid.conf</filename> file and protect it from writing with the following commands entered at a terminal prompt:
               </para>
	     </tip>
               <para>
<screen>
<command>sudo cp /etc/squid/squid.conf /etc/squid/squid.conf.original</command>
<command>sudo chmod a-w /etc/squid/squid.conf.original</command>
</screen>
               </para> 
	        <para>
           <itemizedlist>
               <listitem>
                  <para>
                  To set your Squid server to listen on TCP port 8888 instead of the default TCP port 3128, change
                  the http_port directive as such:
                  </para>
                  <para>http_port 8888</para>
               </listitem>
	            <listitem>
                  <para>
                  Change the visible_hostname directive in order to give the Squid server a specific hostname.  This hostname
                  does not necessarily need to be the computer's hostname. In this example it is set to <emphasis>weezie</emphasis>
                  </para>
                  <para>visible_hostname weezie</para>
               </listitem>
               <listitem>
                  <para>
                     Again, Using Squid's access control, you may configure use of Internet services proxied by Squid
                     to be available only users with certain Internet Protocol (IP) addresses.  For example, we willll illustrate access 
                     by users of the 192.168.42.0/24 subnetwork only:
                  </para>
                  <para>Adicione o seguinte no <emphasis role="bold">fim</emphasis> da secção ACL do seu ficheiro <filename>/etc/squid/squid.conf</filename>:</para>
                  <para>acl fortytwo_network src 192.168.42.0/24</para>
                  <para>Depois, adicione o seguinte no <emphasis role="bold">início</emphasis> da secção http_access do seu ficheiro <filename>/etc/squid/squid.conf</filename>:</para>
                  <para>http_access allow fortytwo_network</para>
               </listitem>
               <listitem>
                  <para>
                     Using the excellent access control features of Squid, you may configure use of Internet services proxied by Squid
                     to be available only during normal business hours.  For example, we'll illustrate access by employees of a business
                     which is operating between 9:00AM and 5:00PM, Monday through Friday, and which uses the 10.1.42.0/42 subnetwork:
                  </para>
                  <para>Adicione o seguinte no <emphasis role="bold">fim</emphasis> da secção ACL do seu ficheiro <filename>/etc/squid/squid.conf</filename>:</para>
                  <para>
                     acl biz_network src 10.1.42.0/24
                     acl biz_hours time M T W T F 9:00-17:00
                  </para>
                  <para>Depois, adicione o seguinte no <emphasis role="bold">início</emphasis> da secção http_access do seu ficheiro <filename>/etc/squid/squid.conf</filename>:</para>
                  <para>
                     http_access allow biz_network biz_hours
                  </para>
               </listitem>
          </itemizedlist>
          </para>
          <note>
	  <para>
          After making changes to the <filename>/etc/squid/squid.conf</filename> file, save the file and restart the <application>squid</application> 
          server application to effect the changes using the following command entered at a terminal prompt:
          </para>
          </note>
          <para>
<screen>
<command>sudo /etc/init.d/squid restart</command>
</screen>
          </para>
      </sect2>
      <sect2 id="squid-references" status="complete">
      <title>Referências</title>
      <para>
      <ulink url="http://www.squid-cache.org/">Squid Website</ulink>
      </para>
      </sect2>
    </sect1>
	<sect1 id="version-control-system" status="complete">
		<title>Version Control System</title>
          <para>
Version control is the art of managing changes to information. It has long been a critical tool for programmers, who typically spend their time making small changes to software and then undoing those changes the next day. But the usefulness of version control software extends far beyond the bounds of the software development world. Anywhere you can find people using computers to manage information that changes often, there is room for version control.</para>
<para>
          </para>
      <sect2 id="subversion" status="complete">
        <title>Subversion</title>
          <para>
Subversion is an open source version control system. Using Subversion, you can record the history of source files and documents. It manages files and directories over time. A tree of files is placed into a central repository. The repository is much like an ordinary file server, except that it remembers every change ever made to files and directories.
          </para>
        <sect3 id="subversion-installation" status="complete">
          <title>Instalação</title>
            <para>
To access Subversion repository using the HTTP protocol, you must install and 
configure a web server. Apache2 is proven to work with Subversion. Please 
refer to the HTTP subsection in the Apache2 section to install and configure 
Apache2.  To access the Subversion repository using the HTTPS protocol, you 
must install and configure a digital certificate in your Apache 2 web server. 
Please refer to the HTTPS subsection in the Apache2 section to install and 
configure the digital certificate.
						</para>
						<para>
		To install Subversion, run the following command from a terminal prompt:
            </para>
	    <para>
<screen>
<command>sudo apt-get install subversion libapache2-svn</command>
</screen>
	    </para>

        </sect3>
        <sect3 id="subversion-configuration" status="complete">
          <title>Configuração de Servidor</title>
            <para>
	This step assumes you have installed above mentioned packages on your system. This section explains how to create a Subversion repository and access the project.</para>
			<sect4 id="create-svn-repos" status="complete">
				<title>Create Subversion Repository</title>
<para>The Subversion repository can be created using the following command from a terminal prompt:</para>

        <para>
<screen>
<command>svnadmin create /path/to/repos/project</command>
</screen>
        </para>
			</sect4>

        </sect3>
        <sect3 id="access-methods" status="complete">
          <title>Access Methods</title>
<para>Subversion repositories can be accessed (checked out) through many 
different methods --on local disk, or through various network protocols. 
A repository location, however, is always a URL. The table describes how 
different URL schemas map to the available access methods.</para>
				<table><title>Access Methods</title>

					<tgroup cols="2">
						<colspec colname="1"/>
						<colspec colname="2"/>
						<thead>
							<row>
								<entry><para>Esquema</para></entry>
								<entry><para>Método de Acesso</para></entry>
							</row>
						</thead>
						<tbody>
							<row>
								<entry><para>file://</para></entry>
								<entry><para>acesso directo ao repositório ( no disco local)</para></entry>
							</row>
							<row>
								<entry><para>http://</para></entry>
								<entry><para>Access via WebDAV protocol to Subversion-aware Apache2 web server</para></entry>
							</row>
							<row>
								<entry><para>https://</para></entry>
								<entry><para>O mesmo que http://, mas com encriptação SSL</para></entry>
							</row>
							<row>
								<entry><para>svn://</para></entry>
								<entry><para>Access via custom protocol to an svnserve server</para></entry>
							</row>
							<row>
								<entry><para>svn+ssh://</para></entry>
								<entry><para>Same as svn://, but through an SSH tunnel</para></entry>
							</row>
						</tbody>
					</tgroup>
				</table>

				<para>
In this section, we will see how to configure Subversion for all 
these access methods. Here, we cover the basics. For more advanced 
usage details, refer to the <ulink url="http://svnbook.red-bean.com/">svn book</ulink>.
				</para>
			<sect4 id="direct-repos-access" status="complete">
				<title>Direct repository access (file://)</title>
<para> This is the simplest of all access methods. It does not 
require any Subversion server process to be running. This access 
method is used to access Subversion from the same machine. The 
syntax of the command, entered at a terminal prompt, is as follows:</para>

        <para>
<screen>
<command>svn co file:///path/to/repos/project</command>
</screen>
        </para>
  <para>ou</para>
	<para>
<screen>
<command>svn co file://localhost/path/to/repos/project</command>
</screen>
        </para>
	<note>
		<para>If you do not specify the hostname, there are three forward slashes (///) -- two for the protocol (file, in this case) plus the leading slash in the path. If you specify the hostname, you must use two forward slashes (//).</para>
	</note>
		<para>The repository permissions depend on filesystem permissions. If the user has read/write permission, he can checkout from and commit to the repository.</para>
			</sect4>
			<sect4 id="access-via-webdav" status="complete">
				<title>Acesso via protocolo WebDav (http://)</title>
<para> To access the Subversion repository via WebDAV protocol, you must configure your Apache 2 web server. You must add the following snippet in your <filename>/etc/apache2/apache2.conf</filename> file:</para>

	<programlisting> &lt;Location /svn&gt;
  DAV svn
  SVNPath /path/to/repos
  AuthType Basic
  AuthName "Your repository name"
  AuthUserFile /etc/subversion/passwd
  &lt;LimitExcept GET PROPFIND OPTIONS REPORT&gt;
  Require valid-user
  &lt;/LimitExcept&gt;
  &lt;/Location&gt; </programlisting>
  <para>Next, you must create the <filename>/etc/subversion/passwd</filename> 
  file. This file contains user authentication details. To add an entry, i.e. 
  to add a user, you can run the following command from a terminal prompt:</para>
	<para>
<screen>
<command>htpasswd2 /etc/subversion/passwd user_name</command>
</screen>
        </para>
	<para>This command will prompt you to enter the password. Once you enter the password, the user is added. Now, to access the repository you can run the following command:</para>
        <screen><command>svn co http://servername/svn</command></screen>
	<warning>
		<para>
			The password is transmitted as plain text. If you are worried about password snooping, you are advised to use SSL encryption. For details, please refer next section.
		</para>
	</warning>
			</sect4>
			<sect4 id="access-via-webdav-with-ssl" status="complete">
				<title>Access via WebDAV protocol with SSL encryption (https://)</title>
					<para> 
						Accessing Subversion repository via WebDAV protocol with SSL 
						encryption (https://) is similar to http:// except that you 
						must install and configure the digital certificate in your 
						Apache2 web server.
					</para>

					<para>
						You can install a digital certificate issued by a signing 
						authority like Verisign. Alternatively, you can install your 
						own self-signed certificate.
					</para>
					<para>
						This step assumes you have installed and configured a digital 
						certificate in your Apache 2 web server. Now, to access the 
						Subversion repository, please refer to the above section! 
						The access methods are exactly the same, except the protocol. 
						You must use https:// to access the Subversion repository.
					</para>

			</sect4>
			<sect4 id="access-via-custom-protocol" status="complete">
				<title>Access via custom protocol (svn://)</title>
					<para> 
					Once the Subversion repository is created, you can configure the 
					access control. You can edit the <filename>
					/path/to/repos/project/conf/svnserve.conf</filename> file to 
					configure the access control.  For example, to set up 
					authentication, you can uncomment the following lines in the 
					configuration file: </para>
					<programlisting># [general]
# password-db = passwd</programlisting>

					<para>
					After uncommenting the above lines, you can maintain the user 
					list in the passwd file. So, edit the file <filename>passwd
					</filename> in the same directory and add the new user. The 
					syntax is as follows:
					</para>
					<programlisting>username = password</programlisting>
					<para>
					For more details, please refer to the file.
					</para>

					<para>
					Now, to access Subversion via the svn:// custom protocol, either 
					from the same machine or a different machine, you can run 
					svnserver using svnserve command. The syntax is as follows:
					</para>
					<programlisting>$ svnserve -d --foreground -r /path/to/repos
# -d -- daemon mode
# --foreground -- run in foreground (useful for debugging)
# -r -- root of directory to serve

For more usage details, please refer to:
$ svnserve --help</programlisting>

					<para>Once you run this command, Subversion starts listening on default port (3690). To access the project repository, you must run the following command from a terminal prompt: </para>
					<para>
<screen>
<command>svn co svn://hostname/project project --username user_name</command>
</screen>
                                        </para>
					<para>Based on server configuration, it prompts for password. Once 
					you are authenticated, it checks out the code from Subversion 
					repository.  To synchronize the project repository with the local 
					copy, you can run the <command>update</command> sub-command. The 
					syntax of the command, entered at a terminal prompt, is as follows:
					</para>
					<para>
<screen>
<command>cd project_dir ; svn update</command>
</screen>
                                        </para>
					<para>Para mais detalhes acerca de cada subcomando do Subversion, pode consultar o manual. Por exemplo, para aprender mais sobre o comando co (do inglês checkout, verificar), porfavor execute o comando seguinte num terminal:</para>
                    <para><screen><command>svn co help</command></screen></para>

			</sect4>
			<sect4 id="access-via-custom-protocol-with-ssl" status="complete">
				<title>Access via custom protocol with SSL encryption (svn+ssh://)</title>
					<para> The configuration and server process is same as in the
					svn:// method. For details, please refer to the above section. 
					This step assumes you have followed the above step and started 
					the	Subversion server using <application>svnserve</application>  
					command.</para>

					<para>It is also assumed that the ssh server is running on that 
					machine and that it is allowing incoming connections. To confirm, 
					please try to login to that machine using ssh. If you can login, 
					everything is perfect. If you cannot login, please address it 
					before continuing further.</para>

					<para>The svn+ssh:// protocol is used to access the Subversion 
					repository using SSL encryption. The data transfer is encrypted 
					using this method. To access the project repository (for example 
					with a checkout), you must use the following command syntax: 
                                        </para>
                                        <para>
<screen>
<command>svn co svn+ssh://hostname/var/svn/repos/project</command>
</screen>
                                        </para>

					<note><para> You must use the full path (/path/to/repos/project) 
					to access the Subversion repository using this access method. 
					</para></note>
					<para>
					Based on server configuration, it prompts for password. You must 
					enter the password you use to login via ssh. Once you are 
					authenticated, it checks out the code from the Subversion 
					repository.
					</para>
			</sect4>
			</sect3>

      </sect2>
      <sect2 id="cvs-server" status="complete">
        <title>CVS Server</title> 
          <para>
          CVS is a version control system. You can use it to record the
          history of source files.
          </para>
        <sect3 id="cvs-installation" status="complete">
          <title>Instalação</title>
            <para>
              At a terminal prompt, enter the following command to install
              <application>cvs</application>:

<screen>
<command>sudo apt-get install cvs</command>
</screen>

After you install <application>cvs</application>, you should install
<application>xinetd</application> to start/stop the cvs server. At the
prompt, enter the following command to install
<application>xinetd</application>:

<screen>
<command>sudo apt-get install xinetd</command>
</screen>
            </para>
        </sect3>
        <sect3 id="cvs-configuration" status="complete">
          <title>Configuração</title>
            <para>
            Once you install cvs, the repository will be automatically
            initialized. By default, the repository resides under the
            <application>/var/lib/cvs</application> directory. You can
            change this path by running following command:

<screen>
<command>cvs -d /your/new/cvs/repo init</command>
</screen>

Once the initial repository is set up, you can configure
<application>xinetd</application> to start the CVS server. 
You can copy the following lines to the <filename>
/etc/xinetd/cvspserver</filename> file.

<programlisting>
service cvspserver
{
     port = 2401
     socket_type = stream
     protocol = tcp
     user = root
     wait = no
     type = UNLISTED
     server = /usr/bin/cvs
     server_args = -f --allow-root /var/lib/cvs pserver
     disable = no
}
</programlisting>

<note>
<para>
Be sure to edit the repository if you have changed the default
repository (<application>/var/lib/cvs</application>) directory.
</para>
</note>

Once you have configured <application>xinetd</application> you 
can start the cvs server by running following command:

<screen>
<command>sudo /etc/init.d/xinetd start</command>
</screen>
            </para>
            <para>
            You can confirm that the CVS server is running by issuing 
			the following command:
            </para>

            <para>
<screen>
<command>sudo netstat -tap | grep cvs</command>
</screen>
            </para>

            <para>
            When you run this command, you should see the following line
            or something similar:
            </para>

<programlisting>
tcp        0      0 *:cvspserver            *:* LISTEN 
</programlisting>

        <para>
From here you can continue to add users, add new projects,
and manage the CVS server. 
        </para>
        <warning>
<para>
          CVS allows the user to add users independently of the
underlying OS installation. Probably the easiest way is to use the Linux
Users for CVS, although it has potential security issues. Please refer
to the CVS manual for details.
</para>
        </warning>

        </sect3>
        <sect3 id="cvs-add-projects" status="complete">
          <title>Add Projects</title>
            <para>
            This section explains how to add new project to the CVS 
			repository. Create the directory and add necessary document 
			and source files to the directory. Now, run the following 
			command to add this project to CVS repository:
<screen>
<command>cd your/project</command>
<command>cvs import -d :pserver:username@hostname.com:/var/lib/cvs -m "Importing my project to CVS repository" . new_project start</command>
</screen>

<tip>
<para>
You can use the CVSROOT environment variable to store the CVS root directory.
Once you export the CVSROOT environment variable, you can avoid using -d option to
above cvs command.
</para>
</tip>
The string <emphasis>new_project</emphasis> is a vendor
tag, and <emphasis>start</emphasis> is a release tag.
They serve no purpose in this context, but since CVS requires them, they
must be present.

<warning>
<para>
When you add a new project, the CVS user you use must have write access to the
CVS repository (<application>/var/lib/cvs</application>). By default, the
<application>src</application> group has write access to the CVS
repository. So, you can add the user to this group, and he can then add and
manage projects in the CVS repository.
</para>
</warning>
            </para>
        </sect3>
      </sect2>
      <sect2 id="version-control-ref" status="complete">
        <title>Referências</title> 
				<para><ulink url="http://subversion.tigris.org/">Subversion Home Page</ulink></para>
				<para><ulink url="http://svnbook.red-bean.com/">Subversion Book</ulink></para>
				<para><ulink url="http://ximbiot.com/cvs/manual/cvs-1.11.21/cvs_toc.html">CVS Manual</ulink></para>
      </sect2>
    </sect1>
	<sect1 id="databases" status="complete">
		<title>Databases</title>
          <para>
            Ubuntu provides two Database servers. They are:
            <itemizedlist spacing="compact">
                <listitem>
                    <para><application><trademark>MySQL</trademark></application></para>
                </listitem>
                <listitem>
                    <para><application>PostgreSQL</application></para>
                </listitem>
            </itemizedlist>
            They are available in the main repository. This section
            explains how to install and configure these database
            servers.
          </para>
      <sect2 id="mysql" status="complete">
        <title>MySQL</title>
          <para>
          MySQL is a fast, multi-threaded, multi-user, and robust SQL
          database server. It is intended for mission-critical, 
		  heavy-load production systems as well as for embedding into 
		  mass-deployed software.
          </para>

        <sect3 id="mysql-installation" status="complete">
          <title>Instalação</title>
            <para>
            To install MySQL, run the following command from a terminal prompt:
            </para>

            <para>
<screen>
<command>sudo apt-get install mysql-server mysql-client</command>
</screen>
            </para>

            <para>
            Once the installation is complete, the MySQL server should be
            started automatically. You can run the following command from a terminal prompt to
            check whether the MySQL server is running:
            </para>

            <para>
<screen>
<command>sudo netstat -tap | grep mysql</command>
</screen>
            </para>

            <para>
            When you run this command, you should see the following line
            or something similar:
            </para>

<programlisting>
tcp        0      0 localhost.localdomain:mysql           *:* LISTEN -
</programlisting>
	<para>If the server is not running correctly, you can type the following command to start it:</para>
            <para>
<screen>
<command>sudo /etc/init.d/mysql restart</command>
</screen>
        </para>

        </sect3>
        <sect3 id="mysql-configuration" status="complete">
          <title>Configuração</title>
            <para>
            By default, the administrator password is not set. Once you
            install MySQL, the first thing you must do is to configure
            the MySQL administrator password. To do this, run the following commands:
            </para>
            <para>
<screen>
<command>sudo mysqladmin -u root password newrootsqlpassword</command>
</screen>
            </para>
            <para>
<screen>
<command>sudo mysqladmin -u root -h localhost password newrootsqlpassword</command>
</screen>
            </para>

            <para>
            You can edit the <filename>/etc/mysql/my.cnf</filename> file to configure the basic
            settings -- log file, port number, etc. Refer to
            <filename>/etc/mysql/my.cnf</filename> file for more details.
            </para>
        </sect3>
      </sect2>
      <sect2 id="postgresql" status="complete">
        <title>PostgreSQL</title> 
          <para>
          PostgreSQL is an object-relational database system that has
          the features of traditional commercial database systems with
          enhancements to be found in next-generation DBMS systems.
          </para>
        <sect3 id="postgresql-installation" status="complete">
          <title>Instalação</title>
            <para>
            To install PostgreSQL, run the following command in the
            command prompt:
            </para>

            <para>
<screen>
<command>sudo apt-get install postgresql</command>
</screen>
            </para>

            <para>
            Once the installation is complete, you should configure the
            PostgreSQL server based on your needs, although the default
            configuration is viable.</para>
            
        </sect3>
        <sect3 id="postgresql-configuration" status="complete">
          <title>Configuração</title>
            <para>By default, connection via TCP/IP is disabled.
            PostgreSQL supports multiple client authentication methods.
            By default, IDENT authentication method is used.  Please
            refer <ulink url="http://www.postgresql.org/docs/8.1/static/admin.html">
			the PostgreSQL Administrator's Guide</ulink>.</para>
            
            <para>The following discussion assumes that you wish to enable 
			TCP/IP connections and use the MD5 method for client 
			authentication. PostgreSQL configuration files are stored in the
            <filename>/etc/postgresql/&lt;version&gt;/main</filename>
            directory. For example, if you install PostgreSQL 7.4, the
            configuration files are stored in the
            <filename>/etc/postgresql/7.4/main</filename> directory.
            </para>
            
            <tip>
            <para>
             To configure <application>ident</application>
             authentication, add entries to the <filename>/etc/postgresql/7.4/main/pg_ident.conf</filename>
             file.
            </para>
            </tip>

            <para>To enable TCP/IP connections, edit the file <filename>/etc/postgresql/7.4/main/postgresql.conf</filename></para>

            <para>Locate the line <emphasis>#tcpip_socket =
            false</emphasis> and change it to
            <emphasis>tcpip_socket =
            true</emphasis>. You may
            also edit all other parameters, if you know what you are doing! 
			For details, refer to the configuration file or to the PostgreSQL documentation.
            </para>

            <para>By default, the user credentials are not set for
            <emphasis>MD5</emphasis> client
            authentication. So, first it is necessary to configure the PostgreSQL server to use
            <emphasis>trust</emphasis> client
            authentication, connect to the database,
            configure the password, and revert the configuration back to use
            <emphasis>MD5</emphasis> client authentication.
            To enable <emphasis>trust</emphasis> client
            authentication, edit the file <filename>/etc/postgresql/7.4/main/pg_hba.conf</filename></para>

            <para>Comment out all the existing lines which use
            <emphasis>ident</emphasis> and
            <emphasis>MD5</emphasis>
            client authentication and add the following
            line:</para>
<programlisting>
local   all         postgres                          trust sameuser
</programlisting>

            <para>Then, run the following command to
            start the PostgreSQL server:
            </para>
            <para>
<screen>
<command>sudo /etc/init.d/postgresql start</command>
</screen>
            </para>
            <para>Once the PostgreSQL server is successfully started, run the following command at a terminal prompt to connect to the default
            PostgreSQL template database</para>

            <para>
<screen>
<command>psql -U postgres -d template1</command>
</screen>
            </para>
            <para>The above command connects to PostgreSQL
            database <emphasis>template1</emphasis> as user
            <emphasis>postgres</emphasis>. Once you connect to the PostgreSQL
            server, you will be at a SQL prompt. You can run the
            following SQL command at the <application>psql</application> prompt to configure the
            password for the user <emphasis role="italics">postgres</emphasis>.</para>

            <para>
<screen>
<command>template1=# ALTER USER postgres with encrypted password 'your_password';</command>
</screen>
            </para>
            <para>After configuring the password, edit the file
            <filename>/etc/postgresql/7.4/main/pg_hba.conf</filename> to use
            <emphasis>MD5</emphasis> authentication:</para>
            <para>Comment the recently added <emphasis role="italics">trust</emphasis> line and add the following
            line: </para>

<programlisting>
local   all         postgres                          md5 sameuser
</programlisting>
            <warning>
            <para>
             The above configuration is not complete by any means. Please
             refer <ulink url="http://www.postgresql.org/docs/8.1/static/admin.html">
			 the PostgreSQL Administrator's Guide</ulink> to configure more parameters.
            </para>
            </warning>
        </sect3>
      </sect2>
    </sect1>
	<sect1 id="email-services" status="complete">
		<title>Email Services</title>
          <para>
            The process of getting an email from one person to another over a network or
			the Internet involves many systems working together.  Each of these systems
			must be correctly configured for the process to work.  The sender uses a <emphasis>Mail
			User Agent</emphasis> (MUA), or email client, to send the message through one or more
			<emphasis>Mail Transfer Agents</emphasis> (MTA), the last of which will hand it off to a 				<emphasis>Mail Delivery Agent</emphasis> (MDA) for delivery to the 
			recipient's mailbox, from which it
			will be retrieved by the recipient's email client, usually via a POP3 or IMAP server.
          </para>
      <sect2 id="postfix" status="complete">
        <title>Postfix</title>
          <para>
            <application>Postfix</application> is the default Mail Transfer Agent (MTA) in Ubuntu. It
            attempts to be fast and easy to administer and secure. It is
            compatible with the MTA <application>sendmail</application>. This section explains how
            to install and configure <application>postfix</application>. It also explains how to
            set it up as an SMTP server using a secure connection (for sending emails securely).
          </para>
        <sect3 id="postfix-installation" status="complete">
          <title>Instalação</title>
            <para>
            To install <application>postfix</application> with SMTP-AUTH and Transport Layer
            Security (TLS), run the following command:
<screen>
<command>sudo apt-get install postfix</command>
</screen>
		Simply press return when the installation process asks questions, the configuration will be done in greater detail in the next stage.
            </para>
        </sect3>
        <sect3 id="postfix-configuration" status="complete">
          <title>Basic Configuration</title>
            <para>
            To configure <application>postfix</application>, run the following command:
<screen>
<command>sudo dpkg-reconfigure postfix</command>
</screen>
            The user interface will be displayed. On each screen, select the following
            values:
            <itemizedlist spacing="compact">
            <listitem><para>Ok</para></listitem>
            <listitem><para>Internet Site</para></listitem>
            <listitem><para>NONE</para></listitem>
            <listitem><para>mail.example.com</para></listitem>
            <listitem><para>mail.example.com, localhost.localdomain, localhost</para></listitem>
            <listitem><para>No</para></listitem>
            <listitem><para>127.0.0.0/8</para></listitem>
            <listitem><para>Yes</para></listitem>
            <listitem><para>0</para></listitem>
            <listitem><para>+</para></listitem>
            <listitem><para>all</para></listitem>
            </itemizedlist>
            </para>
            <note>
            <para>
            Replace mail.example.com with your mail server hostname.
            </para>
            </note>
	 </sect3>
        <sect3 id="postfix-smtp-authentication" status="complete">
          <title>SMTP Authentication</title>
            <para>The next steps are to configure
            <application>postfix</application> to use SASL for SMTP
            AUTH. Rather than editing the configuration file directly, 
	     you can use the <command>postconf</command> command to configure
            all <application>postfix</application> parameters.  The
            configuration parameters will be stored in
            <filename>/etc/postfix/main.cf</filename> file. Later if you
            wish to re-configure a particular parameter, you can either
            run the command or change it manually in the file.</para>
	<procedure>
		<step><para>Configure Postfix to do SMTP AUTH using SASL (saslauthd):
<screen>
postconf -e 'smtpd_sasl_local_domain ='
postconf -e 'smtpd_sasl_auth_enable = yes'
postconf -e 'smtpd_sasl_security_options = noanonymous'
postconf -e 'broken_sasl_auth_clients = yes'
postconf -e 'smtpd_recipient_restrictions = permit_sasl_authenticated,permit_mynetworks,reject_unauth_destination'
postconf -e 'inet_interfaces = all'
echo 'pwcheck_method: saslauthd' &gt;&gt; /etc/postfix/sasl/smtpd.conf
echo 'mech_list: plain login' &gt;&gt; /etc/postfix/sasl/smtpd.conf
</screen>
		</para>
		</step>
		<step><para>Next, configure the digital certificate 
            for TLS. When asked questions, follow the instructions and answer appropriately.
<screen>
openssl genrsa -des3 -rand /etc/hosts -out smtpd.key 1024
chmod 600 smtpd.key
openssl req -new -key smtpd.key -out smtpd.csr
openssl x509 -req -days 3650 -in smtpd.csr -signkey smtpd.key -out smtpd.crt
openssl rsa -in smtpd.key -out smtpd.key.unencrypted
mv -f smtpd.key.unencrypted smtpd.key
openssl req -new -x509 -extensions v3_ca -keyout cakey.pem -out cacert.pem -days 3650
mv smtpd.key /etc/ssl/private/
mv smtpd.crt /etc/ssl/certs/
mv cakey.pem /etc/ssl/private/
mv cacert.pem /etc/ssl/certs/
</screen>
		</para>
		<note><para>You can get the digital
            certificate from a certificate authority. Alternatively, you
            can create the certificate yourself. Refer to 
			<xref linkend="creating-a-self-signed-certificate"/> for more 
			details.</para></note>
		</step>
		<step><para>Configure Postfix to do TLS encryption for both incoming and outgoing mail:
<screen>
postconf -e 'smtpd_tls_auth_only = no'
postconf -e 'smtp_use_tls = yes'
postconf -e 'smtpd_use_tls = yes'
postconf -e 'smtp_tls_note_starttls_offer = yes'
postconf -e 'smtpd_tls_key_file = /etc/ssl/private/smtpd.key'
postconf -e 'smtpd_tls_cert_file = /etc/ssl/certs/smtpd.crt'
postconf -e 'smtpd_tls_CAfile = /etc/ssl/certs/cacert.pem'
postconf -e 'smtpd_tls_loglevel = 1'
postconf -e 'smtpd_tls_received_header = yes'
postconf -e 'smtpd_tls_session_cache_timeout = 3600s'
postconf -e 'tls_random_source = dev:/dev/urandom'
postconf -e 'myhostname = mail.example.com'
</screen>
		</para>
		</step>
		</procedure>
            <note>
            <para>
            After you run all the commands, the SMTP AUTH is configured
            with <application>postfix</application>. The self-signed
            cerficiate is created for TLS and it is configured with
            <application>postfix</application>.
            </para>
            </note>
            <para>
            Now, the file <filename>/etc/postfix/main.cf</filename>
            should look like <ulink url="../sample/postfix_configuration">this</ulink>.
		</para>
		<para>
            The postfix initial configuration is complete. Run
            the following command to start postfix daemon:
            <screen><command>sudo /etc/init.d/postfix start</command></screen>

            Now the <application>postfix</application> daemon is installed, configured and run
            successfully. <application>Postfix</application> supports SMTP AUTH as defined in
            <ulink url="ftp://ftp.isi.edu/in-notes/rfc2554.txt">RFC2554</ulink>.
            It is based on <ulink url="ftp://ftp.isi.edu/in-notes/rfc2222.txt">SASL</ulink>. However it is still necessary to set up SASL authentication before you can use SMTP.
            </para>
	</sect3>
	<sect3 id="sasl">
	  <title>Configuring SASL</title>
            <para>
            The
            <application>libsasl2</application>,
            <application>sasl2-bin</application> and
            <application>libsasl2-modules</application> are necessary to
            enable SMTP AUTH using SASL. You can install these applications if
            you have not installed them already.
<screen>
<command>apt-get install libsasl2 sasl2-bin</command>
</screen>
	    </para>
	    <para>
		A few changes are necessary to make it work properly. Because <application>Postfix</application> runs chrooted in <filename>/var/spool/postfix</filename>, <application>SASL</application> needs to be configured to run in the false root (<filename>/var/run/saslauthd</filename> becomes <filename>/var/spool/postfix/var/run/saslauthd</filename>):
<screen>
<command>mkdir -p /var/spool/postfix/var/run/saslauthd</command>
<command>rm -rf /var/run/saslauthd</command>
</screen>
	    </para>
	    <para>
            To activate <application>saslauthd</application>, edit the file <filename>/etc/default/saslauthd</filename>, and change or add the START variable. In order to configure <application>saslauthd</application> to run in the false root, add the PWDIR, PIDFILE and PARAMS variables. Finally, configure the MECHANISMS variable to your liking. The file should look like this:

<programlisting>
# This needs to be uncommented before saslauthd will be run
# automatically
START=yes

PWDIR="/var/spool/postfix/var/run/saslauthd"
PARAMS="-m ${PWDIR}"
PIDFILE="${PWDIR}/saslauthd.pid"

# You must specify the authentication mechanisms you wish to use.
# This defaults to "pam" for PAM support, but may also include
# "shadow" or "sasldb", like this:
# MECHANISMS="pam shadow"

MECHANISMS="pam"
</programlisting>
            </para>
<note>
<para>
If you prefer, you can use <emphasis role="strong">shadow</emphasis>
instead of <emphasis role="strong">pam</emphasis>. This will use MD5
hashed password transfer and is perfectly secure. The username and
password needed to authenticate will be those of the users on the system
you are using on the server.
</para>
</note>
        <para>
Next, update the dpkg "state" of <filename>/var/spool/portfix/var/run/saslauthd</filename>. The saslauthd init script uses this setting to create the missing directory with the appropriate permissions and ownership:
<screen>
<command>dpkg-statoverride --force --update --add root sasl 755 /var/spool/postfix/var/run/saslauthd</command>
</screen>
        </para>
        </sect3>
        <sect3 id="postfix-testing" status="complete">
          <title>Testing</title>
            <para>
          SMTP AUTH configuration is complete. Now it is time to start
          and test the setup. You can run the following command to start
          the SASL daemon:
            <screen><command>sudo /etc/init.d/saslauthd start</command></screen>

          To see if SMTP-AUTH and TLS work properly, run the following
          command:
            <screen><command>telnet mail.example.com 25</command></screen>
          After you have established the connection to the postfix mail
          server, type:
            <screen>ehlo mail.example.com</screen>
          If you see the following lines among others, then everything
          is working perfectly. Type <command>quit</command> to exit.
<programlisting>
250-STARTTLS
250-AUTH LOGIN PLAIN
250-AUTH=LOGIN PLAIN
250 8BITMIME
</programlisting>
        </para>
        </sect3>
      </sect2>
      <sect2 id="exim4" status="complete">
        <title>Exim4</title>
          <para>
            <application>Exim4</application> is is another Message Transfer
            Agent (MTA) developed at the University of Cambridge for use
            on Unix systems connected to the internet. Exim can be
            installed in place of <application>sendmail</application>,
            although the configuration of
            <application>exim</application> is quite different to
            that of <application>sendmail</application>.
          </para>
        <sect3 id="exim4-installation" status="complete">
          <title>Instalação</title>
            <para>
            To install <application>exim4</application>, run the following command:
<screen>
<command>sudo apt-get install exim4 exim4-base exim4-config</command>
</screen>
            </para>
        </sect3>
        <sect3 id="exim4-configuration" status="complete">
          <title>Configuração</title>
            <para>
            To configure <application>exim4</application>, run the following command:
<screen>
<command>sudo dpkg-reconfigure exim4-config</command>
</screen>
            The user interface will be displayed. The user interface
            lets you configure many parameters. For example, In
            <application>exim4</application> the configuration files are
            split among multiple files. If you wish to have them in one
            file you can configure accordingly in this user interface.
            </para>

            <para>
            All the parameters you configure in the user interface are
            stored in
            <filename>/etc/exim4/update-exim4.conf.conf</filename> file.
            If you wish to re-configure, either you re-run the
            configuration wizard or manually edit this file
            using your favourite editor. Once you configure, you can run
            the following command to generate the master configuration
            file:
<screen>
<command>sudo update-exim4.conf</command>
</screen>
            The master configuration file, is generated and
            it is stored in
            <filename>/var/lib/exim4/config.autogenerated</filename>. 
            
            <warning>
            <para>
            At any time, you should not edit the master configuration
            file,
            <filename>/var/lib/exim4/config.autogenerated</filename>
            manually. It is updated automatically every time you run
            <command>update-exim4.conf</command>
            </para>
            </warning>
            You can run
            the following command to start
            <application>exim4</application> daemon.
<screen>
<command>sudo /etc/init.d/exim4 start</command>
</screen>
            <emphasis role="strong">TODO:</emphasis> This section should
            cover configuring SMTP AUTH with exim4. 
            </para>
        </sect3>
      </sect2>
      <sect2 id="dovecot-server" status="complete">
        <title>Dovecot Server</title> 
          <para>
          <application>Dovecot</application> is a Mail Delivery Agent, written with security
          primarily in mind. It supports the major mailbox formats: mbox
          or Maildir. This section explain how to set it up as an imap or
          pop3 server.
          </para>
        <sect3 id="dovecot-installation" status="complete">
          <title>Instalação</title>
            <para>
            To install <application>dovecot</application>, run the following command in the
            command prompt:
<screen>
<command>sudo apt-get install dovecot-common dovecot-imapd dovecot-pop3d</command>
</screen>
            </para>
        </sect3>
        <sect3 id="dovecot-configuration" status="complete">
          <title>Configuração</title>
            <para>
            To configure <application>dovecot</application>, you can edit the file
            <filename>/etc/dovecot/dovecot.conf</filename>. You can
            choose the protocol you use. It could be pop3, pop3s (pop3
            secure), imap and imaps (imap secure). A description of these protocols is beyond the scope of this guide. For further information, refer to the wikipedia articles on <ulink url="http://en.wikipedia.org/wiki/POP3">POP3</ulink> and
            <ulink url="http://en.wikipedia.org/wiki/Internet_Message_Access_Protocol">IMAP</ulink>.
            </para>

            <para>
            IMAPS and POP3S are more secure that the simple IMAP and
            POP3 because they use SSL encryption to connect. Once you
            have chosen the protocol, amend the following line in the file
            <filename>/etc/dovecot/dovecot.conf</filename>:
<programlisting>
protocols = pop3 pop3s imap imaps
</programlisting>

            It enables the protocols when <application>dovecot</application> is started. Next, add the following line in pop3 section in the file <filename>/etc/dovecot/dovecot.conf</filename>:
<programlisting>
pop3_uidl_format = %08Xu%08Xv
</programlisting>

            Next, choose the mailbox you use. <application>Dovecot</application> supports
            <emphasis role="strong">maildir</emphasis> and <emphasis role="strong">mbox</emphasis> formats. These are the most
            commonly used mailbox formats. They both have their own
            benefits and they are discussed on <ulink url="http://dovecot.org/doc/configuration.txt">the dovecot website</ulink>.
            </para>
            <para>
            Once you have chosen your mailbox type, edit the file
            <filename>/etc/dovecot/dovecot.conf</filename> and change
            the following line:
<programlisting>
default_mail_env = maildir:~/Maildir # (for maildir)
or
default_mail_env = mbox:~/mail:INBOX=/var/spool/mail/%u # (for mbox)
</programlisting>
            </para>
<note>
<para>
You should configure your Mail Trasport Agent (MTA) to transfer the
incoming mail to this type of mailbox if it is different from the one
you have configured.
</para>
</note>
          <para>
          Once you have configured dovecot, start the <application>dovecot</application> daemon
          in order to test your setup:

          <screen><command>sudo /etc/init.d/dovecot start</command></screen>

          If you have enabled imap, or pop3, you can also try to log in
          with the commands <command>telnet localhost pop3</command> or
          <command>telnet localhost</command> imap2. If you see
          something like the following, the installation has been
          successful:
<programlisting>
bhuvan@rainbow:~$ telnet localhost pop3
Trying 127.0.0.1...
Connected to localhost.localdomain.
Escape character is '^]'.
+OK Dovecot ready.
</programlisting>
          </para>
        </sect3>
        <sect3 id="dovecot-ssl" status="complete">
          <title>Dovecot SSL Configuration</title>
            <para>
            To configure <application>dovecot</application> to use SSL, you can edit the file
            <filename>/etc/dovecot/dovecot.conf</filename> and amend
            following lines:
<programlisting>
ssl_cert_file = /etc/ssl/certs/dovecot.pem
ssl_key_file = /etc/ssl/private/dovecot.pem
ssl_disable = no
disable_plaintext_auth = no
</programlisting>

          The <emphasis role="strong">cert</emphasis> and <emphasis role="strong">key</emphasis> files are created automatically
          by <application>dovecot</application> when you install it. Please note that these keys
          are not signed and will give "bad signature" errors when
          connecting from a client. To avoid this, you can use
          commercial certificates, or even better, you can use your own
          SSL certificates.
          </para>
	</sect3>
	<sect3>
	  <title>Firewall Configuration for an Email Server</title>
          <para>
          To access your mail server from another computer, you must
          configure your firewall to allow connections to the server on
          the necessary ports.
            <itemizedlist>
            <listitem><para>IMAP - 143</para></listitem>
            <listitem><para>IMAPS - 993</para></listitem>
            <listitem><para>POP3 - 110</para></listitem>
            <listitem><para>POP3S - 995</para></listitem>
            </itemizedlist>
          </para>
        </sect3>
      </sect2>
      <sect2 id="mailman" status="complete">
        <title>Mailman</title> 
          <para>
          Mailman is an open source program for managing electronic mail
          discussions and e-newsletter lists. Many open source mailing
          lists (including all the <ulink url="http://lists.ubuntu.com">Ubuntu mailing lists</ulink>) use
          Mailman as their mailing list software. It is powerful and easy
          to install and maintain.
          </para>
        <sect3 id="mailman-installation" status="complete">
          <title>Instalação</title>
            <para>
            Mailman provides a web interface for the administrators
            and users. So, it requires apache with mod_perl support.
            Mailman uses an external mail server to send and receive 
			emails. It works perfectly with the following mail servers:
            </para>
            <para>
            <itemizedlist spacing="compact">
                <listitem>
                    <para><application>Postfix</application></para>
                </listitem>
                <listitem>
                    <para><application>Exim</application></para>
                </listitem>
                <listitem>
                    <para><application>Sendmail</application></para>
                </listitem>
                <listitem>
                    <para><application>Qmail</application></para>
                </listitem>
            </itemizedlist>
            </para>

            <para>
            We will see how to install mailman, the apache web server 
			and the Exim mail server. If you wish to install mailman
            with a different mail server, please refer to the references
            section. 
            </para>
          <sect4 id="mailman-apache2">
            <title>Apache2</title>
              <para>
                To install apache2 you refer to <xref linkend="http-installation"/>.
              </para>
          </sect4>
          <sect4 id="mailman-exim4">
            <title>Exim4</title>
              <para>
              To install Exim4 you run the following commands at a terminal prompt:
<screen>
<command>sudo apt-get install exim4</command>
<command>sudo apt-get install exim4-base</command>
<command>sudo apt-get install exim4-config</command>
</screen>

Once exim4 is installed, the configuration files are stored in
the <filename>/etc/exim4</filename> directory. In ubuntu, by default, the exim4 configuration files are
split across different files. You can change this behavior by changing
the following variable in the <filename>/etc/exim4/update-exim4.conf</filename> file:

              <itemizedlist spacing="compact">
              <listitem>
                <para><application>dc_use_split_config='true'</application></para>
              </listitem>
              </itemizedlist>
              </para>
          </sect4>
          <sect4 id="mailman-mailman">
            <title>Mailman</title>
              <para>
              To install <application>Mailman</application>, run following command at a terminal prompt:
<screen>
<command>sudo apt-get install mailman</command> 
</screen>

It copies the installation files in
<application>/var/lib/mailman</application> directory. It installs the
CGI scripts in <application>/usr/lib/cgi-bin/mailman</application>
directory.  It creates <emphasis>list</emphasis> linux
user. It creates the <emphasis>list</emphasis> linux
group. The mailman process will be owned by this user. 
              </para>
          </sect4>
        </sect3>
        <sect3 id="mailman-configuration" status="complete">
          <title>Configuração</title>
            <para>
            This section assumes you have successfully installed
            <application>mailman</application>,
            <application>apache2</application>, and
            <application>exim4</application>. Now you just need
            to configure them. 
            </para>
          <sect4 id="mailman-conf-apache2">
            <title>Apache2</title>
              <para>
              Once apache2 is installed, you can add the following lines in
              the <filename>/etc/apache2/apache2.conf</filename> file:
<programlisting>
Alias /images/mailman/ "/usr/share/images/mailman/"
Alias /pipermail/ "/var/lib/mailman/archives/public/"
</programlisting>

Mailman uses apache2 to render its CGI scripts. The mailman CGI scripts
are installed in the <application>/usr/lib/cgi-bin/mailman</application>
directory. So, the mailman url will be
http://hostname/cgi-bin/mailman/. You can make changes to the
<filename>/etc/apache2/apache2.conf</filename> file if you wish to
change this behavior.
              </para>
          </sect4>

          <sect4 id="mailman-conf-exim4">
            <title>Exim4</title>
              <para>
              Once Exim4 is installed, you can start the Exim server using the following
              command from a terminal prompt:
<screen>
<command>sudo apt-get /etc/init.d/exim4 start</command>
</screen>

In order to make mailman work with exim4, you need to configure exim4.
As mentioned earlier, by default, exim4 uses multiple configuration
files of different types. For details, please refer to the <ulink url="http://www.exim.org">Exim</ulink> website.  To run mailman, we
should add new a configuration file to the following configuration
types: 
              <itemizedlist spacing="compact">
              <listitem>
                <para>Main</para>
              </listitem>
              <listitem>
                <para>Transport</para>
              </listitem>
              <listitem>
                <para>Router</para>
              </listitem>
              </itemizedlist>
              Exim creates a master configuration file by sorting all
              these mini configuration files. So, the order of these
              configuration files is very important.
              </para>
          </sect4>
          <sect4 id="mailman-conf-main">
            <title>Main</title>
              <para>
              All the configuration files belonging to the main type are
              stored in the
              <filename>/etc/exim4/conf.d/main/</filename> directory. You can add
              the following content to a new file, named <filename>04_exim4-config_mailman</filename>:

<programlisting>
# start
# Home dir for your Mailman installation -- aka Mailman's prefix
# directory.
# On Ubuntu this should be "/var/lib/mailman"
# This is normally the same as ~mailman
MM_HOME=/var/lib/mailman
#
# User and group for Mailman, should match your --with-mail-gid
# switch to Mailman's configure script.  Value is normally "mailman"
MM_UID=list
MM_GID=list
#
# Domains that your lists are in - colon separated list
# you may wish to add these into local_domains as well
domainlist mm_domains=hostname.com
#
# -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
#
# These values are derived from the ones above and should not need
# editing unless you have munged your mailman installation
#
# The path of the Mailman mail wrapper script
MM_WRAP=MM_HOME/mail/mailman
#
# The path of the list config file (used as a required file when
# verifying list addresses)
MM_LISTCHK=MM_HOME/lists/${lc::$local_part}/config.pck
# end
</programlisting>
          </para>
          </sect4>
          <sect4 id="mailman-conf-transport">
            <title>Transport</title>
              <para>
All the configuration files belonging to transport type are stored in
the <filename>/etc/exim4/conf.d/transport/</filename> directory. You
can add the following content to a new file named <filename>
40_exim4-config_mailman</filename>:

<programlisting>
  mailman_transport:
   driver = pipe
   command = MM_WRAP \
               '${if def:local_part_suffix \
                     {${sg{$local_part_suffix}{-(\\w+)(\\+.*)?}{\$1}}} \
                     {post}}' \
               $local_part
    current_directory = MM_HOME
    home_directory = MM_HOME
    user = MM_UID
    group = MM_GID
</programlisting>
              </para>
          </sect4>
          <sect4 id="mailman-conf-router">
            <title>Router</title>
              <para>
All the configuration files belonging to router type are stored in the
<filename>/etc/exim4/conf.d/router/</filename> directory. You can add the following content
in to a new file named <filename>101_exim4-config_mailman</filename>:
<programlisting>
  mailman_router:
   driver = accept
   require_files = MM_HOME/lists/$local_part/config.pck
   local_part_suffix_optional
   local_part_suffix = -bounces : -bounces+* : \
                       -confirm+* : -join : -leave : \
                       -owner : -request : -admin
   transport = mailman_transport
</programlisting>

              </para>
<warning>
<para>
The order of main and transport configuration files can be in any order.
But, the order of router configuration files must be the same.
This particular file must appear before the
<application>200_exim4-config_primary</application> file.
These two configuration files contain same type of information. The
first file takes the precedence. For more details, please refer to the
references section.
</para>
</warning>
          </sect4>
          <sect4 id="mailman-conf-mailman">
            <title>Mailman</title>
              <para>
Once mailman is installed, you can run it using the following command:
<screen>
<command>sudo /etc/init.d/mailman start</command>
</screen>

Once mailman is installed, you should create the default mailing list.
Run the following command to create the mailing list:


<screen>
<command>sudo /usr/sbin/newlist mailman</command>
</screen>

<programlisting>
  Enter the email address of the person running the list: bhuvan at ubuntu.com
  Initial mailman password:
  To finish creating your mailing list, you must edit your <filename>/etc/aliases</filename> (or
  equivalent) file by adding the following lines, and possibly running the
  `newaliases' program:

  ## mailman mailing list
  mailman:              "|/var/lib/mailman/mail/mailman post mailman"
  mailman-admin:        "|/var/lib/mailman/mail/mailman admin mailman"
  mailman-bounces:      "|/var/lib/mailman/mail/mailman bounces mailman"
  mailman-confirm:      "|/var/lib/mailman/mail/mailman confirm mailman"
  mailman-join:         "|/var/lib/mailman/mail/mailman join mailman"
  mailman-leave:        "|/var/lib/mailman/mail/mailman leave mailman"
  mailman-owner:        "|/var/lib/mailman/mail/mailman owner mailman"
  mailman-request:      "|/var/lib/mailman/mail/mailman request mailman"
  mailman-subscribe:    "|/var/lib/mailman/mail/mailman subscribe mailman"
  mailman-unsubscribe:  "|/var/lib/mailman/mail/mailman unsubscribe mailman"

  Hit enter to notify mailman owner...

  # 
</programlisting>

We have configured exim to recognize all emails from mailman. So, it is
not mandatory to make any new entries in
<filename>/etc/aliases</filename>.  If you have made any changes
to the configuration files, please ensure that you restart those
services before continuing to next section.
</para>
          </sect4>
        </sect3>
        <sect3 id="mailman-admin" status="complete">
          <title>Administração</title>
<para>
We assume you have a default installation. The
mailman cgi scripts are still in
<application>/usr/lib/cgi-bin/mailman/</application> directory.  Mailman
provides a web based administration facility. To access this page, point
your browser to the following url: 

</para>
<para>
http://hostname/cgi-bin/mailman/admin
</para>

<para>
The default mailing list, <emphasis>mailman</emphasis>,
will appear in this screen. If you click the mailing list name, it
will ask for your authentication password.  If you enter the correct
password, you will be able to change administrative settings of this
mailing list.

You can create a new mailing list using command line utility
(<command>/usr/sbin/newlist</command>).
Alternatively, you can create a new mailing list using web interface. 
</para>
        </sect3>
        <sect3 id="mailman-users" status="complete">
          <title>Utilizadores</title>
<para>
Mailman provides a web based interface for users. To access this page,
point your browser to the following url:
</para>

<para>
http://hostname/cgi-bin/mailman/listinfo
</para>

<para>
The default mailing list, <emphasis>mailman</emphasis>,
will appear in this screen. If you
click the mailing list name, it will display the subscription form. You
can enter your email address, name (optional), and password to subscribe.
An email invitation will be sent to you. You can follow the
instructions in the email to subscribe.
</para>
        </sect3>
        <sect3 id="mailman-references" status="complete">
          <title>Referências</title>
<para>
<ulink url="http://www.list.org/mailman-install/index.html"> GNU Mailman
- Installation Manual</ulink>
</para>
<para>
<ulink url="http://www.exim.org/howto/mailman21.html">HOWTO - Using Exim
4 and Mailman 2.1 together</ulink>
</para>
        </sect3>
      </sect2>
    </sect1>
	</chapter>
