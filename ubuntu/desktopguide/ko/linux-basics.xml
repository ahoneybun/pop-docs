<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE chapter PUBLIC "-//OASIS//DTD DocBook XML V4.3//EN" 
	"http://www.oasis-open.org/docbook/xml/4.3/docbookx.dtd" [
<!ENTITY % globalent SYSTEM "../../../libs/global.ent">
%globalent;
<!ENTITY % cdo-C SYSTEM "../../../libs/cdo-C.ent">
%cdo-C;
<!ENTITY % gnome-menus-ko SYSTEM "../../../ubuntu/libs/gnome-menus-ko.ent">
%gnome-menus-ko;
<!ENTITY % xinclude SYSTEM "../../../libs/xinclude.mod">
%xinclude;
<!ENTITY language "en">
<!ENTITY ubuntu '<phrase>Ubuntu</phrase>'>
]>
<chapter id="linux-basics" status="review">
	<title>리눅스 기본</title>
				<para>리눅스는 유닉스 운영체제에 영향을 받아 1969 년에 처음 나타났고, 그 이후에도 꾸준히 사용되고 개발되어져 왔습니다. 수많은 유닉스 이후의 디자인 관례는 리눅스에 또한 존재하고, 시스템의 기본을 이해하는 데 중심이 되었습니다.</para>
				<para>유닉스는 명령어 라인 인터페이스를 사용하는 것으로 초기에 고안되었고, 이 전통은 리눅스에도 그대로 전하여 졌습니다. 그러므로, 창을 가지는 그래픽 사용자 인터페이스, 아이콘과 메뉴는 기본 명령어 라인 인터페이스의 위에 만들어 졌습니다. 나아가, 이것은 리눅스 파일 시스템은 명령어 라인에서 쉽게 관리와 접근을 할 수 있게 구조화 되었음을 의미 합니다.</para>
		<sect1 id="directories-file-systems" status="complete">
			<title>디렉토리와 파일 시스템</title>
				<para>유닉스와 리눅스 파일 시스템은 계층적인 트리 구조로 구성되어 있습니다. 파일 시스템의 최상위 계층은 <filename>/</filename> 또는 <emphasis>루트 디렉토리</emphasis>입니다. 리눅스와 유닉스의 디자인 철학에서는 (하드 디스크, 파티션, 그리고 이동형 미디어를 포함하는) 모든 것을 파일로 생각한다는 것입니다. 이 것은 모든 (다른 디스크와 파티션을 포함하는) 다른 파일과 디렉토리들은 루트 디렉토리 아래 존재한다는 것을 뜻합니다.</para>
				<para>예를 들면, <filename>/home/jebediah/cheeses.odt</filename> 는 루트(<filename>/</filename>) 디렉토리 아래의 <filename>home</filename> 디렉토리 아래의 <filename>jebediah</filename> 디렉토리에 존재하는 <filename>cheeses.odt</filename> 파일의 유효한 전체 경로를 보여줍니다.</para>
				<para>루트(<filename>/</filename>) 디렉토리 아래에 대부분의 리눅스 배포판에 사용되어지는 일반적인 중요한 시스템 디렉토리 집합이 있습니다. 다음은 루트 (<filename>/</filename>) 디렉토리 바로 아래에 있는 일반적인 디렉토리의 목록입니다:</para>
					<itemizedlist>
						<listitem>
							<para><filename>/bin</filename> - 중요한 바이너리(<emphasis>bin</emphasis>ary) 프로그램</para>
						</listitem>
						<listitem>
							<para><filename>/boot</filename> - files that are required to <emphasis>boot</emphasis> the computer
							</para>
						</listitem>
						<listitem>
							<para><filename>/dev</filename> - 장치 (<emphasis>dev</emphasis>ice) 파일</para>
						</listitem>
						<listitem>
							<para><filename>/etc</filename> - 설정 파일, 시작 스크립트, 기타(<emphasis>etc</emphasis>)...</para>
						</listitem>
						<listitem>
							<para><filename>/home</filename> - 사용자의 홈(<emphasis>home</emphasis>) 디렉토리</para>
						</listitem>
						<listitem>
							<para><filename>/lib</filename> - 시스템 라이브러리(<emphasis>lib</emphasis>raries)</para>
						</listitem>
						<listitem>
							<para><filename>/lost+found</filename> - 루트(<filename>/</filename>) 디렉토리 아래에 존재하는 파일을 위한 <emphasis>lost+found</emphasis> 시스템을 제공합니다.</para>
						</listitem>
						<listitem>
							<para><filename>/media</filename> - 마운트된(읽혀진) CD, 디지털 카메라, 기타 등등의 이동형 미디어(<emphasis>media</emphasis>)</para>
						</listitem>
						<listitem>
							<para><filename>/mnt</filename> - 마운트(<emphasis>m</emphasis>ou<emphasis>nt</emphasis>) 된 파일시스템</para>
						</listitem>
						<listitem>
							<para><filename>/opt</filename> - 선택적인(<emphasis>opt</emphasis>ional) 프로그램이 설치될 위치를 제공합니다.</para>
						</listitem>
						<listitem>
							<para><filename>/proc</filename> - 현재 실행 중인 프로세스(<emphasis>proc</emphasis>esses)를 포함하는 시스템의 상태에 관한 정보를 관리할 수 있는 특별한 동적 디렉토리</para>
						</listitem>
						<listitem>
							<para><filename>/root</filename> - '슬래시-루트'라고 발음되는 <emphasis>root</emphasis> 사용자의 홈 디렉토리</para>
						</listitem>
						<listitem>
							<para><filename>/sbin</filename> - 중요한 시스템 바이너리(<emphasis>s</emphasis>ystem <emphasis>bin</emphasis>aries)</para>
						</listitem>
						<listitem>
							<para><filename>/sys</filename> - contains information about the <emphasis>sys</emphasis>tem
							</para>
						</listitem>
						<listitem>
							<para><filename>/tmp</filename> - 임시(<emphasis>t</emphasis>e<emphasis>mp</emphasis>orary) 파일</para>
						</listitem>
						<listitem>
							<para><filename>/usr</filename> - 모든 사용자(<emphasis>us</emphasis>e<emphasis>r</emphasis>s) 가 쓸수 있는 프로그램과 파일</para>
						</listitem>
						<listitem>
							<para><filename>/var</filename> - 시스템 로그와 데이터베이스 같은 가변(<emphasis>var</emphasis>iable) 파일</para>
						</listitem> 
					</itemizedlist>
		</sect1>

		<sect1 id="permissions" status="review">
			<title>접근 권한</title>
                       <para>리눅스 시스템 상의 모든 파일은 다른 사용자들에게 보기, 수정이나 실행을 허용하거나 막는 권한을 가집니다. 슈퍼 사용자 "root"는 시스템 상의 어떤 파일도 접근할 수 있습니다. 각 파일은 접근 제한, 사용자 제한과 소유자/그룹을 가집니다.</para>
                       <para>모든 파일은 다음의 세 가지 접근 권한에 의해 지켜 집니다, 세 가지는 중요도 순서로:</para>
                       <itemizedlist>
                         <listitem>
                           <para><emphasis>사용자</emphasis></para>
                           <para>파일의 소유자인 사용자에게 적용되는 권한</para>
                         </listitem>
                         <listitem>
                           <para><emphasis>그룹</emphasis></para>
                           <para>파일에 관련된 그룹에 적용되는 권한</para>
                         </listitem>
                         <listitem>
                           <para><emphasis>다른 사용자 권한</emphasis></para>
                           <para>모든 다른 사용자들에게 적용됩니다.</para>
                         </listitem>
                       </itemizedlist>
                       <para>권한의 각 세가지 집합의 내부는 행동의 권한이다. 파일과 디렉토리에 따라 다르게 적용된 방법에 따라서 권한은 다음과 같이 구분된다.</para>
                       <itemizedlist>
                         <listitem>
                           <para><emphasis>읽기</emphasis></para>
                           <para>파일을 읽거나 열 수 있습니다.</para>
                           <para>디렉토리 내용을 볼 수 있습니다.</para>
                         </listitem>
                         <listitem>
                           <para><emphasis>쓰기</emphasis></para>
                           <para>파일을 편집하거나 삭제할 수 있습니다.</para>
                           <para>디렉토리 내용을 수정할 수 있습니다.</para>
                         </listitem>
                         <listitem>
                           <para><emphasis>실행</emphasis></para>
                           <para>실행할 수 있는 파일들은 프로그램처럼 실행될 수 있습니다.</para>
                           <para>디렉토리에 들어갈 수 있습니다.</para>
                         </listitem>
                       </itemizedlist>
				<para>To view and edit the permissions on files and directories, open the <phrase>&home-folder;</phrase> and right-click on a file or directory. Then select <guimenu>Properties</guimenu>.  The permissions exist under the <guilabel>Permissions</guilabel> tab and allow for the editing of all permission levels, if you are the owner of the file.
				</para>
				<para>To learn more about file permissions in Linux, read the <ulink url="&wiki-filepermissions;">file permissions page</ulink> in the Ubuntu Wiki.
				</para>
		</sect1>


		<sect1 id="terminals" status="review">
		<title>터미널</title>
            <para>명령줄에서 작업하는 것은 생각보다 어렵지 않습니다. 명령줄을 어떻게 사용해야 하는지 알아야 할 특별한 지식이 필요하지 않습니다. 때때로 충분하지 않은 대부분의 프로그램을 위한 그래픽 도구들이 있다고 하더라도 리눅스에서는 대부분을 명령줄을 사용하는 것으로써 할 수 있습니다. 터미널은 편리합니다.</para>
    	      <para>터미널은 종종 명령 프롬프트 또는 쉘이라고 불려집니다. 예전에 이 것은 컴퓨터와 상호작용하는 방법이었지만 리눅스 사용자들은 쉘을 사용하는 것이 그래픽적인 방법보다 더 빠를 수 있다는 것을 찾았고 오늘날에도 여전히 이 장점을 유지했습니다. 여기서는 터미널을 어떻게 사용하는지 배우게 될 것입니다.</para>
				<para>터미널의 원래 사용은 파일 브라우저였습니다. 실제로 GUI 환경에 문제가 생겼을 때에는 아직까지도 파일 브라우저로 사용됩니다. 당신은 터미널을 당신의 파일을 탐색하고 이미 만든 것들 본래대로 하는데 사용할 수 있습니다.</para>
		<sect2 id="starting-a-terminal" status="review">
			<title>터미널 시작하기</title>
				<para>To start <application>Terminal</application> choose &terminal;.
				</para>
		</sect2>
		<sect2 id="common-commands" status="review">
			<title>많이 사용되는 명령어</title>
				<variablelist>
					<varlistentry>
						<term>View Directories - ls
						</term>
							<listitem><para><application>ls</application> (LiSt) 는 여러 가지 색으로 파일의 목록을 보여줍니다.</para></listitem>
					</varlistentry>
					<varlistentry>
						<term>Create Directories - mkdir (directory name)
						</term>
							<listitem><para><application>mkdir</application> (MaKeDIRectory) 명령은 디렉토리를 만듭니다.</para></listitem>
					</varlistentry>
					<varlistentry>
		    			<term>Change Directories - cd (/directory/location)
		    			</term>
		    				<listitem><para><application>cd</application> (ChangeDirectory) 명령은 여러분의 현재 디렉토리에서 지정하는 다른 디렉토리로 이동할 때 사용 합니다.</para>
		    				</listitem>
					</varlistentry>
		    		<varlistentry>
		    			<term>Copy Files/Directories - cp (file or directory name) (to directory or filename)
		    			</term>
		    				<listitem><para><application>cp</application> (CoPy) 명령어는 지정한 파일을 복사합니다. <application>cp -r</application> 명령어는 지정한 디렉토리를 복사합니다.</para>
		    				</listitem>
		    		</varlistentry>
		    		<varlistentry>
		    			<term>Remove Files/Directories - rm (file or directory name)</term>
	            		<listitem><para>The <application>rm</application> (ReMove) 명령은 지정한 파일을 지웁니다. The <application>rm -rf</application> 명령은 지정한 디렉토리를 지웁니다.</para></listitem>
					</varlistentry>
		    		<varlistentry>
		    			<term>Rename Files/Directories - mv (file or directory name)</term>
							<listitem><para><application>mv</application> (MoVe) 명령은 여러분이 지정한 어떤 파일이나 디렉토리의 이름을 바꾸거나 이동시킬 것입니다.</para>
		    				</listitem>
					</varlistentry>
					<varlistentry>
						<term>Find Files/Directories - locate (file or directory name)</term>
							<listitem><para><application>locate</application> 명령은 여러분이 지정한 파일이름을 여러분의 컴퓨터에서 찾을 것입니다. 이 것은 여러분의 시스템을 빨리 찾기 위해서 파일의 인덱스를 사용합니다: 이 인덱스를 갱신하기 위해서는 <application>updatedb</application> 를 사용하십시오. 이 명령은 켜놓은 채로 두면 매일 자동적으로 실행됩니다. 그것은 관리자 권한에서 실행됨을 필요로 합니다.(<xref linkend="root-and-sudo"/> 를 참고하십시오.)</para>
							</listitem>
					</varlistentry>
					</variablelist>
			<para>하나 혹은 여러 개의 파일을 검색할 때 (모든 파일을 뜻하는) "*" 혹은 (한 글자에 해당하는) "?" 와 같은 와일드카드(wildcard)를 사용할 수 있습니다.</para>
			<para>For a more thorough introduction to the Linux command line, please read the <ulink url="&wiki-BasicCommands;">command line introduction</ulink> on the Ubuntu wiki.
			</para>
		</sect2>
		<sect2 status="complete">
			<title>콘솔 모드로 전환하기</title>
				<para>우분투에서 명령줄의 일반적인 사용법은 터미널을 시작하는 것입니다.(위의 <xref linkend="starting-a-terminal"/> 을 참고하십시오.) 그러나 완전히 콘솔로 전환하는 것이 유용할 때도 있습니다.</para>
				<procedure>
					<step>
						<para>Use the <keycombo>
								<keycap>Ctrl</keycap>
								<keycap>Alt</keycap>
								<keycap>F1</keycap>
							</keycombo>
							shortcut keys to switch to the first console.
						</para>
					</step>
					<step>
						<para>To switch back to Desktop mode, use the <keycombo>
								<keycap>Ctrl</keycap>
								<keycap>Alt</keycap>
								<keycap>F7</keycap>
							</keycombo> shortcut keys.
						</para>
					</step>
				</procedure>
					<note>
						<para>There are six consoles available. Each one is accessible with the
							shortcut keys <keycombo>
								<keycap>Ctrl</keycap>
								<keycap>Alt</keycap>
								<keycap>F1</keycap>
							</keycombo> to <keycombo>
								<keycap>Ctrl</keycap>
								<keycap>Alt</keycap>
								<keycap>F6</keycap>
							</keycombo>.
						</para>
					</note>
		</sect2>
		<sect2 status="review">
			<title>터미널 모드에서 비프음 비활성화</title>
				<procedure>
					<step>
						<para>
						Start a <application>Terminal</application>
						session,
						select: <phrase>&terminal;</phrase>
						from the desktop menu system. 
						</para>
					</step>
					<step>
						<para>
							<menuchoice>
								<guimenu>Edit</guimenu>
								<guimenuitem>Current Profile...</guimenuitem>
							</menuchoice>
							. Select the
							<guibutton>General</guibutton> tab. Uncheck the
							<guilabel>Terminal bell</guilabel>
							checkbox.
						</para>
					</step>
				</procedure>
		</sect2>
	</sect1>

	<sect1 id="text-editing" status="review">
  			<title>텍스트 편집</title>
 			<para>All of the configurations and settings in Linux are saved in text files. Even though you most often can edit configurations through the graphical interface, you may occasionally have to edit them by hand. <application>Gedit</application> is the default Ubuntu text editor, which you can launch by clicking &text-editor; on the desktop menu system.
 			</para>
 			<para>때때로 이 안내서에서는 설정파일을 수정하기 위해 <application>gksudo</application>를 이용해 명령줄에서 관리자 권한으로 <application>Gedit</application>를 실행합니다.</para>
			<para>만일 명령줄에서 텍스트 편집기를 사용해야 할 일이 있다면 간단한 텍스트 편집기인 <application>nano</application>를 사용할 수 있습니다. <application>nano</application>를 명령줄에서 실행할 때에는 항상 다음과 같이 사용합니다:<screen>nano -w</screen></para>
			<para>For more information about how to use <application>nano</application>, refer to the <ulink url="&wiki-Nano;">guide on the wiki</ulink>.
			</para>
			<para>우분투에서 사용할 수 있는 몇 가지 다른 텍스트 기반 에디터가 있고, 인기있는 것으로는 <application>VIM</application> 과 <application>Emacs</application> 가 있습니다. (각각의 장점과 단점에 대한 것은 리눅스 커뮤니티 내에서 너무나 유명한 평가가 있었습니다.) 이것들은 <application>nano</application> 를 사용하는 것보다 종종 더 복잡하지만, 또한 보다 강력합니다.</para>
	</sect1>

		<sect1 id="users-and-groups" status="review">
			<title>사용자와 그룹</title>
			<para>To add users or groups to your system, you can use the <application>Users And Groups</application> application located in &users-groups;.
			</para>
			<note>
				<para>Remember to log off and log back in order for the changes to become effective.
				</para>
			</note>
			<para>새로운 사용자를 추가하려면, <guilabel>사용자 더하기</guilabel>를 클릭하고, 데이터 필드를 채운 후에 <guilabel>확인</guilabel>을 누릅니다. 각 사용자의 등록 정보를 편집하려면, 주 <guilabel>사용자</guilabel> 창에 위치한 <guilabel>등록 정보</guilabel> 버튼을 누릅니다.</para>
			<para>새로운 그룹을 추가하려면, <guilabel>그룹</guilabel> 탭을 선택하고, <guilabel>그룹 더하기</guilabel>를 클릭합니다. 새로운 그룹을 위한 이름을 선택하고, 만약 원한다면, <guilabel>그룹 ID</guilabel>를 위한 기본 설정값을 변경합니다. 만약 여러분이 할당한 <guilabel>그룹  ID</guilabel>가 이미 사용 중이면, 시스템은 경고를 합니다.</para>
			<para>새롭게 만든 그룹에 사용자를 더하는 것은 왼쪽 메뉴에서 사용자를 선택하고 <guilabel>더하기</guilabel> 단추를 눌러서 할 수 있습니다. 사용자를 지우는 것은 사용자를 더하는 것과 마찬가지로 간단합니다. 오른쪽 메뉴에서 사용자를 선택한 후 <guilabel>지우기</guilabel>를 클릭합니다. 준비가 되면, <guilabel>확인</guilabel>을 누르고 제대로 입력이 되면 사용자와 함께 새로운 그룹이 만들어집니다.</para>
			<para>그룹의 등록 정보를 편집하는 것은, <guilabel>그룹</guilabel> 창에서, 그룹 이름을 선택하고 <guilabel>등록 정보</guilabel> 단추를 누릅니다.</para>
			<para>시스템에서 사용자 또는 그룹을 지우는 것은, 삭제하고자 하는 사용자 또는 그룹을 선택한 후 <guilabel>지우기</guilabel>를 누릅니다.</para>
		</sect1>

</chapter>

